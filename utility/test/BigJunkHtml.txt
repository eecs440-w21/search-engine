<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Preface</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Preface
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1Slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm"><b>Other topics</b></a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm"><b>Preface</b></a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
			
<h3>
Preface<br/>
<small><a href="index.htm">Previous</a> | <a href="02-Introduction.htm">Next</a></small>
</h3>

<p>
Hamilton C shell is a command shell and utilities package for Windows
similar to that found on Unix or Linux systems.  The zillions of popular
utilities &ndash; <tt>grep</tt>, <tt>fgrep</tt>, <tt>head</tt>, <tt>tail</tt>, <tt>diff</tt>, <tt>sed</tt>, <tt>cron</tt>, <tt>tar</tt>, <tt>mv</tt>, <tt>cp</tt>, <tt>rm</tt>,
<tt>su</tt>, etc. &ndash; provide the vocabulary.  The shell itself ties it together
with a powerful interactive scripting language and an elegant user
interface.  The language grammar includes a complete set of control
structures, <tt>if</tt>, <tt>switch</tt>, <tt>for</tt>, <tt>foreach</tt>, <tt>repeat</tt>,
<tt>while</tt> and <tt>proc</tt>,
block-structured local variables, floating point, wildcarding
and more.
</p>

<p>
Hamilton C shell began life in September, 1987 when I quit my job and set
up shop in my living room, soon after the birth of my first child.  I&rsquo;d
loved both operating systems and language processors (and this combined
both!), PC&rsquo;s were about to get the big-OS capabilities I liked working
with, I&rsquo;d always wanted to be an entrepreneur and I wanted to be home
with my kids.  Fifteen months and 35,000 lines of code later, Hamilton
C shell became the first multi-threaded application to ship for OS/2.  In
July 1992, it became the very first third party application to ship on NT.
These days, it&rsquo;s about 240,000 lines.
</p>

<p>
This latest release has been completely refreshed for Windows 7 and
now includes a full 64-bit build.
</p>

<p>
I hope you enjoy my work.
</p>

<p>
Nicole Hamilton<br/>
Redmond, Washington<br/>
September 15, 2014
</p>

<p>
<i>First written at Wayland, Massachusetts, December 9, 1988.</i>
</p>

<h3>
<small><a href="index.htm">Previous</a> | <a href="02-Introduction.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Introduction</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Introduction
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1Slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm"><b>Other topics</b></a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>User guide</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm"><b>Introduction</b></a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
		
<h3>
Introduction<br/>
<small><a href="01-Preface.htm">Previous</a> | <a href="03-Installation.htm">Next</a></small>
</h3>


<h4>Topics</h4>

<p>
<a href="#Features">Features</a><br/>
<a href="#Improvements">Over the original Unix C shell</a><br/>
<a href="#TypicalUsers">Typical users</a><br/>
</p>

<h4>
<a name="Features"></a>Features
</h4>

<p>
Hamilton C shell is a language for interactively using Windows.  Compared to the standard Command Prompt,
it provides a vocabulary and grammar that allows much more complex activities to be described.  Here are
some of the major features.
</p>

<ul>
<li>
<p>
Command line editing of enormous statements with arrow keys, filename completion and command completion.
</p>
</li>

<li>
<p>
User-definable function keys.
</p>
</li>

<li>
<p>
Fully recursive grammar.  Statements can be arbitrarily nested or piped without concern for statement length or other arbitrary restrictions.
</p>
</li>

<li>
<p>
Procedures and aliases.  The vocabulary of the language is meant to be extensible by the user.
</p>
</li>

<li>
<p>
Variables, arrays and expressions.  Integer and floating point arithmetic, pattern matching facilities and various file system tests and editing operators provide an expressive grammar.
</p>
</li>

<li>
<p>
Threads and processes.  Child threads and processes can be spawned to run commands asynchronously or in the background.
</p>
</li>

<li>
<p>
Command substitution. The output of one command can be stuffed back on the command line as arguments to another.
</p>
</li>

<li>
<p>
History.  Past commands can be recalled and edited.
</p>
</li>

<li>
<p>
Advanced filename wildcarding.
</p>
</li>

<li>
<p>
An extensive vocabulary of powerful little utilities:  &ldquo;All the usual suspects&rdquo; including <tt>grep</tt>, <tt>fgrep</tt>, <tt>head</tt>, <tt>tail</tt>, <tt>diff</tt>, <tt>sed</tt>, <tt>cron</tt>, <tt>tar</tt>, <tt>su</tt>, <tt>ls</tt>, <tt>mv</tt>, <tt>cp</tt>, <tt>rm</tt>, etc.
</p>
</li>

</ul>

<h4>
<a name="Improvements"></a>Improvements over the original Unix C shell
</h4>

<p>
This C shell borrows its basic language concepts from the original and wildly popular C shell written by Bill Joy in the late 1970s at the University of California, Berkeley, as part of BSD UNIX project.
But from there, it&rsquo;s been adapted and extended in a number of way with modern compiler technology for Windows:
</p>

<ul>
<li>
<p>
A modern top-down parser is used for better language recognition and performance.
</p>
</li>

<li>
<p>
It&rsquo;s easier to use.  The syntax and grammar have been made flexible and more consistent with other modern high level language conventions.
</p>
</li>

<li>
<p>
It knows about Windows, HPFS, NTFS, long filenames, environmental variables, networks, international character sets, and about all the various kinds of applications that Windows supports.
</p>
</li>

<li>
<p>
You can customize the C shell to give you as little or as much Windows versus UNIX/Linux behavior as you choose.   For example, either <tt>\</tt> or <tt>/</tt> can be used in a filename.  Either <tt>-</tt> or <tt>/</tt> can be used as an option switch character for the utilities.  You can decide whether typing <tt>cd</tt> with no destination directory means report the current directory Windows-style) or take you to the home directory, and so on.  (The chapter on <a href="48-CustomizingTheShell.htm">customizing the C shell</a> is devoted to this topic.)
</p>
</li>

<li>
<p>
Threads are used extensively to achieve performance and functionality not possible in UNIX.
</p>
</li>

<li>
<p>
Feedback to the user, especially when reporting errors has been improved.  If you encounter an error inside a complex script, you&rsquo;ll even get a complete dump of the call stack showing how you got there.
</p>
</li>
</ul>

<h4>
<a name="TypicalUsers"></a>Typical users
</h4>

<p>
Most users of Hamilton C shell are relatively technically oriented computer users.  Often, they&rsquo;re software developers.  They have a business need for Windows system.
</p>

<p>
Peering over their shoulders, they typically have lots of windows open on the screen.  Many of the windows are running copies of this shell.  Some copies are transient, created to display with little snippets of information needed on the spur of the moment.  Other copies of the shell would be used for more long-running projects:  for example, getting a make working for a major application.
A shell window is like any other application window but with a different paradigm.  Instead of  data, rows and columns of numbers or lines of text, the object being manipulated is the machine itself.
A good shell tackles a different problem than icons and windows.  Instead of the point-and-shoot immediacy of &ldquo;do this single thing now,&rdquo; a shell offers language and the ability to describe more customized or repetitive actions, e.g., identify a suitable set of files, perform some action against them and filter the results in some interesting way.
</p>

<h3>
<small><a href="01-Preface.htm">Previous</a> | <a href="03-Installation.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Installation</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Installation
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1Slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm"><b>Other topics</b></a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm"><b>Installation</b></a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent" style="width: 434px">
		
<h3>
Installation<br/>
<small><a href="02-Introduction.htm">Previous</a> | <a href="04-Tutorial.htm">Next</a></small>
</h3>

<p>
This section outlines how to install and uninstall Hamilton C shell.
</p>

<p>
If you encounter problems, consult the section on <a href="56-CommonProblems.htm">common problems</a> or contact us for <a href="61-Support.htm">support</a>.
</p>

<h4>
System requirements
</h4>

<p>
Hamilton C shell will install and run on any 32-bit or 64-bit version of
Windows or Windows Server, including Vista and Windows 7 or 8.
</p>

<p>
Roughly 32M of disk space is required.  Most of that is for the user guide.
</p>


<h4>
Installation procedure
</h4>

<p>
Simply double-click to open the Hamilton C shell installer <tt>.msi</tt> file.
</p>

<p>
Hamilton C shell uses the standard Microsoft installer to ensure an easy, automated install and a complete uninstall.  There are no manual steps to copy files or create shortcuts.
</p>

<p>
Hamilton C shell does not use any registry keys except just the ones the installer creates so that the Control Panel&rsquo;s Add or Remove Programs applet can do a clean uninstall.
</p>

<p>
You will be prompted to accept the End-User License Agreement, to confirm the directory where the program files should be installed, and choose whether this installation is for just for you or for all users.
</p>

<h4>
Uninstallation
</h4>

<p>
To completely remove Hamilton C shell from your machine, use the Control Panel's Add or Remove Programs applet.  Hamilton C shell is very well-behaved: Anything created during the installation (registry keys, shortcuts, etc.) will be totally removed.
</p>

<h3>
<small><a href="02-Introduction.htm">Previous</a> | <a href="04-Tutorial.htm">Next</a></small>
</h3>

		</div>
		<div id="screenshots">
		
			<h4 style="margin-top: 0;padding-top:0;margin-bottom: 0">
			Digitally signed Windows install file
			</h4>
		
			<p>
			Hamilton C shell is distributed as a digitally signed Windows installer <tt>.msi</tt> file.
			You can examine the signature by right-clicking and selecting Properties.
			</p>
			
			<a href="Images/Screenshots/Signed-executable-properties.png">
				<img src="Images/Screenshots/Signed-executable-properties.gif"
					alt="Hamilton C shell is digitally signed" class="shadow"/>
			</a>

			<p>
			Here's a close-up of the signature details popup.  The digital signature lets you verify
			the authenticity, even before you start the install.
			</p>

			<a href="Images/Screenshots/Signed-executable-properties.png">
				<img src="Images/Screenshots/Signed-executable-propertiesCropSignatureOK.gif"
					alt="Hamilton C shell is digitally signed" class="shadow"/>
			</a>
			
			<h4>
			Double-click to install
			</h4>
			
			<p>
			Double-clicking the <tt>.msi</tt> file starts the installation and immediately
			triggers User Account Control.
			</p>
			
			<a href="Images/Screenshots/Installer-UAC-popup-on-desktop.png">
				<img src="Images/Screenshots/Installer-UAC-popup-on-desktop.gif"
					alt="Hamilton C shell is digitally signed" class="shadow"/>
			</a>
			
			<h4>
			Popups you'll see during the installation
			</h4>
			
			<a href="Images/Screenshots/Installer-UAC-popup-on-desktop.png">
				<img src="Images/Screenshots/Installer-UAC-popup-on-desktopCrop.gif"
					alt="Hamilton C shell is digitally signed" class="shadow"/>
			</a>
			
			<p>
			1. User Account Control.  Our signature allows UAC to verify that the install
			file is really ours and hasn't been tampered with.
			</p>
			
			<a href="Images/Screenshots/Installer-welcome-popup.png">
				<img src="Images/Screenshots/Installer-welcome-popup.png"
					alt="Welcome to the Hamilton C shell 2012 x64 setup wizard" class="shadow"/>
			</a>
			<p>
			2. Welcome to the Hamilton C shell 2012 x64 Setup Wizard.
			</p>
			
			<a href="Images/Screenshots/Installer-license-popup.png">
				<img src="Images/Screenshots/Installer-license-popup.png"
					alt="License agreement" class="shadow"/>
			</a>
			<p>
			3. Accept the <a href="60-License.htm">license agreement</a>.
			</p>
			
			<a href="Images/Screenshots/Installer-installation-folder.png">
				<img src="Images/Screenshots/Installer-installation-folder.png"
					alt="Installation folder" class="shadow"/>
			</a>
			<p>
			4. Choose the installation folder and whether it's for everyone, meaning
			it'll appear in the Start menus for all users, or just for yourself.
			</p>
			
			<a href="Images/Screenshots/Installer-confirm-popup.png">
				<img src="Images/Screenshots/Installer-confirm-popup.png"
					alt="Confirm installation" class="shadow"/>
			</a>
			<p>
			5. Confirm that you'd like to procede.
			</p>
			
			<a href="Images/Screenshots/Installer-complete-popup.png">
				<img src="Images/Screenshots/Installer-complete-popup.png"
					alt="Confirm installation" class="shadow"/>
			</a>
			<p>
			6. Installation complete.
			</p>
			
			<p>
			When it's done, you'll be left with a shortcut on your desktop.
			</p>
			
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
﻿<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Tutorial</title>
	
	<script type="text/javascript" src="Arrows.js"></script>
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Tutorial introduction to Hamilton C shell,
	which recreates the original UNIX C shell and utilities completely from scratch
	on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Tutorials
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm"><b>Getting started</b></a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
			

<h3>
Getting started<br/>
<small><a href="03-Installation.htm">Previous</a> |
<a href="04.1-CommandLineEditing.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#TheCshellCommandPrompt">The C shell command prompt</a><br/>
<a href="#BasicStatements">Basic statements</a><br/>
<a href="#CustomizingTheScreenColors">Customizing the screen colors</a><br/>
<a href="#TourBeginsHere">The tour begins here</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<h4>
<a name="TheCshellCommandPrompt"></a>The C shell command prompt
</h4>

<p>
Starting Hamilton C shell is as simple as just double-clicking the icon.  After the initial greeting, you&rsquo;ll see the first prompt.
</p>

<div class="codesample">Hamilton C shell(tm) x64 Release 5.1.d
Copyright (c) 1988-2014 by Hamilton Laboratories.  All rights reserved.
1 C% <span class="yellow">_</span>
</div>

<p>
The <tt>1 C%&nbsp;</tt> prompt tells you the C shell will remember what you type as command number 1 and that your current drive is <tt>C:</tt> (or whatever it is on your machine.)  The <tt>%</tt> is traditional; rather like <tt>&gt;</tt> for the Windows command prompt.
</p>

<p>
When it starts, the current directory is your home directory, typically <tt>c:\Users\<var>your-user-id</var></tt>.  The C shell&rsquo;s <tt>cd</tt> command works like the regular Windows <tt>cd</tt> by default:  If you don&rsquo;t give it any argument, it reports the current directory. 
</p>

<div class="codesample">1 C% cd
c:\Users\Hamilton
2 C% <span class="yellow">_</span>
</div>

<p>
Naturally, you can change your prompt to be anything you like.  For example, to get a prompt that looks like one you might get from <tt>cmd.exe</tt>:
</p>

<div class="codesample">3 C% set prompt1 = '$cwd&gt; '
c:\Users\Hamilton&gt; <span class="yellow">_</span>
</div>

<p>
This works by taking the value of the <tt>cwd</tt> (current working directory) variable and pasting <tt>&gt;&nbsp;</tt> onto the end.  The value is recalculated each time a prompt is given, so it always displays an up-to-date value.  (Lists of all the builtin variables and procedures are given in later sections.)
</p>

<p>
To set it back:
</p>

<div class="codesample">c:\Users\Hamilton&gt; unset prompt1
4 C% <span class="yellow">_</span>
</div>

<h4>
<a name="BasicStatements"></a>Basic statements
</h4>

<p>
Generally speaking, whatever commands you might have typed into <tt>cmd.exe</tt> (or <tt>command.com</tt>) will still work here.  Even an internal <tt>cmd.exe</tt> function like <tt>dir</tt> works:
</p>

<div class="codesample">4 C% dir
 Volume in drive C is Windows7
 Volume Serial Number is C8D6-348A

 Directory of C:\Users\Hamilton

03/16/2012  12:43 AM    &lt;DIR&gt;          .
03/16/2012  12:43 AM    &lt;DIR&gt;          ..
03/13/2012  12:02 PM    &lt;DIR&gt;          Contacts
03/16/2012  02:17 AM    &lt;DIR&gt;          Desktop
03/13/2012  12:02 PM    &lt;DIR&gt;          Documents
03/13/2012  12:02 PM    &lt;DIR&gt;          Downloads
03/13/2012  12:03 PM    &lt;DIR&gt;          Favorites
03/13/2012  12:02 PM    &lt;DIR&gt;          Links
03/13/2012  12:02 PM    &lt;DIR&gt;          Music
04/18/2012  03:25 PM    &lt;DIR&gt;          Pictures
03/13/2012  12:02 PM    &lt;DIR&gt;          Saved Games
03/13/2012  12:02 PM    &lt;DIR&gt;          Searches
03/13/2012  12:02 PM    &lt;DIR&gt;          Videos
               0 File(s)              0 bytes
              13 Dir(s)  30,914,285,568 bytes free
5 C% <span class="yellow">_</span>
</div>

<p>
But you also a complete set of Unix-style utilities, for example, <tt>ls</tt>.
</p>
<div class="codesample">5 C% ls
<span class="bright">Contacts     Documents    Favorites    Music        Saved Games  Videos
Desktop      Downloads    Links        Pictures     Searches</span>
6 C% <span class="yellow">_</span>
</div>

<p>
If the command you type refers to a <tt>.cmd</tt> batch file or a <tt>cmd.exe</tt> internal function,  Hamilton C shell passes it to a child process running <tt>cmd.exe</tt> for evaluation.  <tt>cmd.exe</tt>&rsquo;s builtin functions are intercepted with aliases defined in in <tt>startup.csh</tt>.  Everything else is evaluated directly by Hamilton C shell.  For example, if you type the name of an <tt>.exe</tt> file, the appropriate CreateProcess call to the Windows kernel to start that program will be done directly by Hamilton C shell.
</p>

<p>
A bit-mapped hash mechanism is used so that when you type the name of a command, the shell zeroes right in on  file you mean.  It doesn&rsquo;t have to check every path directory for every possible extension.  Naturally, if you type a command that doesn&rsquo;t exist, the shell complains:
</p>

<div class="codesample">6 C% zork
csh:  Couldn't find an executable file named 'zork'.
7 C% <span class="yellow">_</span>
</div>

<p>
By being more than merely a wrapper around an existing command processor, several advantages are created:  (1) performance is understandably (and visibly!) much higher and (2) limitations on command line lengths, etc., become the relatively generous limits of Windows, rather than the restrictive limits of <tt>cmd.exe</tt>.
</p>


<h4>
<a name="CustomizingTheScreenColors"></a>Customizing the screen colors
</h4>

<p>
The C shell&rsquo;s inherits its default screen colors from the console window when it starts up.  If you&rsquo;ve started it the default shortcut, that&rsquo;s white characters on a blue background unless you&rsquo;ve changed it.  Highlighting and color are used to make some things (special files, etc.) stand out.  All the use of color or highlighting is completely customizable.  You can choose anything you like and make changes by setting the <a href="40-EnvironmentVariables.htm#COLORS"><tt>COLORS</tt></a> and other environment variables.  For example, to set black characters on a bright white background: 
</p>

<div class="codesample">7 C% setenv COLORS = black on bright white
</div>


<h4>
<a name="TourBeginsHere"></a>The tour begins here
</h4>


<p>
The following chapters introduce the various facilities Hamilton C shell provides:
</p>

<ol>
<li>
<p>
<a href="04.1-CommandLineEditing.htm">Command line editing</a> and <a href="04.1-CommandLineEditing.htm">filename completion</a>.
</p>
</li>

<li>
<p>
The builtin and external <a href="05-TheUtilities.htm">utilities</a>.
</p>
</li>

<li>
<p>
Basic features of shell: <a href="07-IORedirection.htm">i/o redirection</a>, pipes and command substitution; the <a href="08-History.htm">history mechanism</a> and <a href="10-Wildcarding.htm">wildcarding</a>.
</p>
</li>

<li>
<p>
<a href="13-Expressions.htm">Expressions</a>, <a href="09-Variables.htm">variables</a> and <a href="14-Aliases.htm">aliases</a> and the <a href="11-Editing.htm">editing</a> and <a href="12-Quoting.htm">quoting</a> facilities. 
</p>
</li>

<li>
<p>
Programming constructs for <a href="15.1-ConditionTesting.htm">condition-testing</a>, <a href="15.2-Iteration.htm">iteration</a> and <a href="15.3-Procedures.htm">procedures</a>.
</p>
</li>

<li>
<p>
<a href="16-Scheduling.htm">Processes and threads</a> and how an activity can be placed in the background..
</p>
</li>
</ol>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="03-Installation.htm">Installation</a><br/>
<a href="Utilities/csh.htm">C shell command line options</a><br/>
<a href="40-EnvironmentVariables.htm">Environment variables</a><br/>
<a href="48-CustomizingTheShell.htm">Customizing the shell</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="17-LanguageReference.htm">Language reference</a><br/>
<a href="44-VariablesSortedByName.htm">Pre-defined variables</a><br/>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="50-BuiltinUtilities.htm">Builtin utilities</a><br/>
<a href="51-ExternalUtilities.htm">External utilities</a><br/>
<a href="52-PredefinedAliases.htm">Predefined aliases</a><br/>
<a href="53-Samples.htm">Sample scripts</a><br/>
</p>


<h3>
<small><a href="03-Installation.htm">Previous</a> |
<a href="04.1-CommandLineEditing.htm">Next</a></small>
</h3>

		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
﻿<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Command line editing</title>
	
	<script type="text/javascript" src="Arrows.js"></script>
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Tutorial introduction to using command line editing
	with Hamilton C shell."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Command line editing
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm"><b>Command line editing</b></a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
			

<h3>
Command line editing<br/>
<small><a href="04-Tutorial.htm">Previous</a> |
<a href="04.2-FilenameCompletion.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#CommandLineEditing">Command line editing</a><br/>
<a href="#CommandCompletion">Command completion</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<h3>
<a name="CommandLineEditing"></a>Command line editing
</h3>

<p>
With command line editing, you&rsquo;ll notice immediately how much easier it is do things quickly without a lot of retyping.  As you try the examples, notice how the <script type="text/javascript">
	Arrows.UpArrow( );
</script>, <kbd>Insert</kbd>, <kbd>Delete</kbd>, <kbd>Home</kbd>, <kbd>End</kbd> and other keys can be used to recall previous commands or make changes anywhere on the line.
</p>

<p>
Command line editing is like having a full-screen editor pasted onto the front end of the shell.  Key bindings are intuitive and follow accepted conventions.  You can create enormous commands that stretch over screen after screen and move around with the arrow keys, inserting or deleting anywhere.  A scrap buffer provides a basic cut-and-paste facility.
</p>

<p>
The basic key assignments are: 
</p>

<div id="keystrokes">
<p class="left">
<kbd>Insert</kbd>
</p>

<p>
Toggle between insert and overstrike modes.  (The cursor is thicker when you&rsquo;re inserting.)
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Home</kbd>&nbsp;&nbsp;&nbsp;<kbd>End</kbd>
</p>

<p>
Beginning / end of command line.
</p>
</div>

<div id="keystrokes">
<p class="left">
<script type="text/javascript">
	Arrows.LeftArrow( );
	document.write( '&nbsp;&nbsp;&nbsp;' );
	Arrows.RightArrow( );
</script>
</p>

<p>
One character left / right.
</p>
</div>

<div id="keystrokes">
<p class="left">
<script type="text/javascript">
	Arrows.UpArrow( );
	document.write( '&nbsp;&nbsp;&nbsp;' );
	Arrows.DownArrow( );
</script>
</p>


<p>
Up/down one command in the history list.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<script type="text/javascript">
	Arrows.RightArrow( );
</script>
</p>

<p>
Move one word at a time.  Similarly, with the other arrow keys.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<script type="text/javascript">
	Arrows.RightArrow( );
</script>
</p>

<p>
Delete one word at a time.  Similarly, with the other arrow keys.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Insert</kbd>
</p>

<p>
Paste one word at a time.
</p>
</div>

<div id="keystrokes" class="last">
<p class="left">
<kbd>Alt</kbd>-<kbd>Insert</kbd> 
</p>

<p>
Paste the entire contents of the scrap buffer.
</p>
</div>

<p>
If you don&rsquo;t have an <kbd>Alt</kbd> key, use <kbd>Ctrl</kbd>-<kbd>Shift</kbd> instead.
</p>

<h4 style="margin-top: 20px">
<a name="CommandCompletion"></a>Command completion
</h4>


<p>
In addition to backing up through your previous commands one at a time with Up and Down, you can also ask the shell to search back through any previous commands you&rsquo;ve typed for the last command that either started with or contained the characters in the previous word.
</p>


<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Enter</kbd>
</p>

<p>
Find the previous command that started with the characters of the preceding word.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Shift</kbd>-<kbd>Enter</kbd>
</p>

<p>
Find the previous command that contained the characters of the preceding word anywhere on the line.
</p>
</div>

<p>
Repeatedly pressing these keys cycles up through all the matching commands you&rsquo;ve previously typed.  Command completion uses something called the history mechanism to recall commands you&rsquo;ve previously typed.  Later, we&rsquo;ll devote a whole chapter to some of the more advanced uses of history.
</p>


<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="35-CommandCompletion.htm">Command completion</a><br/>
<a href="32-FilenameCompletion.htm">Filename completion</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i> Filename completion</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
</p>


<h3>
<small><a href="04-Tutorial.htm">Previous</a> |
<a href="04.2-FilenameCompletion.htm">Next</a></small>
</h3>

		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
﻿<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Filename completion</title>
	
	<script type="text/javascript" src="Arrows.js"></script>
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Tutorial introduction to using filename completion
	with Hamilton C shell."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Filename completion
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm"><b>Filename completion</b></a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
			

<h3>
Filename completion<br/>
<small><a href="04.1-CommandLineEditing.htm">Previous</a> |
<a href="05-TheUtilities.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#FilenameCompletion">Filename completion</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<h4>
<a name="FilenameCompletion"></a>Filename completion
</h4>

<p>
Filename completion is another &ldquo;creature comfort:&rdquo; you type just a fragment of a filename and let the shell fill in the rest.  There are three variations:  using the <kbd>Tab</kbd> key to walk one-by-one through the list of matches, <kbd>Ctrl</kbd>-<kbd>F</kbd> to expand only as much as is common to all the matches and <kbd>Ctrl</kbd>-<kbd>D</kbd> to paste in all the matches all at once.
</p>

<div id="keystrokes">
<p class="left">
<kbd>Tab</kbd>
</p>

<p>
Next match.  Show the new match in the list of filenames that match the wildcard, replacing the previous match.  After the last match, put the original string back up, highlighting it in bright red, then continue cycling through the list again.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Shift</kbd>-<kbd>Tab</kbd>
</p>

<p>
Previous match.  Same as the <kbd>Tab</kbd> key, but rotate backward through the list of matches.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>F</kbd>
</p>

<p>
Filename completion.  Look for a filename that starts with preceding characters.  If it matches a single file, fill in the rest of the name.
If more than one file matched, show the part that was the same for all, highlighted in green.  (Bright red means there were no matches at all.)
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>D</kbd>
</p>

<p>
Duplicate completions.  Paste all the matching filenames onto the command line, one after the other with spaces between.
</p>
</div>

<p>
Since <kbd>Tab</kbd> is normally bound to the filename completion function, the regular tab character is typed instead as <kbd>Ctrl</kbd>-<kbd>Tab</kbd>.  If you&rsquo;d prefer to have the <kbd>Tab</kbd> key be the regular tab character and <kbd>Ctrl</kbd>-<kbd>Tab</kbd> be filename completion, invoke the C shell with the <tt>-T</tt> option.
</p>

<p>
Filename completion is done with wildcarding, pasting an <tt>*</tt> onto the end of the previous word and then looking for any matches.  Unlike <tt>cmd.exe</tt>, Hamilton C shell does any wildcarding before executing the command you type.  It uses a powerful recursive pattern match algorithm that guarantees sensible matches even if you type a very complex pattern.  Wildcarding is the subject of a whole chapter up ahead.
</p>


<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="32-FilenameCompletion.htm">Filename completion</a><br/>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="35-CommandCompletion.htm">Command completion</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
</p>


<h3>
<small><a href="04.1-CommandLineEditing.htm">Previous</a> |
<a href="05-TheUtilities.htm">Next</a></small>
</h3>

		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Utilities
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Tutorial introduction to using the various Unix utilities,
	that come with Hamilton C shell. Topics include the conventions for command line options,
	using the -h option to get help and the following basic utilities: ls, mv, cp, rm, more,
	touch, chmod, du, vol, pwd, dirs, pushd, popd, rotd, fgrep, grep, sed, diff, head, tail,
	cut, split, tabs, tr and strings."/>
	
	<meta name="keywords" content="Hamilton C shell, Unix shell, Unix utilities, tutorial, ls, mv, cp,
	rm, more, touch, chmod, du, vol, pwd, dirs, pushd, popd, rotd, fgrep, grep, sed, diff,
	head, tail, cut, split, tabs, tr, strings, 32-bit, 64-bit, Microsoft Windows, Windows 7,
	GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Utilities
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm"><b>Utilities</b></a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
			
<h3>
Utilities<br/>
<small><a href="04.2-FilenameCompletion.htm">Previous</a> | <a href="06-TarAndMT.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#ls">ls</a><br/>
<a href="#Conventions">Conventions</a><br/>
<a href="#echo">echo</a><br/>
<a href="#MvCpRm">mv, cp and rm</a><br/>
<a href="#more">more</a><br/>
<a href="#touch">touch</a><br/>
<a href="#chmod">chmod</a><br/>
<a href="#DuVolPwd">du, vol and pwd</a><br/>
<a href="#DirsPushdPopdRotd">dirs, pushd, popd and rotd</a><br/>
<a href="#FgrepGrep">fgrep and grep</a><br/>
<a href="#fgrep">fgrep</a><br/>
<a href="#GrepAndRegularExpressions">grep and regular expressions</a><br/>
<a href="#sed">sed</a><br/>
<a href="#diff">diff</a><br/>
<a href="#HeadTail">head and tail</a><br/>
<a href="#cut">cut</a><br/>
<a href="#split">split</a><br/>
<a href="#tabs">tabs</a><br/>
<a href="#tr">tr</a><br/>
<a href="#strings">strings</a><br/>
<a href="#OtherUtilities">Other utilities</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<p>
Hamilton C shell comes with a lot of utilities that form some of its vocabulary.  They do small, but oft-needed functions, often in a novel, faster or more convenient way than you&rsquo;d find in &ldquo;plain vanilla&rdquo; Windows.  This section provides a quick tour, outlining some of the capabilities and conventions.
</p>

<h4>
<a name="ls"></a>ls:	list files
</h4>

<p>
<a href="Utilities/ls.htm"><tt>ls</tt></a> is a somewhat nicer way to list a directory:
</p>

<div class="codesample">6 D% ls
<b>memos</b>      hello.c    hello.exe  <span class="green">sysstuff</span>
</div>

<p>
Subdirectories are highlighted (shown here in bold.)  If a file or directory has the system bit set, it&rsquo;s still listed, displayed in green.  Normally, <tt>ls</tt> lists everything in lower case for better readability.  In long format:
</p>

<div class="codesample">7 D% ls -l
D----  Feb 23  13:46          -  <b>memos</b>
---A-  Feb 23  12:56         72  hello.c
---A-  Feb 23  12:57       7731  hello.exe
-S-A-  Feb 23  13:22         15  <span class="green">sysstuff</span>
</div>

<p>
Conventionally, <tt>ls</tt> lists things alphabetically, with  directories ahead of files.  There might be hidden files or directories, but to see them you have to ask:
</p>

<div class="codesample">8 D% ls +H
<b>memos</b>      hello.c    hello.exe  hiding     <span class="green">sysstuff</span>
</div>

<h4>
<a name="Conventions"></a>Conventions
</h4>

<p>
To find out how any of the utilities work, just use the <tt>-h</tt> option.  For example,
</p>

<div class="codesample">9 D% ls -h
</div>

<p>
tells about options for more detailed listings, sorting the list by date or by size, selecting only certain types of files, etc.  <tt>ls</tt> is a read-only activity; it never makes any changes to the file system; lists are always sorted in memory.
</p>

<p>
The names of the utilities were chosen to be consistent with the names of similar functions on UNIX, where they provided much of the vocabulary of the original UNIX C shell.  But changing the name of a utility is a simple matter:  just rename the corresponding <tt>.exe</tt> file or, better still, create an alias (discussed later.)
</p>

<p>
By convention, the utilities expect options to come ahead of any files you specify.  Options are case-sensitive.  We&rsquo;ve tried to use mnemonic letters for options (e.g., <tt>h</tt> for help) and to use the same letter to mean the same thing across related utilities; achieving that is simply more feasible with 52, not just 26 characters to choose from.
</p>

<p>
Our examples generally show options introduced with <tt>-</tt>, but you could equally well follow the Windows convention of using <tt>/</tt> if you prefer.  If indeed you want only <tt>-</tt> or only <tt>/</tt> interpreted as an option character, this can be set with the <tt>SWITCHCHARS</tt> environmental variable, which can be set either from the C shell or from the Control Panel (or in your <tt>autoexec.bat</tt> file under Windows 9x.)  It won&rsquo;t have any effect on the standard Windows commands like <tt>dir</tt> or <tt>xcopy</tt> or on applications you purchase elsewhere, but it will work on all the commands supplied with the C shell.  For example, to have only <tt>-</tt> recognized as an option character, you might type this into the C shell:
</p>

<div class="codesample">10 D% setenv SWITCHCHARS = -
</div>

<p>
You can type options in any order (except where one overrides another, in which case the last setting is used) and you group them together or type them separately as you choose.  For example, <tt>ls -L -d -w</tt> is exactly the same as <tt>ls -dwL</tt> and produces a <tt>-L</tt> long format (very detailed) list of the current directory, sorted by <tt>-d</tt> date (newest ones last), with sizes of any directories filled in by <tt>-w</tt> walking down through the directory tree, adding up all the sizes of all the files found there.
</p>

<p>
You can always unambiguously end the options with <tt>--</tt> in case you have a filename or an argument string that begins with one of option-introducing characters.  Also, since the shell does the wildcard expansion, it&rsquo;s a bit more convenient and faster for the utilities to look for any options right at the beginning of what could be a very long list &ndash; up to 32 kilobytes &ndash; of filenames or other command-line text.
</p>

<p>
We&rsquo;ll always follow the Windows convention of using <tt>\</tt> in filenames in this book and we generally advise that you do too, not so much because the C shell cares but because so much other Windows software does.  To some fair degree, it&rsquo;s a case of &ldquo;when in Rome, doing as the Romans do.&rdquo;  But if you really do prefer, you can generally use <tt>/</tt> with the C shell and all the utilities.  Do remember, however, that if you type a filename starting with <tt>/</tt> to mean the root, you have to be careful that it can&rsquo;t be confused as the start of an option.  (This is a good use for the <tt>--</tt> option or the <tt>SWITCHCHARS</tt> variable.)
</p>

<h4>
<a name="echo"></a>echo
</h4>

<p>
<a href="Utilities/echo.htm"><tt>echo</tt></a> is a little different than the vanilla Windows echo.  It does only one thing: it prints whatever arguments words you give it; there&rsquo;s no <tt>echo&nbsp;on</tt> or <tt>echo&nbsp;off</tt>-style status reporting function.  But it does offer much finer control over what gets printed:  you can write binary values, choose not to append a new line and write to stderr instead stdout.
</p>

<p>
Here&rsquo;s an example where the ANSI escape sequences turning brightness and color on and off are embedded into a string being echoed.
</p>

<div class="codesample">11 D% echo "Have a $ansi('bright red')NICE$ansi() day."
Have a <b>NICE</b> day.
</div>

<h4>
<a name="MvCpRm"></a>mv, cp and rm: move, copy and remove
</h4>

<p>
The <a href="Utilities/mv.htm"><tt>mv</tt></a> (move), <a href="Utilities/cp.htm"><tt>cp</tt></a> (copy) and <a href="Utilities/rm.htm"><tt>rm</tt></a> (remove) trio allows  files and directories to be treated as simple objects.
</p>

<p>
<a href="Utilities/mv.htm"><tt>mv</tt></a> will move either files or directories treating them simply as objects, even across disk partitions.    In this example, the two <tt>hello</tt> files are moved into a new directory, illustrating how <tt>mv</tt> understands that if there&rsquo;s a many-to-one relationship, the destination has to be a directory.
</p>

<div class="codesample">12 D% mv hello* hello
13 D% ls
<b>hello        memos</b>        <span class="green">sysstuff</span>
14 D% ls hello
hello.c      hello.exe
</div>

<p>
Similarly, <a href="Utilities/cp.htm"><tt>cp</tt></a>  will copy a file or even an entire directory.  The copies <tt>cp</tt> produces are always exact logical copies, with correct timestamps and attribute bits and including any hidden or system files.
</p>

<div class="codesample">15 D% cp hello newhello
16 D% ls
<b>hello        memos        newhello</b>     <span class="green">sysstuff</span>
17 D% ls -l hello
---A-  Feb 23  12:56         72  hello.c
---A-  Feb 23  12:57       7731  hello.exe
18 D% ls -l newhello
---A-  Feb 23  12:56         72  hello.c
---A-  Feb 23  12:57       7731  hello.exe
</div>

<p>
<tt>cp</tt> does not consider it an error to copy over an existing file unless the file about to be overwritten has its read-only bit set.
</p>

<p>
Finally, <a href="Utilities/rm.htm"><tt>rm</tt></a> can be used to remove a file or even an entire directory.  But it does insist that you tell it you really mean it if you ask to remove a directory that&rsquo;s not empty or anything that&rsquo;s marked with the system bit.
</p>

<div class="codesample">19 D% rm sysstuff
rm:  Can't remove system file 'systuff' without -S option.
20 D% rm -S sysstuff
21 D% ls
<b>hello        memos        newhello</b>
22 D% rm newhello
rm:  Can't remove non-empty directory 'newhello' without -r option.
23 D% rm -r newhello
24 D% ls
<b>hello        memos</b>
</div>

<p>
As you can see from these examples, the general style of the utilities is fairly terse.  Like the proverbial Vermont farmer, they don&rsquo;t say anything unless they&rsquo;ve got something to say.  Even copying or removing a directory happens without fanfare as long as the appropriate &ldquo;yes, I really mean it&rdquo; options are supplied.
</p>

<h4>
<a name="more"></a>more
</h4>

<p>
<a href="Utilities/more.htm"><tt>more</tt></a> is an especially fast browsing filter.  There are two ways to use more.  The first is in a pipeline, the way &ldquo;vanilla&rdquo; more might be used when you suspect the data may be longer than a screenful:
</p>

<div class="codesample">25 D% ls -l c:\windows | more
:
:
</div>

<p>
If the output turns out to be less than a screenful, it&rsquo;s as though you&rsquo;d just typed the <tt>ls</tt> command by itself.  In fact, there&rsquo;s not even a noticeable performance penalty.  But if it&rsquo;s  more than a screenful, <tt>more</tt> switches to an interactive mode where you can use the arrow keys, etc., to browse up and down through the listing.
</p>

<p>
<tt>more</tt> can also be used for browsing a list of the files you give it on the command line:
</p>

<div class="codesample">26 D% more *.c
</div>

<p>
<tt>more</tt> incorporates the Berkeley notion referred to, tongue-in-cheek, as &ldquo;more is less&rdquo;:  it&rsquo;s a good paging filter that lets you go forwards and backwards.  It also offers a number of different ways of looking at or searching the data including binary, as control characters, line-numbered, etc.  Perhaps most important, it&rsquo;s fast.
</p>

<p>
Part of <tt>more</tt>&rsquo;s speed comes from an internal cache coupled to an indexing structure that it builds on the fly as it reads the input.  When you move forward or backward within the cache, screen redraw rates are the limiting factor in performance.  Outside of range of the cache, if the input is from a disk file, the indexing structure, technically an ISAM, tells more how to seek to the new location.
</p>

<p>
The cache is sized dynamically depending on whether the input is from a file or a pipe.  When reading a file, it uses a cache about 100K characters; otherwise, the cache is about 4M characters
</p>

<h4>
<a name="touch"></a>touch
</h4>

<p>
<a href="Utilities/touch.htm"><tt>touch</tt></a> lets you change the timestamps of individual files or directories  or, using the <tt>-r</tt> (recursive) option, of everything in a whole directory tree.
</p>

<p>
If the desired timestamp isn&rsquo;t given, <tt>touch</tt> uses the current time.  If the filename doesn&rsquo;t exist, it&rsquo;s created as a zero-length file.
</p>

<div class="codesample">27 D% ls
<b>hello        memos</b>
28 D% touch zork
29 D% ls
hello        memos        zork
</div>

<h4>
<a name="chmod"></a>chmod
</h4>

<p>
<a href="Utilities/chmod.htm"><tt>chmod</tt></a> lets you set a file&rsquo;s attributes but leaves the timestamp alone.  Here is an example, first setting the system bit (making it show up in green), then making it hidden:
</p>

<div class="codesample">30 D% chmod +S zork
31 D% ls
<b>hello        memos</b>        <span class="green">zork</span>
32 D% chmod +H zork
33 D% ls
<b>hello        memos</b>
</div>

<p>
Of course, the file is still there and you can continue to manipulate its attributes:
</p>

<div class="codesample">34 D% ls -l zork
-SHA-  Feb 23  13:16         0  <span class="green">zork</span>
35 D% ls +a
<b>.              hello</b>          <span class="green">zork</span>
<b>..             memos</b>
36 D% chmod +R zork
37 D% ls -l zork
-SHAR  Feb 23  13:16         0  <span class="green">zork</span>
</div>

<p>
Many users will find that a file&rsquo;s system bit is more useful than they&rsquo;d thought before.  With <tt>chmod</tt>, it&rsquo;s easy to set or clear the bit and setting it doesn&rsquo;t make the file hidden.  Quite the contrary, ls makes it stands out in green.  Also, a file marked &ldquo;system&rdquo; is a little safer from accidental deletion or overwriting.  These are often convenient characteristics to attach a few specific files within a large directory.  For example, the author tends to routinely mark make files within a C source code directory as &ldquo;system&rdquo; just so they&rsquo;ll stand out.
</p>

<h4>
<a name="DuVolPwd"></a>du, vol and pwd
</h4>

<p>
<a href="Utilities/du.htm"><tt>du</tt></a>, <a href="Utilities/vol.htm"><tt>vol</tt></a> and <a href="Utilities/pwd.htm"><tt>pwd</tt></a> provide quick snapshots of your disk partitions:  <tt>du</tt> tells how much of the partition is used; <tt>vol</tt> displays the label; and <tt>pwd</tt> shows the current directory on each partition.
</p>

<div class="codesample">38 D% du
c: 16747.100 M Total =15468.008 M Used + 1279.092 M (07.64%) Free windows
<b>d: 41849.292 M Total =13900.856 M Used +27948.436 M (66.78%) Free nicole</b>
e: could not be accessed.
f: could not be accessed.
39 D% pwd
c:\Windows
<b>d:\Nicki\sh</b>
e:\
f:\
40 D% vol
c:   Volume Serial a0f7-496a   windows
<b>d:   Volume Serial 70ae-6e52   nicole</b>
</div>

<p>
A common convention observed by the utilities is that if one entry on a list is more current or special than the others, it&rsquo;s highlighted.  <tt>du</tt>, <tt>vol</tt> and <tt>pwd</tt> each highlight the entry describing the current disk.
</p>

<p>
For the benefit of those who have lots of partitions, some of which they don&rsquo;t want to bother listing all the time, <tt>du</tt>, <tt>vol</tt> and <tt>pwd</tt> look for a <tt>DRIVEMASK</tt> environmental variable which can be used to mask off just the drive you want.  This is especially useful for excluding drives that take removable media; if they&rsquo;re empty, they can waste a lot of time trying to read a diskette that&rsquo;s not there.
</p>

<h4>
<a name="DirsPushdPopdRotd"></a>dirs, pushd, popd and rotd
</h4>

<p>
The shell provides a builtin mechanism for keeping several directories &ldquo;handy.&rdquo;  This mechanism is the directory stack, which always contains a list of fully-qualified directory pathnames with the current directory at the top.  You can display the list with the <a href="Utilities/dirs.htm"><tt>dirs</tt></a> command:
</p>

<div class="codesample">41 D% dirs
<b>d:\Nicki\sh</b>
</div>

<p>
Initially the list contains only your current directory.  When you push a new directory on the stack with <a href="Utilities/pushd.htm"><tt>pushd</tt></a>, that becomes your new current disk and current directory.  <tt>pushd</tt> also reports the resulting stack contents.
</p>

<div class="codesample">42 D% pushd c:
<b>c:\Windows</b>
d:\Nicki\sh
43 C% pushd d:\
<b>d:\</b>
c:\Windows
d:\Nicki\sh
</div>

<p>
Calling <tt>pushd</tt> without any arguments just swaps the top two directories:
</p>

<div class="codesample">44 D% pushd
<b>c:\Windows</b>
d:\
d:\Nicki\sh\docs
</div>

<p>
Popping elements off the stack is done with <a href="Utilities/popd.htm"><tt>popd</tt></a>, which also reports the resulting stack.
</p>

<div class="codesample">45 C% popd
<b>d:\</b>
d:\Nicki\sh
</div>

<p>
The stack can also be rotated with <a href="Utilities/rotd.htm"><tt>rotd</tt></a>.  (We&rsquo;ll push another directory first so we can see that rotation is upward, with the top item going to the bottom of the stack.)
</p>

<div class="codesample">46 D% pushd \tmp
<b>d:\tmp</b>
d:\
d:\Nicki\sh
47 d% rotd
<b>d:\</b>
d:\Nicki\sh
d:\tmp
</div>

<p>
You can pop multiple directory entries at once, but if you ask to pop more than exist, you&rsquo;ll get a message:
</p>

<div class="codesample">48 E% popd 5
csh:  The builtin popd command can only accept a integer argument n,
where n &gt; 0 &amp;&amp; n &lt; number of elements on the directory stack.  The
default for n is 1.
49 E% popd
<b>d:\Nicki\sh </b>
e:\
</div>

<h4>
<a name="FgrepGrep"></a>fgrep and grep
</h4>

<p>
<a href="Utilities/fgrep.htm"><tt>fgrep</tt></a> and <a href="Utilities/grep.htm"><tt>grep</tt></a> are fast string search utilities.   Their names (derived from &ldquo;general regular expression pattern-matching&rdquo;) and the regular expression syntax they implement are traditional; it&rsquo;s an accepted standard and we&rsquo;ve followed it.
</p>

<p>
<tt>fgrep</tt> and <tt>grep</tt> are used to scan through long lists of files or filter data coming through a pipe for strings or patterns you specify.  They&rsquo;ll quickly report all the matching lines.  If you like, you can get more or less detail in the output, e.g., have line numbers shown or just get a total count of all the matches.
</p>

<p>
<tt>fgrep</tt> and <tt>grep</tt> both have the ability to look for a large number of patterns in parallel (using the <tt>-s</tt> or <tt>-f</tt> options) with almost no discernible performance degradation.  They&rsquo;re very fast.  Both precompile and optimize their search patterns, use direct kernel API calls for all i/o and use a very high performance buffering structure to allow extremely fast scanning of large amounts of data.
</p>

<h4>
<a name="fgrep"></a>fgrep
</h4>

<p>
<a href="Utilities/fgrep.htm"><tt>fgrep</tt></a> is the simpler and slightly faster of the two search utilities.  It does a simple string compare between the string you&rsquo;re looking for and the characters on each line.  If the search string is found anywhere on the line, it&rsquo;s a match.  There are some options for ignoring differences in upper/lower-case or in the amount of white space (spaces and tabs) between words but mostly it&rsquo;s quite simple comparison.
</p>

<p>
Here&rsquo;s an example of using <tt>fgrep</tt> to search a very simple personal phone directory where each record is just a line of text and we&rsquo;ll search it .  (Later we&rsquo;ll learn how to package things like this up into aliases or shell procedures so you can call them with just a few keystrokes.)
</p>

<div class="codesample">50 D% fgrep -i doctor ~\phone
Doctor:  Eugene A. Schrang, MD, SC, 920-725-6661
Doctor:  Douglas K. Ousterhout, MD, DDS, 415-626-2888
</div>

<h4>
<a name="GrepAndRegularExpressions"></a>grep and regular expressions
</h4>

<p>
<a href="Utilities/grep.htm"><tt>grep</tt></a> looks for special patterns called regular expressions, which are similar to (but slightly different from) filename wildcarding.  The grammar is recursive, meaning a regular expression to be matched can be written, in turn, as a nested series of regular expressions in decreasing precedence:
</p>

<table class="narrowrule">
<tr>
<td class="langref" style="width:80px">
<var>c</var>
</td>

<td>
Any ordinary character matches itself.
</td>
</tr>

<tr>
<td class="langref">
<tt>\</tt><var>c</var>
</td>

<td>
<p>
Match the literal character <tt><var>c</var></tt>.  Certain characters are treated specially:
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>\a</tt>
</td>

<td>
<p>
Audible Alert (Bell)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>\b</tt>
</td>

<td>
Backspace
</td>
</tr>

<tr>
<td class="langref">
<tt>\f</tt>
</td>

<td>
Form Feed
</td>
</tr>

<tr>
<td class="langref">
<tt>\n</tt>
</td>

<td>
NewLine
</td>
</tr>

<tr>
<td class="langref">
<tt>\r</tt>
</td>

<td>
Carriage Return
</td>
</tr>

<tr>
<td class="langref">
<tt>\t</tt>
</td>

<td>
Tab
</td>
</tr>

<tr>
<td class="langref">
<tt>\v</tt>
</td>

<td>
Vertical Tab
</td>
</tr>

<tr>
<td class="langref">
<tt>\\</tt>
</td>

<td>
Single BackSlash
</td>
</tr>

<tr>
<td class="langref">
<tt>\x</tt>
</td>

<td>
The next one or two digits are treated as hex digits specifying the character code.
</td>
</tr>

<tr>
<td class="langref">
<tt>^</tt>
</td>

<td>
Beginning of line.
</td>
</tr>

<tr>
<td class="langref">
<tt>$</tt>
</td>

<td>
End of line.
</td>
</tr>

<tr>
<td class="langref">
<tt>.</tt>
</td>

<td>
Match any single character.
</td>
</tr>

<tr>
<td class="langref">
<tt>[</tt>...<tt>]</tt>
</td>

<td>
Match any single character in the list.
</td>
</tr>

<tr>
<td class="langref">
<tt>[^</tt>...<tt>]</tt>
</td>

<td>
Match any single character not in the list.
</td>
</tr>

<tr>
<td class="langref">
<tt>\</tt><var>n</var>
</td>

<td>
<p>
Match whatever literal text the <tt><var>n</var></tt>&rsquo;th tagged <tt>\(<var>...</var>\)</tt> expression matched.
</p>
</td>
</tr>

<tr>
<td class="langref">
<var>r</var><tt>*</tt>
</td>

<td>
Match zero or more occurrences of <tt><var>r</var></tt>.
</td>
</tr>

<tr>
<td class="langref">
<var>r</var><tt>\{</tt><var>n</var><tt>\}</tt>
</td>

<td>
<p>
Match exactly <tt><var>n</var></tt> occurrences of <tt><var>r</var></tt>, where <tt><var>n</var></tt> is an unsigned decimal integer.
</p>
</td>
</tr>

<tr>
<td class="langref">
<var>r</var><tt>\{</tt><var>n</var><tt>,\}</tt>
</td>

<td>
<p>
Match at least <tt><var>n</var></tt> occurrences of <tt><var>r</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<var>r</var><tt>\{</tt><var>n</var><tt>,</tt><var>m</var><tt>\}</tt>
</td>

<td>
<p>
Match at least <tt><var>n</var></tt>, but not more than <tt><var>m</var></tt> occurrences of <tt><var>r</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<var>r</var><tt>\{,</tt><var>m</var><tt>\}</tt>
</td>

<td>
<p>
Match at most <tt><var>m</var></tt> occurrences of <tt><var>r</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<var>r1r2</var>
</td>

<td>
<p>
Match expression <tt><var>r1</var></tt> followed by <tt><var>r2</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>\(</tt><var>r</var><tt>\)</tt>
</td>

<td>
<p>
Tagged regular expression.  Match the pattern inside the<br/><tt>\(<var>...</var>\)</tt>, and remember the literal text that matched.
</p>
</td>
</tr>

</table>

<p>
At the lowest layer, you give a character or set of characters to be matched anchored, if you want, to match just the beginning or just the end of a line.  At the next layer, the <tt>*</tt> character lets you match a variable number of repetitions of a pattern.
</p>

<p>
When you type a regular expression on the command line, keep in mind:  (1) Many of the characters have special meaning to the C shell and have to be inside quotes.  (2) You have to type <tt>^^</tt> to get just one circumflex because <tt>^</tt> is the shell&rsquo;s default escape character.  (3) <tt>*</tt> is a postfix operator.  It operates on the preceding regular expression; by itself, it is not a &ldquo;match zero or more characters&rdquo; wildcard character as you may be used to with filenames.
</p>

<p>
Here&rsquo;s an example of searching through all the source code for a large application, looking for all occurrences of lines that begin with <tt>statement</tt> followed by a <tt>y</tt> somewhere on the line and showing the line numbers of any matches.  (The <tt>-s</tt> option tells <tt>pushd</tt> and <tt>popd</tt> to work silently.)
</p>

<div class="codesample">51 D% pushd -s ~\sh
52 D% grep -n '^^statement.*y' *.c
allocate.c:418:statement_obj *allocate_statement(size, type)
53 D% popd -s
</div>

<h4>
<a name="sed"></a>sed
</h4>

<p>
<a href="Utilities/sed.htm"><tt>sed</tt></a> is a stream editor.  Just as you might think of using a regular editor to edit a file, deleting or inserting lines, doing search/replace operations, etc., <tt>sed</tt> lets you edit a stream of data:  individual lines are read from stdin, edited according to the script you give and written to stdout.  A very simple sort of script might be given right on the command line.  Here&rsquo;s a simple search/replace:
</p>

<div class="codesample">54 D% echo hello world | sed s/world/everybody/
hello everybody
</div>

<p>
<tt>sed</tt> uses the same regular expressions used by <tt>grep</tt>.  It&rsquo;s possible to pick up pieces of the input as tagged expressions and move them around.  In this example, the two strings on either side of the space are tagged, then swapped around.  Quotes are used around the search/replace command so the C shell will treat it as one long literal string to be passed to <tt>sed</tt>.  Parentheses, spaces and asterisks otherwise have special meaning.  Notice how the <tt>*</tt> construct, meaning match zero or more occurrences actually matches as many repetitions as possible.
</p>

<div class="codesample">55 D% echo hello world | sed 's/\(.*\) \(.*\)/\2 \1/'
world hello
</div>

<p>
For more complex operations, <tt>sed</tt> offers a wide array of operators including even conditional branches and a hold buffer where a string can be saved temporarily from one line to the next.  If your script is very long, the <tt>-f</tt> option lets you specify it in a file.
</p>

<h4>
<a name="diff"></a>diff
</h4>

<p>
<a href="Utilities/diff.htm"><tt>diff</tt></a> is an extremely fast and flexible utility for quickly comparing ASCII files, looking for differences.  In the simplest form, you simply give it two filenames corresponding to the old and new versions and let it go to work, reporting sections that have been deleted or added in a traditional format.  For example, a software developer might use it to compare old and new versions of a C program:
</p>

<div class="codesample">56 D% diff archive\parse.c parse.c
1493 c 1493
&lt;          d-&gt;inline_cnt = src-&gt;inline_cnt++;
---
&gt;          d-&gt;inline_cnt = ++src-&gt;inline_cnt;
</div>

<p>
Each change is reported in terms of the line number or range in the old version, whether it&rsquo;s an addition, change or deletion, the line numbers in the new version and then the affected lines from each file, separated by a line of <tt>---</tt>.
<tt>diff</tt> supports the traditional options for ignoring differences in upper/lower-case or in the amount of white space on the line, for recursively comparing entire directory trees of files, etc.
</p>

<p>
One of <tt>diff</tt>&rsquo;s most novel features is its ability with the <tt>-!</tt> option to generate a merged listing where text that&rsquo;s deleted is shown in red, new text is shown in green and the rest is displayed normally.  This makes it extremely easy to view your changes in context.  (To use this option, remember that <tt>!</tt> is a special character to the shell; type it at the end of the option list so there&rsquo;ll be a space following.)
</p>

<h4>
<a name="HeadTail"></a>head and tail
</h4>

<p>
<a href="Utilities/head.htm"><tt>head</tt></a> and <a href="Utilities/tail.htm"><tt>tail</tt></a> are used to display just the first or last few lines or characters of a file.  Normally, they expand any tabs into spaces so you don&rsquo;t need to filter them through more.
</p>

<p>
<tt>tail</tt> is particularly interesting.  If all you want is the end of a very large file,  <tt>tail</tt> doesn&rsquo;t waste time reading the whole file from start to finish.  Instead, it jumps right to the end and reads it backwards!  If the file is truly large (on the order of several megabytes) and all you want is a little bit off the end, this is the difference between chugging along for several seconds versus getting an almost instantaneous response.
</p>

<p>
<tt>tail</tt> also has a <tt>-f</tt> follow option.  What that means is that when it gets to the end of file, it enters an endless loop, sleeping for a second, then waking up to see if more has been added.  This is particularly useful if, e.g., you have an operation, say a large make, active in one window with its output redirected to a file.  From another window you can periodically check in on the progress by typing:
</p>

<div class="codesample">57 D% tail -f e:\tmp\make.log
:
^C
</div>

<p>
<tt>tail</tt> lets you watch lines get added without consuming much processor resource (since it sleeps in the kernel most of the time) so you can watch a background activity progress without affecting its performance.  After you&rsquo;ve watched for a while, just type <kbd>Ctrl</kbd>-<kbd>C</kbd> to interrupt and get out.  The interrupt only goes to the <tt>tail</tt> program; the application off in the background or in another window creating the file is not affected and will go on about its business until you come back once again to check on it.
</p>

<h4>
<a name="cut"></a>cut
</h4>

<p>
<a href="Utilities/cut.htm"><tt>cut</tt></a> is a simple filter for selecting out just certain fields or character positions of each line of input.  You choose what characters should be interpreted as the field delimiters and which fields should be copied to the output.  For example, if you kept your phone book in <tt>phone.txt</tt>, you might strip off just the first word from each line to get everyone&rsquo;s first names:
</p>

<div class="codesample">58 D% cut -f1 -d' ' phone.txt
Ed
Helen
Jack
Vickie
:
</div>

<p>
The <tt>-f</tt> option means you want to count by fields, selecting the first field and that the delimiter is a space character.  (Notice the quotes around the space.)
</p>

<h4>
<a name="split"></a>split
</h4>

<p>
<a href="Utilities/split.htm"><tt>split</tt></a> lets you break up a large file into smaller, fixed-size pieces counting either by lines or by characters.  Each of the smaller files it creates are numbered, e.g., <tt>chunk.001</tt>, <tt>chunk.002</tt>, <tt>chunk.003</tt>, etc.
</p>

<p>
An example of where you might use <tt>split</tt> would be if you wanted to copy a file to CD, but it was too big.  You could use <tt>split</tt> to break it up into 600 MB chunks.
</p>

<h4>
<a name="tabs"></a>tabs
</h4>

<p>
<a href="Utilities/tabs.htm"><tt>tabs</tt></a> lets you expand or unexpand tab characters based on a set of tab settings you give it.  Tab settings are religious.  I like them every 3 spaces but you probably like something else.
</p>

<h4>
<a name="tr"></a>tr
</h4>

<p>
<a href="Utilities/tr.htm"><tt>tr</tt></a> is a another simple filter for translating characters from input to output.  For example, you could translate everything from lower to upper case by typing:
</p>

<div class="codesample">59 D% tr a-z A-Z
hello world
HELLO WORLD
^Z
</div>

<p>
We typed the first <tt>hello world</tt> and <tt>tr</tt> has just echoed it in upper case.   <tt>^Z</tt> is the end-of-file character defined by Windows.
<tt>tr</tt> also has a number of options for squeezing out repeated sequences of the same character or editing out just certain characters and even for normalizing the text in a file, ensuring that every line ends with a carriage return/line feed combination.  That&rsquo;s handy if you&rsquo;re importing a file from another operating system.
</p>

<h4>
<a name="strings"></a>strings
</h4>

<p>
<a href="Utilities/strings.htm"><tt>strings</tt></a> lets you simply list out all the ASCII strings in an otherwise binary file.  A really simple use would be extract strings from a spreadsheet file.  Various options are available to trimming the output so only strings of a minimum length, etc.  In this example, we use the <tt>-a</tt> option to find all strings, even those that aren&rsquo;t null-terminated:
</p>

<div class="codesample">60 D% strings -a Automobile.xls | fgrep -i miles
Miles Low
Miles Hi
Miles Adj
</div>

<p>
<tt>strings</tt> can also let you extract Unicode strings:
</p>

<div class="codesample">61 D% strings -u c:\windows\system32\ntdll.dll | f PageHeap
PageHeapFlags
PageHeapSizeRangeStart
PageHeapSizeRangeEnd
:
</div>

<h4>
<a name="OtherUtilities"></a>Other utilities
</h4>

<p>
Other utilities provide means for sleeping for a timed period, counting the number of words in a file and so on.  Part of the appeal of Hamilton C shell is that it&rsquo;s relatively easy to continue expanding the vocabulary with simple utilities that may each be only a few hundred lines long.
</p>

<p>
This has been a fast introduction.  Fortunately, you don&rsquo;t have to learn the utilities just from the book.  All have on-line information available with <tt>-h</tt>.  We encourage you to experiment.
</p>

<p>
We&rsquo;ve been at this for over 20 years and we&rsquo;re still giving thought to additional utilities.  If you have favorites you&rsquo;d like to see included or maybe offered as new products, please contact us.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="50-BuiltinUtilities.htm">Builtin utilities</a><br/>
<a href="51-ExternalUtilities.htm">External utilities</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
</p>


<h3>
<small><a href="04.2-FilenameCompletion.htm">Previous</a> | <a href="06-TarAndMT.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Tar and mt
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Tutorial introduction to using the tar and mt utilities
	that come with Hamilton C shell.  Topics include choosing a suitable tape drive, rewinding
	a tape, listing or extracting the contents of a tar tape, extracting the contents of a tar
	tape, writing a new tar tape, adding more files to an existing tar tape, exchanging tapes
	with a Unix system, special considerations with ASCII text versus binary files and what to
	do if you have problems."/>
	
	<meta name="keywords" content="Hamilton C shell, Unix shell, Unix utilities, tutorial,
	tar format, tar tape, tar utility, mt utility, cpio, tape drive, archive, tape archive, interchange,
	32-bit, 64-bit, Microsoft Windows, Windows NT, Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Tar and mt
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm"><b>Tar and mt</b></a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Tar and mt<br/>
<small><a href="05-TheUtilities.htm">Previous</a> |
<a href="07-IORedirection.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#ChoosingASuitableTapeDrive">Choosing a suitable tape drive</a><br/>
<a href="#RewindingATape">Rewinding a tape</a><br/>
<a href="#ListingTheContentsOfATarTape">Listing the contents of a tar tape</a><br/>
<a href="#ExtractingTheContentsOfATarTape">Extracting the contents of a tar tape</a><br/>
<a href="#IfYouCantReadATape">If you can't read a tape</a><br/>
<a href="#WritingANewTarTape">Writing a new tar tape</a><br/>
<a href="#AddingMoreFilesToAnExistingTarTape">Adding more files to an existing tar tape</a><br/>
<a href="#CheckThatYouCanReadTheTapeYouWrote">Check that you can read the tape you wrote!</a><br/>
<a href="#ExchangingTapesWithAUnixSystem">Exchanging tapes with a Unix system</a><br/>
<a href="#AsciiTextVersusBinaryFiles">ASCII text versus binary files</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<p>
The <a href="Utilities/tar.htm"><tt>tar</tt></a> utility can be used to read and write <tt>tar</tt> format files, tapes and diskettes.  The <a href="Utilities/mt.htm"><tt>mt</tt></a> utility lets you check the status of a tape drive, rewind or erase a tape, set various features, etc.  Because the use of <tt>tar</tt> and <tt>mt</tt> to read or tapes is so important to so many users, particularly for interchange with Unix machines, it deserves a chapter of their own.
</p>

<p>
Most QIC (quarter-inch cartridge), 4mm DAT and 8mm Exabyte drives are supported by Windows and will work just fine with <tt>tar</tt>.  But note:
</p>

<ol>
<li>
<p>
If you&rsquo;re using Vista or Windows 7, which has an enhanced security model, you&rsquo;ll need to enable access to the tape drive before you can use it.  Refer to the <a href="Utilities/tar.htm"><tt>tar -h</tt></a> help screen for more information.
</p>
</li>

<li>
<p>
Tape device support is included only with current 32 and 64-bit versions of Windows (Windows NT and later), not the old 16-bit Windows 9x systems.
</p>
</li>
</ol>

<h4>
<a name="ChoosingASuitableTapeDrive"></a>Choosing a suitable tape drive
</h4>


<p>
If you don&rsquo;t yet own a tape drive and you&rsquo;re trying to choose the one that might be best for your own application, your first consideration should be the types of drives on any machines with which you want to exchange data.  If your colleague&rsquo;s machine has a QIC and you buy a DAT, this is not going to work!
</p>

<p>
If you have a choice, we generally recommend 4mm DAT drives.   A single $10 DAT tape cartridge, weighing only 1.4 ounces, can store 20 gigabytes or more &ndash; no other tape format comes close in terms of cost per megabyte or weight per megabyte for media.  If you have to store large amounts of data or if you&rsquo;re concerned about shipping costs, DAT drives win hands down.  Also, DAT drives are better-supported than any other type of drive.  For example, on a DAT drive, you&rsquo;ll have more flexibility in the choice of a blocksize (which could be important if someone else is sending you tapes and you have little control over how they&rsquo;re written).  Also, DAT drives allow rewriting of the last block on the tape; that&rsquo;s useful with <tt>tar</tt> because it means you can add files onto the end of a <tt>tar</tt> tape on DAT; with other types of drives, you may have to just rewrite the whole tape to add even one file.
</p>

<p>
Some other, more expensive but higher performance choices include DLT, AIT, VXA, LTO and others.  Virtually any of these should work.
</p>

<p>
Even the old QIC and Exabyte drives work quite well.  QIC drives using full-size, quarter-inch, streaming cartridges have been around for over twenty years; they&rsquo;re very reliable.
</p>

<h4>
<a name="RewindingATape"></a>Rewinding a tape
</h4>

<p>
<a href="Utilities/tar.htm"><tt>Tar</tt></a> normally rewinds the tape before and after reading or writing it.  You can suppress that with the <tt>-N</tt> (no rewind) option.  You can also manually rewind the tape using the <tt>mt</tt> utility:
</p>

<div class="codesample">66 D% mt rewind
</div>

<h4>
<a name="ListingTheContentsOfATarTape"></a>Listing the contents of a tar tape
</h4>

<p>
To list the contents of a tape using the <tt>-L</tt> (Long Listing) option so you can see in detail what&rsquo;s there:
</p>

<div class="codesample">67 D% tar -L \\.\tape0
</div>

<p>
The tape device is <a href="29-SpecialDevices.htm"><tt>\\.\tape0</tt></a> under Windows.  That name was chosen by Microsoft.  If you have more than one tape, the others will be called <tt>\\.\tape1</tt>, <tt>\\.\tape2</tt>, etc.
</p>

<p>
When reading a tape, <tt>tar</tt> will automatically recognize either <tt>tar</tt> or <tt>cpio</tt> formats (including  both ASCII and binary versions of cpio) and will automatically do whatever "byte-flipping" is required if the tape was written on machine with a different bytesex.  (More about bytesex later.)  Also, <tt>tar</tt> will do its best to determine what blocksize used even if you don&rsquo;t tell it.  Under Windows NT 3.5, the blocksize does have to be a multiple of 512 bytes to be readable; <tt>tar</tt> will iterate through all the possibilities until it finds the right one.  Under Windows NT 3.51 or later, if your tape drive supports &ldquo;variable block i/o,&rdquo; <tt>tar</tt> can directly determine the blocksize just by reading the first record on the tape.
</p>

<p>
For a little more diagnostic information from <tt>tar</tt>, you can use the <tt>-v</tt> (verbose) option instead of <tt>-L</tt>.  You&rsquo;ll get some additional information about what format (<tt>tar</tt> versus <tt>cpio</tt>), bytesex and blocksize <tt>tar</tt> is using and the offsets from the beginning of the archive at which each file in the archive appears.
</p>

<h4>
<a name="ExtractingTheContentsOfATarTape"></a>Extracting the contents of a tar tape
</h4>

<p>
If you can list the contents of a <tt>tar</tt> tape, you can extract it.  Do this using the same procedure you used to list the contents of the tape, but adding the <tt>-x</tt> (Extract) option.
</p>

<div class="codesample">68 D% tar -Lx \\.\tape0
</div>

<p>
By default, <tt>tar</tt> will extract everything on the tape into the current directory.  If all you want is just a particular file, you can specify it on the command line.  Wildcards can also be used.  But remember that the C shell normally expands wildcards before it starts up the application you&rsquo;ve asked for.  To make sure that any wildcards get passed through to <tt>tar</tt> so it can do the pattern matching, put single or double quotes around each word that contains any wildcards.  For example, to extract all the <tt>*.c</tt> files:
</p>

<div class="codesample">69 D% tar -Lx \\.\tape0 "*.c"
</div>

<h4>
<a name="IfYouCantReadATape"></a>If you can&rsquo;t read a tape
</h4>

<p>
Most users will never have any trouble at all reading any tape they&rsquo;re ever given.  But if you do encounter difficulty, it&rsquo;s likely because of one of the following reasons:
</p>
<ol>
<li>
<p>
You&rsquo;re using Vista or Windows 7, but not as an administrator, and you have not enabled access to the tape drive.  Vista and Windows 7 have enhanced security and will not allow ordinary users to access the tape drive unless that&rsquo;s specifically been enabled.  You&rsquo;ll have to either run as administrator or follow the steps outlined in the <tt>tar -h</tt> help screen to enable access to the tape drive.
</p>
</li>

<li>
<p>
You don&rsquo;t have the tape device driver installed.   You should see a message from <tt>tar</tt> complaining that it wasn&rsquo;t able to open <tt>\\.\tape0</tt>.  You&rsquo;ll need to install the driver via the Control Panel&rsquo;s Add Hardware applet.
</p>
</li>

<li>
<p>
The tape itself is just not compatible with your drive.  Every tape drive technology is constantly being improved.  New generation drives can usually read tapes written on the older drives, but because the newer drives typically use newer, higher-density media and more sophisticated recording formats, that compatibility can be one-way only.
</p>

<p>
Examples are trying to read a DDS-2 DAT tape on a DDS-1 drive or a DC-6525 (525MB)  QIC tape on a drive that only accepts DC-600&rsquo;s or an Exabyte 8500 tape on an Exabyte 8200 drive.  In each case, you just won&rsquo;t be able to read anything.  The tape will appear to be blank.  And because a blank tape is a perfectly legal, albeit empty archive, you won&rsquo;t even see any messages.  Just nothing.  That&rsquo;s what makes this failure mode frustrating.
</p>

<p>
Often, it is possible to force the drive to write in an older, lower-density format.  With QIC and DAT drives, it&rsquo;s as simple as just being sure to use low-density media.  With an Exabyte, the solution is to set a jumper on the drive to configure it to act like the older models.
</p>
</li>

<li>
<p>
The blocksize that was used is not supported with your drive under the release of Windows you&rsquo;re running.
</p>

<p>
For example, to pack the absolute greatest possible amount of data onto a tape, some Unix machines support writing tapes with incredibly large blocksizes, sometimes 200KB or more.  This is often a problem trying to read tapes from SGI workstations.  Very few if any Windows machines support blocksizes that large.
</p>

<p>
Another example would be tape that was written with a blocksize that&rsquo;s not a multiple of 512 bytes.  That&rsquo;s no problem if you&rsquo;re running Windows NT 3.51 or later, but it&rsquo;s not supported by the device drivers that Microsoft shipped with Windows NT 3.5; you&rsquo;ll need to upgrade the operating system to read that tape.
</p>

<p>
Finally, while the blocksize might indeed be a multiple of 512, it might not be a multiple that&rsquo;s supported by your drive.  For example, QIC drives often will support only a limited set of blocksizes.
</p>

<p>
If it&rsquo;s a problem with the blocksize, you should generally get a message from <tt>tar</tt> that makes that clear.  The solution is to ask that the tape be rewritten using a blocksize you can read; some good choices might be 10,240 bytes (the POSIX standard), 1024 bytes (which everything can read and write) or the drive&rsquo;s default, which you can learn by typing <tt>mt&nbsp;status</tt>.  To rewrite the tape on the Unix machine with a 10,240-byte blocksize, the Unix <tt>tar&nbsp;-b</tt> (blocking factor) option should be used to specify a blocking factor of 20.  (On Unix, you multiply the blocking factor times 512 to get the number of bytes per block.)
</p>
</li>

<li>
<p>
You need a firmware update for your tape drive.  This is a particularly likely source of trouble if you&rsquo;ve scavenged your drive from an older system.  All tape drives today are microprocessor-controlled and the manufacturers have made a lot changes to the firmware embedded in these drives over the years.  Windows depends on that firmware being up-to-date so it can properly handshake with the drive.
</p>

<p>
Updating the firmware is generally quite simple.  Usually, you put a special update tape from the manufacturer in the drive and the drive will automatically recognize it and do the update.  Contact your drive vendor for more information if you suspect a firmware problem.
</p>
</li>

<li>
<p>
Your drive has a firmware bug.  Some drives may claim to support variable block i/o but not actually implement it properly.  If the drive claims to support this mode, <tt>tar</tt> will use it because it allows tapes be read quickly and easily even if the blocksize is unknown.  But if the drive has a firmware bug, the tape may look blank in this mode.  The workaround is to use <tt>tar</tt>&rsquo;s <tt>-V</tt> option to tell <tt>tar</tt> to ignore the drive&rsquo;s claims of supporting variable block i/o.
</p>
</li>
</ol>

<p>
You&rsquo;ll find additional discussion in the section, <a href="57-ProblemsWithTar.htm">Problems reading and writing tar bapes</a>.  If you find that none of these explanations seems to fit the problems you&rsquo;re having, it&rsquo;s time to try writing a scratch tape just to see if your drive can at least read its own tapes.
</p>

<h4>
<a name="WritingANewTarTape"></a>Writing a new tar tape
</h4>

<p>
To create a new tape with one or more files or directories in the archive, use the <tt>-c</tt> (create) option:
</p>

<div class="codesample">70 D% tar -Lc \\.\tape0 <var>file1 file2 file3 ... filen</var>
</div>

<p>
You can list as many files or directories on the line as you like.  All the usual wildcards can be used and since it&rsquo;s okay to let the C shell do the wildcard expansion, you don&rsquo;t need to put quotes around anything.  If one of the items is a directory, the entire contents of that directory will be copied to the tape.
</p>

<p>
By default, <tt>tar</tt> will try use a blocksize of 10,240 bytes, which is generally considered standard on most Unix machines.  (It&rsquo;s actually specified in the POSIX standard for <tt>tar</tt>-format tapes.)  If your drive doesn&rsquo;t support that blocksize, <tt>tar</tt> will choose something that is supported.
</p>

<h4>
<a name="AddingMoreFilesToAndExistingTarTape"></a>Adding more files to an existing tar tape
</h4>

<p>
To add one or more files or directories to an existing archive, use the <tt>-a</tt> (append) option:
</p>

<div class="codesample">71 D% tar -La \\.\tape0 <var>file1 file2 file3 ... filen</var>
</div>

<p>
Not all drives support this function since it requires that <tt>tar</tt> be able to read the entire archive, then back up to overwrite just the last record before continuing with the new files.  If you get a message from <tt>tar</tt> telling you it wasn&rsquo;t able to write to archive when you use <tt>-a</tt>, that&rsquo;s probably the reason.  In that case, you&rsquo;ll have to use the <tt>-c</tt> option instead and just plan on writing everything you want on the tape in a single operation.
</p>

<h4>
<a name="CheckThatYouCanReadTheTapeYouWrote"></a>Check that you can read the tape you wrote!
</h4>

<p>
After writing a tape, do be sure to check that you can read it back.  This is just a safety precaution the first time you try using your drive or a new setting for blocksize, etc.
</p>

<h4>
<a name="ExchangingTapesWithAUnixSystem"></a>Exchanging tapes with a Unix system
</h4>

<p>
If the Unix machine can read the data from your tape, but it comes out garbled, the problem is probably that you&rsquo;ve written the data in the wrong bytesex for that machine. Bytesex refers to the order in which the bytes are laid out on the tape.  A little-endian machine (which is what all Windows machines are by edict from Microsoft) writes the data out starting with the byte containing the least significant bits (the &ldquo;little&rdquo; end).  Many Unix machines are big-endian, meaning they start at the other end.
Reading a tape from any Unix machine, regardless of bytesex, is no problem since Hamilton <tt>tar</tt> knows how to detect the bytesex and automatically do any byteswapping that might be required.  Unix <tt>tar</tt> utilities lack this feature and leave it up to the operator to figure out what&rsquo;s going on and, if necessary, to use a separate <tt>dd</tt> utility to swap bytes.
You can verify that this is the problem if you have a tape written on the Unix machine.  Read it using the <tt>-v</tt> (verbose) option and <tt>tar</tt> will tell you what bytesex was used.
This is easy to fix.  Use the <tt>tar -b</tt> (bytesex) option to specify a different ordering when you write the tape next time.  Here&rsquo;s an example, writing all the <tt>.c</tt> and <tt>.h</tt> files in the current directory to a tape in big-endian format:
</p>

<div class="codesample">72 D% tar -LcbB \\.\tape0 *.[ch]
</div>

<p>
If the tape is simply unreadable or appears blank on the Unix machine, chances are they have an older drive that does not support compression.  (Since most Windows  machines are fairly new, the drives installed in most of them use hardware compression to pack more data onto a tape.  But this is a recent improvement in tape technology; an older Unix machine may have been built before hardware compression was available.)  To write tapes with hardware compression turned off, use the <tt>-Hoff</tt> option:
</p>

<div class="codesample">73 D% tar -LcHoff \\.\tape0 *.[ch]
</div>

<h4>
<a name="AsciiTextVersusBinaryFiles"></a>ASCII text versus binary files
</h4>

<p>
One final consideration is that Unix and Windows differ on their line-end conventions.  Unix uses a single newline <tt>\n</tt> character to mark the end of a line; Windows uses a carriage return-newline <tt>\r\n</tt> combination.  Hamilton <tt>tar</tt> assumes that because <tt>tar</tt> is fundamentally a Unix format, that any ASCII files stored in a <tt>tar</tt> file will probably follow the Unix convention.  Consequently, when extracting an ASCII text file, <tt>tar</tt> will convert from <tt>\n</tt> to <tt>\r\n</tt>; when adding a file to the archive, it will do the reverse.  Binary files are not converted.
</p>

<p>
You can override this default behavior by specifying either <tt>-r</tt> to turn off any conversions.  The  <tt>-R</tt> option causes conversions to always be done, even on files that appear to be binary.  You can also use the <tt>TARBINARY</tt> and <tt>TARASCII</tt> environment variables to list files that should be considered as being one type versus the other based on the filename, regardless of content.  For example, database products often create files with a lot of ASCII data but which really should be considered as binary.  Postscript files with encapsulated images are another example.  These files should never translated as if they were ordinary ASCII files.  You can indicate that by setting the <tt>TARBINARY</tt> environment variable.  For example, in the System applet in the Control Panel, you might set <tt>TARBINARY&nbsp;=&nbsp;*.ps</tt> to make it treat all Postscript files as binary data.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="Utilities/tar.htm">tar</a><br/>
<a href="Utilities/mt.htm">mt</a><br/>
<a href="57-ProblemsWithTar.htm">Problems reading or writing tar tapes</a><br/>
<a href="29-SpecialDevices.htm">Special devices</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
</p>


<h3>
<small><a href="05-TheUtilities.htm">Previous</a> |
<a href="07-IORedirection.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		I/O redirection
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Tutorial introduction to using I/O redirection
	with Hamilton C shell."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				I/O redirection
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm"><b>I/O redirection</b></a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
I/O redirection and piping<br/>
<small><a href="06-TarAndMT.htm">Previous</a> |
<a href="08-History.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#RedirectingToAFile">Redirecting to a file</a><br/>
<a href="#AppendingToAFile">Appending to a file</a><br/>
<a href="#noclobber">noclobber to prevent accidentally overwriting a file</a><br/>
<a href="#ProtectionAttributes">Protection attributes</a><br/>
<a href="#StdoutAndStderr">stdout and stderr</a><br/>
<a href="#Pipes">Pipes</a><br/>
<a href="#CommandSubstitution">Command substitution</a><br/>
<a href="#InlineData">Inline data</a><br/>
<a href="#InlineDataInScripts">Inline data in scripts</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="RedirectingToAFile"></a>Redirecting to a file
</h4>

<p>
You can redirect or pipe i/o in much the way you might under <tt>cmd.exe</tt>.  Here&rsquo;s a simple example redirecting stdout from the word count of the famous &ldquo;Hello, world&rdquo; program.  <tt>cat</tt> just copies from any files you tell it or, by default, from stdin to stdout.
</p>

<div class="codesample">74 E% cd hello
75 D% ls
hello.c      hello.exe
76 D% cat hello.c
#include &lt;stdio.h&gt;
main ()
   {
   printf("Hello, world.\n");
   }
77 D% wc hello.c &gt;hello.wc
78 D% cat &lt;hello.wc
        5        8       72  hello.c
</div>

<p>
<tt>wc</tt> tells us that <tt>hello.c</tt> has 5 lines, containing 8 words, totaling 72 characters.
</p>

<p>
If the file you write to with <tt>&gt;</tt> exists, it&rsquo;s first truncated to zero length (discarding the old contents); if the file doesn&rsquo;t exist, it&rsquo;s created.  With <tt>&lt;</tt>, it&rsquo;s an error if the file doesn&rsquo;t exist.
</p>

<h4>
<a name="AppendingToAFile"></a>Appending to a file
</h4>

<p>
Data can be appended to a file with the <tt>&gt;&gt;</tt> operator:
</p>

<div class="codesample">79 D% echo that^'s all folks &gt;&gt;hello.wc
80 D% cat hello.wc
        5        8       72  hello.c
that's all folks
81 D% _
</div>

<p>
When you append with <tt>&gt;&gt;</tt>, if the file exists, data is written onto the end; if it doesn&rsquo;t exist, it&rsquo;s created.  (The single quote character has special meaning to the shell on the command line; the special meaning is turned off by the shell&rsquo;s escape character, <tt>^</tt>.)
</p>

<h4>
<a name="noclobber"></a>noclobber to prevent accidentally overwriting a file
</h4>

<p>
Not everyone is comfortable with letting the shell glibly toss away an existing file if you type <tt>&gt;</tt> when you meant <tt>&gt;&gt;</tt> or lose it somewhere if you mistype an existing filename with <tt>&gt;&gt;</tt>.  The noclobber variable lets you tell the shell you want this to be caught, so you can decide if this was really what you meant.
</p>

<p>
If you set noclobber, you have to type <tt>&gt;!</tt> to redirect to an existing file:
</p>

<div class="codesample">81 D% set noclobber = 1
82 D% echo trash this file &gt; hello.c
csh:  Couldn't open 'hello.c' as a redirected standard output.
</div>

<p>
Come to think of it, let&rsquo;s not overwrite that file.
</p>

<p>
Similarly if you want to append to something that doesn&rsquo;t already exist:
</p>

<div class="codesample">83 D% echo appended data &gt;&gt; newdata
csh:  Couldn't open 'newdata' as a redirected standard output.
84 D% echo appended data &gt;&gt;! newdata
85 D% cat newdata
appended data
86 D% rm newdata
</div>

<h4>
<a name="ProtectionAttributes"></a>Protection attributes
</h4>

<p>
If a file has any of the special protection attributes, hidden, read-only or system, set, you cannot overwrite it by redirecting i/o to it.  Even when you type <tt>!</tt>, you still can&rsquo;t.  Before you can redirect to it, you must clear all these attribute bits.
</p>

<div class="codesample">87 D% ls -l zork
-SHAR  Feb 23  13:16         0  zork
88 D% echo new zork data &gt;! zork
csh:  Couldn't open 'zork' as a redirected standard output.
89 D% chmod -R zork
90 D% echo new zork data &gt;! zork
csh:  Couldn't open 'zork' as a redirected standard output.
91 D% chmod -SH zork
92 D% ls -l zork
---A-  Feb 23  13:16         0  zork
93 D% echo new zork data &gt; zork
94 D% _
</div>

<h4>
<a name="StdoutAndStderr"></a>stdout and stderr
</h4>

<p>
Redirecting both stdout and stderr together is done by adding an ampersand.  For example, using <tt>echo&nbsp;-2</tt> to deliberately write to stderr and parentheses for a simple grouping:
</p>

<div class="codesample">94 D% (echo -2 error; echo standard) &gt; zork
error
95 D% cat zork
standard
96 D% (echo -2 error; echo standard) &gt;& zork
97 D% cat zork
error
standard
98 D% _
</div>

<p>
Separately redirecting stderr and stdout to different files is a little tricky:  first you redirect them both, then redirect stdout by itself.  Here&rsquo;s an example running the C compiler with stdout to log and stderr going to errors.
</p>

<div class="codesample">98 D% cl hello.c &gt;& errors &gt; log
</div>

<p>
You can type as many i/o redirections in a row as you like.  The shell evaluates them one after another.  If you redirect to a new file, then redirect to something else, the effect is just like touch&rsquo;ing the file.
</p>

<h4>
<a name="Pipes"></a>Pipes
</h4>

<p>
Pipes are a way of connecting a series of activities together so that the output of one is read as input to the next.  Each of the activities runs asynchronously and concurrently with the others.  Data is passed completely in memory and is very fast.
</p>

<p>
The syntax is similar to i/o redirection in its use of the <tt>&amp;</tt> character.  To pipe just stdout, use  <tt>|</tt> by itself:
</p>

<div class="codesample">99 D% ls -L | more
</div>

<p>
To pipe both stdout and stderr together, use <tt>|&amp;</tt>:
</p>

<div class="codesample">100 D% cl hello\hello.c |&amp; more
</div>

<p>
The leftmost part of the pipeline is evaluated directly by the shell&rsquo;s current thread.  The successive right parts are evaluated by child threads.  (This is so that piping a command that lists status information on the current thread through a filter like more operates sensibly.)  Each part of the pipeline can be an arbitrarily complex statement, perhaps even run in a separate window.
</p>

<p>
Pipes are much faster and more responsive than with vanilla Windows due to improved buffering and scheduling technology.  A long pipeline finishes much faster.  Also, when you type <kbd>Ctrl</kbd>-<kbd>C</kbd> to interrupt, it comes back immediately without a lot of nuisance messages.
</p>

<h4>
<a name="CommandSubstitution"></a>Command substitution
</h4>

<p>
A particularly novel way of piping statements together is to use the output of one as command line arguments of another.  This is called command substitution and you indicate it by typing backquotes, <tt>`<var>...</var>`</tt>, or double backquotes, <tt>``<var>...</var>``</tt>, (literally, two backquotes) around a command.
</p>

<div class="codesample">101 D% ls +a
.              hello          zork
..             memos
102 D% echo `ls +a`
. hello zork .. memos
103 D% _
</div>

<p>
When command substitution is done, all the extra &ldquo;white space&rdquo; (space characters, tabs and newlines) is squeezed out and any ANSI escape sequences that might have turned on highlighting or color, etc., are also deleted.  You just get the list of words the backquoted command wrote to stdout.  In this example, the order of the files is a bit scrambled when the line ends are removed; the <tt>-1</tt>  (numeric one) single column option can fix this.  (Try it again using <tt>ls +a1</tt> inside the backquotes.)
</p>

<p>
With double backquotes, ANSI escape sequences are still deleted, but each line is taken as a separate word.  No additional parsing for words is done.  This is particularly useful when dealing with pathnames that may contain spaces.  Here&rsquo;s an example using <tt>ls</tt> to give a detailed listing of itself:
</p>

<div class="codesample">103 D% whereis ls
D:\Program Files\Hamilton C shell 2012 x64\Bin\ls.exe
104 D% ls -l ``whereis ls``
---A-- Jul 22 08:00     155968  d:\Program Files\Hamilton C shell 2012 x64\Bin\ls.exe
</div>

<p>
If there are any variable substitutions inside the backquotes, they&rsquo;re done by the child, not the parent.  This lets you easily embed <tt>for</tt> loops and other programming constructs into the command substitution.
</p>

<p>
Inside backquotes, only the backquote character needs to be escaped to avoid having it processed by the parent thread.
</p>

<h4>
<a name="InlineData"></a>Inline data
</h4>

<p>
A novel variation on i/o redirection is inline data, also called &ldquo;here&rdquo; documents:  literal text you want the shell to feed a command as stdin.  Here&rsquo;s an example:
</p>

<div class="codesample">105 D% cat &lt;&lt;eof
106 D? (this is the inline data)
107 D? eof
(this is the inline data)
108 D% _
</div>

<p>
The <tt>&lt;&lt;</tt> operator is followed by a string the shell is asked to look for to mark the end of the inline data.  The end-of-data string can be virtually anything you like, including wildcard characters, dollar signs, etc.; their normal meaning is turned off and they&rsquo;re treated as ordinary literal characters.  Only quote or escape characters have any special meaning, which is to turn off substitutions in the inline text (as we&rsquo;ll discuss in a moment).  Continuation lines as the shell collects the inline data get a different prompt, controlled by the <tt>prompt2</tt> variable.  Once the data has been collected in memory, it&rsquo;s written through a pipe to the command.
</p>

<p>
One very convenient use of inline data is when you want to quickly search for any one of a number of important words in a large library.  E.g., to scan for some specific strings in a set of C files:
</p>

<div class="codesample">108 D% fgrep -ns &lt;&lt;xxx ~\sh\*.c
109 D? Open
110 D? Close
111 D? Read
112 D? Write
113 D? xxx
:  search results
</div>

<p>
In situations where the inline data is being created inside a larger structure, the data is assumed to start on the first line following a break between statements.  For example, inside a <tt>for</tt> loop:
</p>

<div class="codesample">114 D% for i = 1 to 3 do
115 D? cat &lt;&lt;eof; echo i = $i
116 D? (this is the inline data)
117 D? eof
118 D? end
(this is the inline data)_
i = 1
(this is the inline data)_
i = 2
(this is the inline data)_
i = 3
</div>

<p>
If you want to put several inline i/o redirections on the same line, type the associated inline data sections, each with its own terminating string, in the same left-to-right order in which they appeared.
</p>

<p>
So far, we&rsquo;ve just shown examples involving static text.  But it&rsquo;s also possible to ask the shell to do command and variable substitutions on the inline text:
</p>

<div class="codesample">119 D% cat &lt;&lt; ***
120 D? The ^$home directory is $home.
121 D? Today's date is `date`.
122 D? ***
The $home directory is d:\Nicki
Today's date is Fri Jul 22 2011 8:57:22.03.
123 D% _
</div>

<p>
Although substitutions and escape characters inside the here document are processed, quotes (both single and double) are not.
</p>

<p>
The C shell implements here documents by spawning a child thread to do any substitutions and write the results into a pipe feeding the current thread as it continues to evaluate the statement.  If the here document contains references to shared variables, they&rsquo;ll be evaluated by that other thread.  And unless they&rsquo;re local variables, the values will not be snapshotted when the here document thread is created.  If the current thread (or any other thread) continues to make changes to a variable after the here document thread is spawned but before it evaluates the variable, the here document will contain the new, not the old value.
</p>

<p>
Command and variable substitution and escape processing inside a here document is turned off if any part of the end-of-data string following the <tt>&lt;&lt;</tt> is quoted with <tt>'</tt>, <tt>"</tt> or <tt>`</tt> or escaped:
</p>

<div class="codesample">123 D% cat &lt;&lt;^***
124 D? The ^$home directory is $home.
125 D? Today's date is `date`.
126 D? ***
The ^$home directory is $home
Today's date is `date`.
127 D% _
</div>

<h4>
<a name="InlineDataInScripts"></a>Inline data in scripts
</h4>

<p>
Inline data can be especially useful if you&rsquo;re writing a script file or passing commands to the shell through a pipe.  In either of these cases, the low-level ReadFiles to the Windows kernel cannot be depended on to stop at the end of a line because pipes and files are considered block-oriented rather than line-oriented like the keyboard.  If too many characters are read, there&rsquo;s no simple way to back up.  For this reason, it&rsquo;s not realistic to write a script where a child process is supposed to inherit stdin pointed into the script file.  In a script file, this is not reliable:
</p>

<div class="codesample">:
:
csh
echo hello
exit
:
:
</div>

<p>
The file descriptor the child process inherits will likely not be pointing at the &ldquo;echo hello&rdquo; when it exits, the parent will likely not find it pointed just past the &ldquo;exit&rdquo;.  This type of script should be written as:
</p>

<div class="codesample">:
:
csh &lt;&lt;eof
echo hello
exit
eof
:
:
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="26-IORedirection.htm">I/O redirection</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="42-PerThreadVariables.htm">Inherited variables</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
</p>


<h3>
<small><a href="06-TarAndMT.htm">Previous</a> |
<a href="08-History.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		History
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				History
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm"><b>History</b></a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
History<br/>
<small><a href="07-IORedirection.htm">Previous</a> |
<a href="09-Variables.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#RecallingEarlierCommands">Recalling and running earlier commands</a><br/>
<a href="#RetrievingAWholeCommandLine">Retrieving a whole command line</a><br/>
<a href="#RetrievingIndividualWords">Retrieving individual words</a><br/>
<a href="#HistoryShortForm">History short-form</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="RecallingEarlierCommands"></a>Recalling and running earlier commands
</h4>

<p>
The history mechanism lets you recall and rerun earlier commands.  To see what it&rsquo;s remembered,  use the <tt>history</tt> command or its usual alias <tt>h</tt>, which might show you something like the following:
</p>

<div class="codesample">127 D% history 12
   116  (this is the inline data)
   117  eof
   118  end
   119  cat &lt;&lt; ***
   120  The ^$home directory is $home.
   121  Today's date is `date`.
   122  ***
   123  cat &lt;&lt; ^***
   124  The ^$home directory is $home.
   125  Today's date is `date`.
   126  ***
   127  history 12
128 D% _
</div>

<p>
The history list won&rsquo;t be quite what you typed: it&rsquo;ll be broken into separate words wherever  one of the special tokens, <tt>&amp;</tt>, <tt>|</tt>, <tt>;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>(</tt>, <tt>)</tt>, <tt>&amp;&amp;</tt>, <tt>||</tt>, <tt>&gt;&gt;</tt> or <tt>&lt;&lt;</tt>, occurs.  Only inline data escapes being broken up into words this way.  Each command may be thought of as an array of words, indexed from 0. 
</p>

<p>
To reuse the text or maybe just a few words from a previous command, you type an exclamation point <tt>!</tt> followed by a few characters to identify what you want to reuse.  You can do this anywhere and whatever you select is just stuffed back on the command line to be interpreted as whatever the context suggests.  For convenience, the exclamation point is not treated as a history reference if it&rsquo;s followed by white space (a space, tab or newline) or by <tt>=</tt>, <tt>~</tt> or <tt>(</tt>.
</p>

<h4>
<a name="RetrievingAWholeCommandLine"></a>Retrieving a whole command line
</h4>

<p>
There several ways of picking up a whole command line.  You already know how to do it interactively with arrow keys and command completion.  You can also use a shorthand notation that can be more convenient if you want to do something a bit more complex.  The simplest shorthand is <tt>!!</tt>, which picks up the text of the immediately preceding command:
</p>

<div class="codesample">128 D% echo !!
echo history 12
history 12
129 D% !!
echo history 12
history 12
130 D% _
</div>

<p>
The shell first echoes your command showing the effects of the substitutions and then runs it.  The other quick ways of referring to a whole command line from history are by the command number,
</p>

<div class="codesample">130 D% !104
ls -l ``whereis ls``
---A-- Jul 22 08:00     155968  D:\Program Files\Hamilton C shell 2012 x
64\Bin\ls.exe
</div>

<p>
relative to the immediately preceding command,
</p>

<div class="codesample">131 D% echo one
one
132 D% echo two
two
133 D% echo three
three
134 D% !-1
echo two
two
135 D% _
</div>

<p>
or by mentioning some of the text to look for.  A question mark after the exclamation point means you&rsquo;ll accept the match anywhere on the line; otherwise it has to be at the start.
</p>

<div class="codesample">135 D% !h
history 12
   124  The ^$home directory is $home.
   125  Today's date is `date`.
   126  ***
   127  history 12
   128  echo history 12
   129  echo history 12
   130  ls -l  `whereis ls`
   131  echo one
   132  echo two
   133  echo three
   134  echo two
   135  history 12
</div>

<p>
A search string ends at the first word boundary.  This is so it&rsquo;s convenient to type additional text following without having it be confused as part of the search string.  For example:
</p>

<div class="codesample">136 D% !?one;!?two;!?thr
echo one ; echo two ; echo three
one
two
three
137 D% _
</div>

<h4>
<a name="RetrievingIndividualWords"></a>Retrieving individual words
</h4>

<p>
To pick off individual words of the immediately preceding command, there&rsquo;s some convenient shorthand. <tt>!*</tt> gets all the argument words:
</p>

<div class="codesample">137 D% echo now is the time
now is the time
138 D% echo Finally, !* to begin
echo Finally, now is the time to begin
Finally, now is the time to begin
139 D% _
&ldquo;!$&rdquo; gets just the last word:
139 D% echo the last word was !$.
echo the last word was begin.
the last word was begin.
140 D% _
and &ldquo;!^&rdquo; gets just the first argument word:
140 D% echo ===!^=== time is here
echo ===the=== time is here
===the=== time is here
141 D% _
</div>

<p>
Notice that a history substitution can be smashed right up against other literal text.
</p>

<p>
In the chapter on editing, additional facilities for selecting individual words or doing a search/replace will be introduced.
</p>

<h4>
<a name="HistoryShortForm"></a>History short-form
</h4>

<p>
Recognizing how frequently one would like to make a simple change to the immediately preceding command to correct a typo, the history mechanism provides a short form for just that purpose.  <tt>%</tt> typed as the first character on the command line indicates that a search/replace pair follows:
</p>

<div class="codesample">141 D% echo hello world
hello world
142 D% %world%friends%
echo hello friends
hello friends
</div>

<p>
Typing <tt>%%</tt> matches the beginning of the line:
</p>

<div class="codesample">143 D% %%echo %
echo echo hello friends
echo hello friends
</div>

<p>
It&rsquo;s also possible to refer to the search string in the replacement string by using an ampersand.  (This example also illustrates that the trailing <tt>%</tt> isn&rsquo;t required unless you want to explicitly mark the end of the replacement.)
</p>

<div class="codesample">144 D% %friends%family, &amp; and neighbors
echo echo hello family, friends and neighbors
echo hello family, friends and neighbors
145 D% _
</div>

<p>
Obviously, that raises the question:  how do you put a literal ampersand in the replacement?  Simple.  Just quote it with <tt>^</tt>, the shell escape character.
</p>

<div class="codesample">145 D% %and%^&amp;
echo hello family, friends &amp; neighbors
hello family, friends &amp; neighbors
146 D% _
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
</p>


<h3>
<small><a href="07-IORedirection.htm">Previous</a> |
<a href="09-Variables.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Variables
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Variables
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm"><b>Variables</b></a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Variables<br/>
<small><a href="08-History.htm">Previous</a> |
<a href="10-Wildcarding.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#EnvironmentVariables">Environment variables</a><br/>
<a href="#SetVariables">Set variables</a><br/>
<a href="#LocalVariables">Local variables</a><br/>
<a href="#VariableSubstitutions">Variable substitutions</a><br/>
<a href="#nonovar">nonovar</a><br/>
<a href="#HowVariablesAreStored">How variables are stored</a><br/>
<a href="#Arrays">Arrays</a><br/>
<a href="#nullwords">nullwords</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
As with any conventional programming language, the shell provides a facility for storing values in variables.
</p>

<h4>
<a name="EnvironmentVariables"></a>Environment variables
</h4>

<p>
Some of the variables are part of the environment, passed along to any child process.  Many of the environment variables will have been created just this way, e.g., set to a value passed along when you start the C shell from a shortcut on your desktop.  To list those currently defined, use the setenv command. 
</p>

<div class="codesample">146 D% setenv
COMSPEC    C:\WINDOWS\system32\cmd.exe
HOME       d:\Nicki
INCLUDE    d:\Nicki\Include
LIB        d:\Nicki\lib 
PATH       .;d:\Program Files\Hamilton C shell 2012 x64\Bin; d:\Program 
           Files\Hamilton C shell 2012 x64\Samples;C:\WINDOWS\system32; 
           C:\WINDOWS
PROMPT1    $@ $CDISK% 
PROMPT2    $@ $CDISK? 
SHELL      d:\Program Files\Hamilton C shell 2012 x64\Bin\csh.exe
TABS       3
TMP        e:\tmp
</div>

<p>
Variable names are case-preserving but case-insensitive on Windows.  They can be of arbitrary length.  A name must start with an upper- or lower-case alphabetic character or underscore<tt>_</tt> or at-sign <tt>@</tt>; remaining characters may any of these or decimal digits. Many of the environmental variables have specific meanings.  For example, the <tt>PATH</tt> variable tells where to look for executable files, etc.  Details describing the meaning of each variable are given in the language reference section.
</p>

<p>
The <tt>setenv</tt> command can also be used to create a new environmental variable or alter or display the value of an existing one:
</p>

<div class="codesample">147 D% setenv zork = this is the zork variable
148 D% setenv zork
zork         this is the zork variable
149 D% _
</div>

<p>
If the list of words being assigned to the variable includes any special tokens, it&rsquo;s often useful to use the parenthesized variant of <tt>setenv</tt>.  In this example, the <tt>&gt;</tt> would have been confused as an i/o redirection if it weren&rsquo;t inside parenthesis.  Notice that the parenthesis are stripped off before the assignment is made.
</p>

<div class="codesample">149 D% setenv greatest = (At Berkeley, they say 4.3 &gt; V)
150 D% setenv greatest
greatest     At Berkeley, they say 4.3 &gt; V
</div>

<p>
Even though the special meaning is lost, text inside the parenthesis is still broken down into words, as shown in this example:
</p>

<div class="codesample">151 D% setenv pdirs = (.;d:\Nicki\bin;d:\Nicki\LastRTM;d:\Nicki;)
152 D% setenv pdirs
pdirs        . ; d:\Nicki\bin ; d:\Nicki\LastRTM ; d:\Nicki
</div>

<p>
(To avoid having the text broken up into words, use single or double quotes around the string instead.)
</p>

<h4>
<a name="SetVariables"></a>Set variables
</h4>

<p>
Set variables do not get passed to a child process but are shared among all threads.  To get a list of those currently defined, use the <tt>set</tt> command:
</p>

<div class="codesample">153 D% set
CDISK        D
argv        
cdhome       0
cdisk        d
:
:
path         . d:\Nicki\bin d:\Nicki\LastRTM d:\Nicki
precision    6
:
:
</div>

<p>
Some of the set variables are linked to the environmental variables: you change one, and the other changes too.  For example, path contains the same information as PATH but, because it&rsquo;s been parsed into individual words, it&rsquo;s often a bit more useful.
</p>

<p>
On Windows, this linkage can pose a bit of a problem.  Since the convention is that environmental variables are supposed to be case-insensitive, there clearly is a conflict between, for example, the PATH environmental and path set variables.  The C shell resolves this by making the <tt>set</tt>, <tt>unset</tt> and <tt>@</tt> statements case-sensitive (so you can still create set variables that differ from environmental variables only by case) but the <tt>setenv</tt> and <tt>unsetenv</tt> and <tt>$<var>var</var></tt> and other variable references first try case-sensitive, then case insensitive variable lookups.
</p>

<p>
Many of the set variables are predefined by the shell to control various aspects of how errors are handled, etc.  In some cases, each thread maintains its own copy.  For example, it wouldn&rsquo;t do to insist that all threads must use the same value for the <tt>cwd</tt> (current working directory) variable!  The rest of the variables, including any defined by the user, are shared among all threads:  if one thread changes a value, all the other threads see the change immediately.  As we&rsquo;ll see later, this has some implications when spawning background activities.
</p>

<p>
In other respects, <tt>set</tt> works just like <tt>setenv</tt>:
</p>

<div class="codesample">154 D% set privatezork = this is the private zork variable
155 D% set privatezork
privatezork   this is the private zork variable
156 D% _
</div>

<p>
Once a variable has been created as either a set or an environmental variable, it stays that way:  to change it from set to environmental, you must first <tt>unset</tt> it, then redefine it.
</p>

<h4>
<a name="LocalVariables"></a>Local variables
</h4>

<p>
We just mentioned that not all the predefined set variables are shared.  Individual threads get their own private copies of some because to do otherwise wouldn&rsquo;t be sensible.  Sometimes you need the same sort of control over the variables you create.  You don&rsquo;t want to share a variable with other threads or even with commands outside a very narrow context.
</p>

<p>
You accomplish this making the variable local, which means it&rsquo;s hidden from outer control blocks or other threads.  Local variables are really important, as we&rsquo;ll see later, for recursive procedures or for procedures you want to use from multiple threads.  To define a variable as local, use the <tt>local</tt> statement, which accepts a list, separated with commas, of all the variable names you want to be local.  When a new local variable is created, its initial value is always null (zero words), even if there was a previous definition.  Here you can see how the variable i is redefined inside the nested statements but once you exit from the nest, the old value of i is again visible:
</p>

<div class="codesample">156 D% set i = hello world
157 D% echo $i
hello world
158 D% (local i; echo $i; set i = how are you; echo $i)

how are you
159 D% echo $i
hello world
</div>

<p>
When you spawn a child thread, e.g., as a background activity or as the second or following stage of a pipeline, it gets copies of all your local variables, snapshotted at the time it&rsquo;s spawned.  If either the parent or the child later changes to the value of any those local variables, they affect only its own copy.
</p>

<h4>
<a name="VariableSubstitutions"></a>Variable substitutions
</h4>

<p>
The simplest way to use a variable is in a simple substitution, where a dollar sign is used to indicate that a variable name follows, similar to using a <tt>%</tt> in cmd.exe.  The value is substituted in and the statement is evaluated.
</p>

<div class="codesample">160 D% echo $HOME
d:\Nicki
</div>

<p>
Text surrounding the variable reference is generally just pasted around the value that&rsquo;s substituted in:
</p>

<div class="codesample">161 D% echo My home directory is ---$HOME---
My home directory is ---d:\Nicki---
</div>

<p>
If the surrounding text would be confused as part of the variable name, it&rsquo;s necessary to insulate the variable reference with braces.  For example:
</p>

<div class="codesample">162 D% echo ${HOME}XXX
d:\NickiXXX
</div>

<h4>
<a name="nonovar"></a>nonovar
</h4>

<p>
If you try to reference a variable, procedure or an alias and it doesn&rsquo;t exist, it&rsquo;s considered an error unless you set the <tt>nonovar</tt> variable to indicate how you want the situation treated.
</p>

<div class="codesample">163 D% echo $nonesuch
csh:  The variable 'nonesuch' is not defined.  To suppress this error,
set nonovar = 1 (pass through) or 2 (discard).
164 D% set nonovar = 1
165 D% !e
echo $nonesuch
$nonesuch
166 D% set nonovar = 2
167 D% !e
echo $nonesuch

168 D% set nonovar = 0
</div>

<h4>
<a name="HowVariablesAreStored"></a>How variables are stored
</h4>

<p>
Each variable is kept internally as a list (an array) of objects.  An individual object can be a (possibly null) character string, a 32-bit integer or a 64-bit floating point value.  Generally speaking, it&rsquo;s not necessary to worry too much about how a specific object is represented, though, since the shell automatically does any necessary conversions to allow a value to be used sensibly in any given context.
</p>

<p>
Notice, however, that even though the value of an environmental variable may be a list, it is always rendered as a simple character string when it&rsquo;s passed to a child process.  Here&rsquo;s an example using the <tt>$#</tt> notation to ask how many words are in a variable&rsquo;s value:
</p>

<div class="codesample">169 D% echo $zork
this is the zork variable
170 D% echo $#zork
5
171 D% csh
Hamilton C shell(tm) x64 Release 5.0
Copyright (c) 1988-2011 by Hamilton Laboratories.
1 D% echo $zork
this is the zork variable
2 D% echo $#zork
1
3 D% exit
172 D% _
</div>

<p>
In this example, zork holds five words: <tt>this</tt>, <tt>is</tt>, <tt>the</tt>, <tt>zork</tt> and <tt>variable</tt>.  But when we start up a new child process running the shell, the child process sees <tt>zork</tt> as holding only a single word:  <tt>this is the zork variable</tt>.
</p>

<p>
Here&rsquo;s another example where we assign a floating point value to an environmental variable.  In the current process, the exact binary floating representation is used.  When it&rsquo;s passed to a child process, the value is first converted to a character string, losing some of the precision.  This example also introduces the <tt>calc</tt> statement which evaluates an expression and prints the value.  In an expression, a variable name is recognized even without a <tt>$</tt> to introduce it; in fact, that&rsquo;s the preferable way to do it.  If you use a <tt>$</tt>-style variable substitution, the shell pastes in a character-string representation, again losing precision.  Also, the full range of C language expression operators is available.
</p>

<div class="codesample">172 D% setenv envVar = 0
173 D% calc ++envVar
1
174 D% calc envVar /= 7
0.142857
175 D% calc envVar*7
1.000000
176 D% csh &lt;&lt;eof
177 D? calc envVar*7
178 D? exit
179 D? eof
Hamilton C shell(tm) x64 Release 5.0
Copyright (c) 1988-2011 by Hamilton Laboratories.
0.999999
180 D% calc $envVar*7
0.999999
</div>

<h4>
<a name="Arrays"></a>Arrays
</h4>

<p>
Variables can hold a list of values indexed as an array.  As with the C language, arrays are indexed, counting from zero, with an expression inside <tt>[<var>...</var>]</tt> brackets.  The expression can be arbitrarily complex, but it must evaluate to an exact integer value.  The next example shows how a floating point value can be used, but if it&rsquo;s not precisely an integer, an error results.  The precision variable controls the number of digits past the decimal point used when displaying a floating point value; the maximum is 17 digits.
</p>

<div class="codesample">181 D% set x = now is the time for all good men
182 D% calc x[5.000000]
all
183 D% calc 2**500
3.27339061e+150
184 D% calc y = log2(!$)/100
calc y = log2 ( 2**500 ) /100
5.000000
185 D% calc x[y]
csh:  Couldn't evaluate the index to the variable 'x'.
186 D% set precision = 30
187 D% calc precision
17
188 D% calc y
5.00000000000000100
189 D% calc x[round(y)]
all
</div>

<p>
An array cannot be <em>sparse;</em> i.e., before you can create an element 5, element 4 must exist and so on.  But it&rsquo;s perfectly legal to keep adding new elements onto the end of array as long as the new element is the zero-th element or only one past whatever&rsquo;s currently the last element.  Here&rsquo;s an example using a for loop.  The <tt>@</tt> statement is like <tt>calc</tt> except it doesn&rsquo;t print anything.
</p>

<div class="codesample">190 D% unset x
191 D% for i = 0 to 4 do
192 D? @ x[i] = 2*i
193 D? end
194 D% echo $x
0 2 4 6 8
</div>

<h4>
<a name="nullwords"></a>nullwords
</h4>

<p>
When you index an array, if the element you specify doesn&rsquo;t exist, that&rsquo;s normally considered an error.  For example, <tt>x</tt> contains 5 words; trying to reference a sixth fails:
</p>

<div class="codesample">195 D% calc x[5]
csh:  Illegal subscript in variable reference 'x[5]'.  (To suppress this 
error, set nullwords = 1.)
</div>

The <tt>nullwords</tt> variable is used to tell the shell that you&rsquo;d like to
ignore subscripting errors when you try to evaluate a variable reference.
<tt>nullwords</tt> has no effect over subscripting errors when you try to set the
value of a non-existent element.  Here are some examples:

<div class="codesample">196 D% set nullwords = 1
197 D% echo -- "---&gt;$x[999]&lt;---"
---&gt;&lt;---
198 D% calc x[999] = "does not work"
csh:  Illegal subscript in variable reference 'x[999]'.
</div>

<p>
The use of the <tt>--</tt> option and of double quotes was important:  <tt>--</tt> told echo that it had reached the end of any options, allowing it to print something that began with a minus sign.  The quotes were used, in the first case, to turn off recognition of redirection characters <tt>&gt;</tt> and <tt>&lt;</tt> but still get the variable substitution.  The second time, it was to make the string, <tt>does not work</tt> a single word.  (If you try leaving off the quotes or not using <tt>--</tt>, you&rsquo;ll see that the error messages are what you&rsquo;d expect.)
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">The @, calc, set, setenv and local statements</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution syntax</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="41-ProcessWideVariables.htm">Predefined shared variables</a><br/>
<a href="42-PerThreadVariables.htm">Predefined inherited variables</a><br/>
<a href="43-PerThreadVariables.htm">Predefined initialized variables</a><br/>
<a href="44-VariablesSortedByName.htm">Combined list of predefined variables</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
</p>


<h3>
<small><a href="08-History.htm">Previous</a> |
<a href="10-Wildcarding.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Wildcarding
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Wildcarding
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm"><b>Wildcarding</b></a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Wildcarding<br/>
<small><a href="09-Variables.htm">Previous</a> |
<a href="11-Editing.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#HomeDirectoryExpansion">Home directory expansion</a><br/>
<a href="#WildcardCharacters">Wildcard characters</a><br/>
<a href="#Ranges">Ranges</a><br/>
<a href="#Alternation">Alternation</a><br/>
<a href="#IndefiniteDirectories">Indefinite directories</a><br/>
<a href="#MatchFailures">Match failures</a><br/>
<a href="#XcopyProblem">Caution:  the copy, xcopy, rename and del commands</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
The notion of wildcarding is pretty simple:  the user gives just a few characters describing the filename he&rsquo;s looking for and system fills in the rest.  With &ldquo;vanilla&rdquo; Windows, wildcarding is the responsibility of each application, based on the command-line arguments it&rsquo;s given.  Typically, the application designer fulfills this by linking in a library routine which does a simple-minded half-hearted wildcarding.
</p>

<p>
Hamilton C shell does the wildcarding before invoking the application.  The shell&rsquo;s wildcarding includes five components:  home directory expansion, wildcarding characters, ranges, alternation and indefinite directories.  A powerful recursive match algorithm is employed to guarantee a sensible result no matter how complex the pattern.
</p>

<h4>
<a name="HomeDirectoryExpansion"></a>Home directory expansion
</h4>

<p>
The tilde character, <tt>~</tt>, is recognized as shorthand for the home directory.  In the simplest form, we can use it just by itself:
</p>

<div class="codesample">199 D? echo $home
d:\Nicki
200 D% cd ~
201 D% cd
d:\Nicki
</div>

<p>
There&rsquo;s also shorthand for children or siblings of the home directory:
</p>

<div class="codesample">202 D% cd ~\samples
203 D% cd
d:\Nicki\Samples
204 D% cd ~Jeff
205 D% cd
d:\Jeff
</div>

<h4>
<a name="WildcardCharacters"></a>Wildcard characters
</h4>

<p>
The wildcard characters, <tt>*</tt> and <tt>?</tt>, provide shorthand for &ldquo;match any string&rdquo; and &ldquo;match any single character,&rdquo; respectively.
</p>

<p>
Suppose the home directory contained the following contents:
</p>

<div class="codesample">206 D% cd ~
207 D% ls
<b>bcs         mandel      sh</b>          ex.rc       release.csh
<b>bix         mba         testcode</b>    icon.ico    ring.ico
<b>channel.one online      util</b>        login.csh   snapshot.csh
<b>dial        postscpt    word</b>        mail        startup.csh
<b>excel       regressn</b>    backup.csh  Ozzie.jpg   vi.ini
<b>games       resume</b>      brite.csh   popup.txt
<b>icon        samples</b>     class.txt   prime.c
</div>

<p>
The following example shows the use of <tt>?</tt> to match any single character.  Wildcard results are always shown alphabetically in lower case.  No distinction is made between directories and files.
</p>

<div class="codesample">208 D% echo ????
dial icon mail util word
209 D% echo b??
bcs bix
</div>

<p>
The <tt>*</tt> can match zero or more arbitrary characters except <tt>:</tt> or <tt>\</tt>; in contrast to Windows-style wildcarding, <tt>*</tt> can match <tt>.</tt>.  If there are ordinary characters in the pattern, they must also be matched.
</p>

<div class="codesample">210 D% echo *mp*e*
samples
</div>

<p>
Because the wildcarding is done before the command is invoked (without the command even being aware), wildcarding can even be done on a cd command:
</p>

<div class="codesample">211 D% cd !$
cd *mp*e*
212 D% cd
d:\Nicki\samples
</div>

<p>
Wildcarding is most emphatically not restricted to matches only against a single directory level.  Here&rsquo;s an example that wildcards across all the subdirectories, looking for <tt>.c</tt> files that begin with <tt>a</tt>.
</p>

<div class="codesample">213 D% cd ..
214 D% echo *\a*.c
samples\args.c sh\allocate.c
</div>

<p>
Wildcarding can even be done against driveletters.  For example:
</p>

<div class="codesample">215 D% echo *:\*\q*
i:\mail\quotes.doc i:\tmp\query.out j:\nicki\quantity.disc
</div>

<p>
When wildcarding against driveletters, the shell restricts the set of drives it will search down to just those specified by the <tt>DRIVEMASK</tt> environment variable.  If you don&rsquo;t specify a <tt>DRIVEMASK</tt>, the default is all drives except the floppies <tt>a:</tt> and <tt>b:</tt>.  The search is restricted so you don&rsquo;t waste time trying to access slow removable media that may not even be ready.
</p>

<h4>
<a name="Ranges"></a>Ranges
</h4>

<p>
Ranges describe a set of characters, any one of which will be matched.  It&rsquo;s specified as a list of acceptable characters inside <tt>[<var>...</var>]</tt> brackets.  The range <tt>[be]</tt> means either <tt>b</tt> or <tt>e</tt>; <tt>[b-e]</tt> is shorthand for any character in the sequence <tt>b</tt> through <tt>e</tt>.  Within the brackets, any number of hyphenated sequences and single characters can pasted one after the other in any order.  For example, <tt>[a-cu-zgkmp]</tt> is a perfectly legal range.  Here are a couple examples.  Notice that ranges can also be used with driveletters.
</p>

<div class="codesample">216 D% echo [be]*
backup.csh bcs bix brite.csh ex.rc excel
217 D% echo[d-g]:\[s-t]*
d:\taxes d:\tmp e:\spool e:\startup.cmd e:\temp e:\toolkit.sys
f:\swap f:\tmp f:\toys g:\skip g:\temp g:\tmp
</div>

<p>
An exclusion range is written as a set of characters inside the brackets that starts with a circumflex.  It&rsquo;ll match any single character not in the range.
</p>

<div class="codesample">218 D% echo [^a-t]*
util vi.ini word
</div>

<h4>
<a name="Alternation"></a>Alternation
</h4>

<p>
Alternation, specified with <tt>{<var>...</var>}</tt> braces, is a shorthand way of specifying that all the combinations of frontparts and backparts should be generated. There isn&rsquo;t any requirement that the filenames constructed actually exist.
</p>

<div class="codesample">219 D% echo {zork,gadzooks}.csh
zork.csh gadzooks.csh
220 D% echo {a,b}{c,d}{e,f}
ace acf ade adf bce bcf bde bdf
</div>

<p>
Alternation can be combined arbitrarily with the other wildcard constructs:
</p>

<div class="codesample">221 D% echo {[bc],*r}*i*
bix brite.csh brite.csh ring.ico
</div>

<h4>
<a name="IndefiniteDirectories"></a>Indefinite directories
</h4>

<p>
The ellipsis, <tt>...</tt>, is an indefinite definite directory wildcard.  It&rsquo;ll match zero or more arbitrary directory levels -- whatever it takes to make the rest of the wildcard match.  To be recognized as a wildcard, the context must indicate it&rsquo;s really a filename, i.e., it must be preceded by <tt>\</tt>, <tt>/</tt>, <tt>~</tt> or <tt>:</tt> or followed by <tt>\</tt> or <tt>/</tt>.  For example, to find all the <tt>.inf</tt> files anywhere on the <tt>C:</tt> drive, one might type:
</p>

<div class="codesample">222 D% ls d:\...\xm*
d:\Nicki\book\XmlConcepts.doc
</div>

<p>
As with all the wildcard constructs, the indefinite directory construct can be used completely arbitrarily. It can even be used several times in the same wildcard.  But do notice if you do that, there is a possibility of getting the same file listed more than once:
</p>

<div class="codesample">223 D% ls f:\...\a*\...\s*
f:\u\Andrew\Accounts\Secret    f:\u\Andrew\Accounts\Secret
</div>

<p>
This can happen if there&rsquo;s more than one possible way to match the same pathname.  In this example, the <tt>a*</tt> part could matched either <tt>Andrew</tt> or <tt>Accounts</tt> with the first <tt>...</tt> matching either <tt>u\Andrew</tt> or <tt>u</tt> and the second <tt>...</tt> matching either <tt>Accounts</tt> or just zero levels.
</p>

<h4>
<a name="MatchFailures"></a>Match failures
</h4>

<p>
When you specify a sequence of wildcard patterns and none of them match, it&rsquo;s normally treated as an error.  In this example, the first command causes an error because there&rsquo;s no file or directory name with a &ldquo;z&rdquo; in it.  The second command executes without error because, out of the sequence of patterns, there&rsquo;s at least one match.
</p>

<div class="codesample">224 D% echo *z*
csh:  Wildcarding failed to produce any matches.  To suppress
this error, set nonomatch = 1 (pass through) or 2 (discard).
225 D% echo *z* sa*
samples
</div>

<p>
In this context, the fact that alternation caused something to be generated is not the same as a match.  In the next example, <tt>{zork,gadzooks,*z*}.csh</tt> is the same as <tt>zork.csh</tt> <tt>gadzooks.csh</tt> <tt>*z*.csh</tt>; only the last element involves any matching, and it fails.
</p>

<div class="codesample">226 D% echo {zork,gadzooks,*z*}.csh
csh:  Wildcarding failed to produce any matches.  To suppress
this error, set nonomatch = 1 (pass through) or 2 (discard).
</div>

<p>
The <tt>nonomatch</tt> variable lets you control how a wildcard failure is treated.  It works just the way nonovar works when you reference to a non-existent variable.
</p>

<div class="codesample">227 D% set nonomatch = 1
228 D% echo *z*
*z*
229 D% !s:s/1/2/
set nonomatch = 2
230 D% !e
echo *z*

231 D% !s:s/2/0/
set nonomatch = 0
232 D% !e
echo *z*
csh:  Wildcarding failed to produce any matches.  To suppress
this error, set nonomatch = 1 (pass through) or 2 (discard).
</div>

<h4>
<a name="XcopyProblem"></a>Caution:  the copy, xcopy, rename and del commands
</h4>

<p>
Hamilton C shell expands out wildcards before it invokes the application you name.  This is not what the <tt>copy</tt>, <tt>xcopy</tt>, <tt>rename</tt>, and <tt>del</tt> commands expect!  Suppose there are two files, <tt>file.a</tt> and <tt>file.b</tt> on your diskette <tt>a:</tt>, that you wanted to copy to your current drive.  Under <tt>cmd.exe</tt>, it would be natural to type:
</p>

<div class="codesample">[D:\NICKI] xcopy.exe a:*.*
Source files are being read...

A:FILE.A
A:FILE.B

2 file(s) copied.
</div>

<p>
The destination is implicit.  <tt>xcopy</tt> understands the wildcarding to mean &ldquo;copy everything on drive <tt>a:</tt> to the current disk and directory.&rdquo;  That is not what would happen under the C shell!  Because the wildcard would be expanded first, it would act instead as if you had typed:
</p>

<div class="codesample">[D:\NICKI] xcopy.exe a:file.a a:file.b
Source files are being read...

A:FILE.A

1 file(s) copied.
</div>

<p>
Do you see what happens?  If wildcarding is done first, the <tt>xcopy</tt> command sees just the two filenames and figures you mean to copy one right over the other.  <tt>file.b</tt> is lost!  For this reason, the normal <tt>startup.csh</tt> file contains some carefully constructed aliases and procedures to intercept the <tt>copy</tt>, <tt>xcopy</tt>, <tt>rename</tt> and <tt>del</tt> commands:
</p>

<div class="codesample">proc safecopy(files)
   cmd /c copy $files; @ nowild = s; unlocal s
end
alias copy   (local s; @ s = nowild; @ nowild = 1; safecopy)

proc safexcopy(files)
   xcopy.exe $files; @ nowild = s; unlocal s
end
alias xcopy  (local s; @ s = nowild; @ nowild = 1; safexcopy)

proc saferename(files)
   cmd /c rename $files; @ nowild = s; unlocal s
end
alias rename (local s; @ s = nowild; @ nowild = 1; saferename)
alias ren    rename

proc safedel(files)
   cmd /c del $files; @ nowild = s; unlocal s
end
alias del      (local s; @ s = nowild; @ nowild = 1; safedel)
alias erase    del
</div>

<p>
The way this works by saving the current value of <tt>nowild</tt> (which tells whether wildcarding is should be done), turning off wildcarding, invoking the <tt>copy</tt>, <tt>xcopy</tt>, <tt>rename</tt> or <tt>del</tt> command, then restoring the wildcarding state.  <tt>s</tt> is a temporary variable that gets discarded after its been used.
</p>

<p>
Be sure to always invoke <tt>copy</tt>, <tt>xcopy</tt>, <tt>rename</tt> and <tt>del</tt> via these aliases.  If you encounter other applications that really must do their own wildcarding, use this same technique with them.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="31-Wildcarding.htm">Wildcarding and pattern matching</a><br/>
<a href="32-FilenameCompletion.htm">Filename completion</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="52-PredefinedAliases.htm">Predefined aliases</a><br/>
<a href="49-BuiltinProcedures.htm">Builtin and predefined procedures</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i>  Filename completion</a><br/>
</p>


<h3>
<small><a href="09-Variables.htm">Previous</a> |
<a href="11-Editing.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Editing
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Editing
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm"><b>Editing</b></a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Editing<br/>
<small><a href="10-Wildcarding.htm">Previous</a> |
<a href="12-Quoting.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#WordSelections">Word selections</a><br/>
<a href="#SearchReplace">Search/replace</a><br/>
<a href="#PathnameEditing">Pathname editing</a><br/>
<a href="#SpecializedOperations">Specialized operations</a><br/>
<a href="#HistoryEdits">History edits</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
Often, the text returned by a <a href="08-History.htm">history</a>, <a href="09-Variables.htm#VariableSubstitutions">variable</a> or <a href="07-IORedirection.htm#CommandSubstitution">command substitution</a> isn&rsquo;t quite what you want.  For example, you may want to select only certain words, do a search/replace, or manipulate a filename that&rsquo;s been returned.  The editing facilities provide these capabilities.
</p>

<p>
The examples in this chapter show a sampling of various combinations of editing commands and types of substitutions.  There simply isn&rsquo;t room to show all the possibilities nor is there really a need to:  with two exceptions (<tt>:%</tt>and <tt>:p</tt>), any editing command can be applied against any substitution type or against the result of another editing command.
</p>

<h4>
<a name="WordSelections"></a>Word selections
</h4>

<p>
<a href="38-SubstitutionModifiers.htm">Editing modifiers</a> begin with a colon, <tt>:</tt>, followed by an editing command.  You can select words either by number or symbolically:  first, last, all, etc.  Here are examples of the <tt>:*</tt>, <tt>:$</tt> and <tt>:^</tt> modifiers to select all, last, and first argument words, respectively.  Notice that any number of editing modifiers may strung together.  For example, <tt>:*:^</tt> means the first argument word (word 1) of the sequence formed of all the original argument words, i.e., word 2.
</p>

<div class="codesample">233 D% echo Finally, now is the time
Finally, now is the time
234 D% echo !!:$
time
235 D% echo !?Fin:*:^
echo now
now
</div>

<p>
It is also possible to select words by indexing through the array associated with a given substitution.  The words are counted from zero.
</p>

<div class="codesample">236 D% echo `echo now is the time`:2
the
</div>

<p>
Ranges of words can also be specified with a hyphen between the beginning and ending word indices.  In this context, the minus sign indicates a range, not subtraction.
</p>

<div class="codesample">237 D% set x = now is the time for all good men
238 D% echo $x:1-5
is the time for all
</div>

<p>
When the operand is a <tt>!?</tt>-style history substitution, there&rsquo;s a special operator, <tt>:%</tt>, for selecting the particular word that triggered the match:
</p>

<div class="codesample">239 D% echo !?Fin:%
echo Finally
Finally
</div>

<p>
Each of the three symbolic word selectors, <tt>^</tt>, <tt>$</tt> and <tt>%</tt>, can be used anywhere a decimal word number would be acceptable.  For example:
</p>

<div class="codesample">240 D% echo !?time:%-$
echo time for all good men
time for all good men
</div>

<h4>
<a name="SearchReplace"></a>Search/replace
</h4>

<p>
A search/replace operation looks for and replaces a simple character string.  (For those familiar with such things, it does not use regular expressions.)  If the search string isn&rsquo;t given, the one used last time is used again.  If the replace string contains an ampersand, <tt>&amp;</tt>, that isn&rsquo;t escaped with the circumflex, it&rsquo;s expanded into the search string.  Here are a few examples.  Notice that putting a <tt>g</tt> at the start of an operation makes it &ldquo;global.&rdquo;
</p>

<div class="codesample">241 D% echo !?now:%-$:s/o/O/
echo nOw is the time for all good men
nOw is the time for all good men
242 D% !!:gs/t/T/
echo nOw is The Time for all good men
nOw is The Time for all good men
243 D% !!:s/nOw is/&amp; really/
echo nOw is The Time for all good men
nOw is really The Time for all good men
</div>

<h4>
<a name="PathnameEditing"></a>Pathname editing
</h4>

<p>
Another set of operators allows filenames to be easily manipulated.  As with the search/replace operator, <a href="39-PathnameEditing.htm">pathname editing</a> is normally applied to only the first operand word; if you want the operation performed on all the words, you must make it global.  In this example, the <tt>:h</tt> (head) operator is used, which returns the name of the directory containing the given file.
</p>

<div class="codesample">244 D% echo *\a*.c
samples\args.c sh\allocate.c
245 D% set dotc = !$
set dotc = *\a*.c
246 D% echo $dotc
samples\args.c sh\allocate.c
247 D% echo $dotc:h
samples sh\allocate.c
248 D% echo $dotc:gh
samples sh
</div>

<h4>
<a name="SpecializedOperations"></a>Specialized operations
</h4>

<p>
Specialized operations are provided for scanning a character string and breaking it up into words and applying quotes around each word.
</p>

<p>
The <tt>:x</tt> operator for breaking up a string into words, single-quoting each word, is particularly useful for parsing text read with the getline pseudo-variable, which always returns the line read as a single character string:
</p>

<div class="codesample">249 D% @ data = $&lt;
(I typed --&gt;this&lt;-- in)
250 D% echo $#data $data
1 (I typed --&gt;this&lt;-- in)
251 D% set data = $data:x
252 D% echo $#data $data
10 ( I typed -- &gt; this &lt; -- in )
</div>

<p>
The <tt>:q</tt> operator pastes single quote marks around every word in the operand list.  As we&rsquo;ll see in the chapter on quoting, this prevents any further wildcard, variable or command substitutions from being done.
</p>

<div class="codesample">253 D% echo sa?pl?s *\a*.c
samples samples\args.c sh\allocate.c
254 D% echo !*:q
echo 'sa?pl?s' '*\a*.c'
sa?pl?s *\a*.c
</div>

<h4>
<a name="HistoryEdits"></a>History edits
</h4>

<p>
For <a href="34-HistoryRecall.htm">history substitutions</a>, the <tt>:p</tt> operator can be used to cause the result of the history substitution to be echoed and entered into the history list but for the command not to be executed.  This is helpful when you&rsquo;re trying a complicated edit and not sure if the result is going to be what you want.
</p>

<div class="codesample">255 D% !?Fin:p
echo Finally
256 D% !!
echo Finally
Finally
257 D% _
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="39-PathnameEditing.htm">Pathname editing</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="08-History.htm"><i>Tutorial:</i>  The history mechanism</a><br/>
<a href="09-Variables.htm#VariableSubstitutions"><i>Tutorial:</i>  Variable substitutions</a><br/>
<a href="07-IORedirection.htm#CommandSubstitution"><i>Tutorial:</i>  Command substitution</a><br/>
</p>


<h3>
<small><a href="10-Wildcarding.htm">Previous</a> |
<a href="12-Quoting.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Quoting
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Quoting
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm"><b>Quoting</b></a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Quoting<br/>
<small><a href="11-Editing.htm">Previous</a> |
<a href="13-Expressions.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#DoubleQuotes">Double quotes</a><br/>
<a href="#SingleQuotes">Single quotes</a><br/>
<a href="#ShellEscapeCharacter">Shell escape character</a><br/>
<a href="#QuotingJustPartOfAWord">Quoting just part of a word</a><br/>
<a href="#Wildcarding">Wildcarding with special characters</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
The shell has several <a href="36-Quoting.htm">quoting mechanisms</a> for marking a section of a command for special processing.  One of them, command substitution, which uses the <tt>`<var>...</var>`</tt> or <tt>``<var>...</var>``</tt> syntax, is discussed in the chapter on <a href="07-IORedirection.htm#CommandSubstitution">i/o redirection</a>.
</p>

<p>
The other quoting mechanisms focus more simply on the problem of overriding the special meanings that certain characters have.
</p>

<h4>
<a name="DoubleQuotes"></a>Double quotes
</h4>

<p>
Double quotes are of use when you want to pass a character string containing a space or other word separator to an application.  Normally, if you called a C program, it would see these words as separate <tt>argv</tt> entries instead of a single character string; double quotes prevents this breakup into words.  We can demonstrate this using the simple <tt>myecho</tt> program in the <tt>Samples</tt> directory which prints out the <tt>argv</tt> list it receives with single quotes around each entry:
</p>

<div class="codesample">257 D% cd ~\samples
258 D% myecho hello world
'myecho' 'hello' 'world'
arg length = 19 characters
259 D% myecho "hello world"
'myecho' 'hello world'
arg length = 19 characters
</div>

<p>
Double quotes also turn off the special meaning of the various wildcard characters and the single quote:
</p>

<div class="codesample">260 D% echo "* isn't a wildcard character inside quotes"
* isn't a wildcard character inside quotes
261 D% echo "~"
~
262 D% _
</div>

<p>
Command, history and variable substitutions inside double quotes are still done:
</p>

<div class="codesample">262 D% echo "*** The home directory is $home ***"
*** The home directory is d:\Nicki ***
263 D% echo "`echo ~`"
d:\Nicki
264 D% echo "myecho.c is `wc -l &lt; myecho.c` lines long"
myecho.c is 24 lines long
265 D% echo "!?samples"
echo "cd ~\samples"
cd ~\samples
</div>

<h4>
<a name="SingleQuotes"></a>Single quotes
</h4>

<p>
Single quotes are a little more brute force way to turn off special meanings.  Wildcards, variables and command substitutions are all treated as ordinary text.  Only history references are recognized inside single quotes.
</p>

<div class="codesample">266 D% echo '*'
*
267 D% echo '$cwd'
$cwd
268 D% echo '`echo hello`'
`echo hello`
269 D% echo '!?samples'
echo 'echo "cd ~\samples"'
echo "cd ~\samples"
270 D% _
</div>

<p>
It is not necessary to quote an entire word.  It&rsquo;s possible (and often useful) to selectively quote just as much as desired.  The quoting characters are processed out just before invoking the command.  Example:
</p>

<div class="codesample">270 D% echo 'no'w is "t"h'e' `echo time`
now is the time
</div>

<h4>
<a name="ShellEscapeCharacter"></a>Shell escape character
</h4>

<p>
The shell escape character is normally the circumflex, <tt>^</tt>.  It has two uses:  preceding any of the special characters, it turns off that special meaning.  When followed by an alphabetic character or hex or octal number, it can be used to enter binary data or characters that couldn&rsquo;t easily be typed.  To get a literal escape character, type two escapes in a row.  These specific escape sequences have special meaning:
</p>

<table cellpadding="0" border="0" width="75%">
<tr>
<td valign="top" style="width:80px">
<tt>^a</tt>
</td>

<td>
Audible Alert (Bell)
</td>
</tr>

<tr>
<td>
<tt>^r</tt>
</td>

<td>
Carriage Return
</td>
</tr>

<tr>
<td>
<tt>^b</tt>
</td>

<td>
BackSpace
</td>
</tr>

<tr>
<td>
<tt>^t</tt>
</td>

<td>
Tab
</td>
</tr>

<tr>
<td>
<tt>^f</tt>
</td>

<td>
Form Feed
</td>
</tr>

<tr>
<td>
<tt>^v</tt>
</td>

<td>
Vertical Tab
</td>
</tr>

<tr>
<td>
<tt>^n</tt>
</td>

<td>
NewLine
</td>
</tr>

<tr>
<td>
<tt>^^</tt>
</td>

<td>
Single escapesym
</td>
</tr>
</table>

<p>
At the very end of a line, the escape has a special meaning:  the next line is a continuation line.  Inside a quoted string, the <tt>^</tt>-newline combination will be replaced with a simple newline; anywhere else, the combination is just turned into a space.  The other special case is when it immediately follows<tt>[</tt>.  Since <tt>[^<var>...</var>]</tt> is a wildcard exclusion range, the <tt>^</tt> in this case is treated as a literal character so you won&rsquo;t have to type two of them in a row.
</p>

<p>
Escape characters work even inside single or double quotes.
</p>

<div class="codesample">271 D% echo now ^
is the time
now is the time
272 D% echo "now ^
is the time"
now
is the time
273 D%
</div>

<h4>
<a name="QuotingJustPartOfAWord"></a>Quoting just part of a Word
</h4>

<p>
It&rsquo;s possible to combine the quoting mechanisms or use them on just the part of a string you want quoted.  For example,
</p>

<div class="codesample">273 D% echo '$cwd='$cwd
$cwd=d:\Nicki
</div>

<p>
Here&rsquo;s another example, searching through a series of <tt>.csh</tt> files, looking for those that are self-loading procedures.  For example, we can spot that whereis.csh is self-loading because it contains a line like this:
</p>

<div class="codesample">whereis $argv
</div>

<p>
To look for occurrences of this sort, we might loop through a list of <tt>.csh</tt> files, <tt>grep</tt>&rsquo;ing each for the filename (minus the directory and <tt>.csh</tt> extension) followed by white space followed by <tt>$argv</tt>:
</p>

<div class="codesample">274 D% foreach i (~\samples\*.csh)
275 D?    grep $i:b'[ ^t]*$argv' $i
276 D? end
bits $argv
bumpdate $argv
caldate $argv
calendar $argv
:
</div>

<p>
Notice how the <tt>$i:b</tt> part is outside the quotes so that the filename can be substituted in and edited to strip off the directory and extension.  Conversely, the <tt>[&nbsp;^t]*</tt> and <tt>$argv</tt> portions are inside the quotes to avoid having them confused as a wildcard or variable substitution, respectively.
</p>

<h4>
<a name="Wildcarding"></a>Wildcarding with special characters
</h4>

<p>
If you&rsquo;d like to wildcard filenames that have literal <tt>$</tt>, <tt>[</tt>, quote or other special characters, you&rsquo;ll have to quote or escape the special characters to turn off their special meanings.  For example,
</p>

<div class="codesample">277 D% ls g:\tmp
$abc          [hello          this name has spaces
278 D% ls '$'*
$abc
279 D% ls *^ *
this name has spaces
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="08-History.htm"><i>Tutorial:</i>  The history mechanism</a><br/>
<a href="09-Variables.htm#VariableSubstitutions"><i>Tutorial:</i>  Variable substitutions</a><br/>
<a href="07-IORedirection.htm#CommandSubstitution"><i>Tutorial:</i>  Command substitution</a><br/>
</p>


<h3>
<small><a href="11-Editing.htm">Previous</a> |
<a href="13-Expressions.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Expressions
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Expressions
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm"><b>Expressions</b></a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Expressions<br/>
<small><a href="12-Quoting.htm">Previous</a> |
<a href="14-Aliases.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#WordsVersusExpressions">Words versus expressions</a><br/>
<a href="#LikeC">Like C</a><br/>
<a href="#Parsing">Parsing</a><br/>
<a href="#Operators">Operators</a><br/>
<a href="#FileSystemTests">File system tests</a><br/>
<a href="#IncrementAndDecrement">Increment and decrement</a><br/>
<a href="#BitShifting">Bit shifting</a><br/>
<a href="#BitwiseNot">Bitwise not</a><br/>
<a href="#LogicalNot">Logical not</a><br/>
<a href="#Exponentiation">Exponentiation</a><br/>
<a href="#ModuloAndIntegerDivision">Modulo and integer division</a><br/>
<a href="#ComparisonOperators">Comparison operators</a><br/>
<a href="#PatternMatching">Pattern matching</a><br/>
<a href="#BitwiseAndXorOr">Bitwise and, xor and or</a><br/>
<a href="#LogicalAndOr">Logical and and or</a><br/>
<a href="#QuestionMark">The ?: operator</a><br/>
<a href="#Braces">The {...} operator</a><br/>
<a href="#OpEqual">The <i>Op</i>= operator</a><br/>
<a href="#TypeConversions">Type conversions</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="WordsVersusExpressions"></a>Words versus expressions
</h4>

<p>
Sometimes a character like <tt>*</tt> means wildcard and sometimes it means multiply.  The meaning of what you type is determined by the context.  The shell makes a distinction between words, used as arguments to a command versus an expression context.
</p>

<p>
In general, expressions are expected wherever the context would seem to suggest that it would be more natural to think of calculating a value as opposed to using wildcarding to produce a list of filenames.
</p>

<h4>
<a name="LikeC"></a>Like C
</h4>

<p>
The shell&rsquo;s expression grammar is based on that of the C language and provides the full range of arithmetic, logical, bit, indexing and relation-testing and assignment operators.  In addition, there are file system tests and pattern matching string compares.  To use the shell as simple calculator, use the <a href="22-Variables.htm"><tt>calc</tt></a> statement.  This example shows a call to the square root routine, one of the <a href="49-BuiltinProcedures.htm">builtin procedures</a>.
</p>

<div class="codesample">280 D% calc sqrt(2*pi)
2.506628
</div>

<p>
which writes its result to stdout.  If you want to do the calculation silently, use the <tt>@</tt> variant:
</p>

<div class="codesample">281 D% @ r = 12
282 D% @ area = pi * r**2
283 D% calc area
452.389345
</div>

<p>
In addition to the <tt>calc</tt> and <tt>@</tt> statements, other examples where an expression is expected include a variable index inside <tt>[<var>...</var>]</tt> brackets, in a procedure argument list and, as we&rsquo;ll see, a number of the structured programming constructs such as the for statement.
</p>

<h4>
<a name="Parsing"></a>Parsing
</h4>

<p>
All commands are first broken down into words.  A word is anything separated by a space or a tab or one of the following special strings:
</p>

<div class="codesample">&amp;    |    ;    &gt;    &lt;    (    )    &amp;&amp;   ||   &gt;&gt;   &lt;&lt;
</div>

<p>
After a command line has already been broken up into words, if the context is an expression, it&rsquo;s further broken up into tokens.  A token is a variable or procedure name, a character or numeric literal, or one of the expression operators.  Spacing between tokens is more-or-less arbitrary:  for example, there&rsquo;s certainly no need to put spaces around an arithmetic operator to separate it from a variable name beside it.
</p>

<p>
Tokens are separated by any of these characters or character pairs:
</p>

<div class="codesample">&amp;    |    ^    +    -    *    /    %    //   =    !    ~    &lt;    &gt;
(    )    [    ]    ,    :    ;    -A   -D   -H   -S   -d   -e   -f
-o   -w   -x   -z   ++   --   **   &lt;&lt;   &gt;&gt;   ==   !=   =~   !~   +=
-=   *=   /=   %=   //=  ^=   **=
</div>

<p>
The <tt>&lt;=</tt>, <tt>&gt;=</tt>, <tt>&lt;&lt;=</tt>, <tt>&gt;&gt;=</tt>, <tt>&amp;=</tt>, and <tt>|=</tt> operators are always broken up into separate words before expression parsing begins.  For consistency, the parser will accept any of <tt><var>op</var>=</tt> assignment operators with a space between the <tt><var>op</var></tt> and <tt>=</tt> parts. 
</p>

<p>
Since the shell knows that any names it encounters in an expression must refer to variables or procedures it&rsquo;s not necessary to use a dollar sign to introduce a variable name.  In fact, you&rsquo;ll find that performance is actually a bit better if you do not use a dollar sign.  The reason is because a <tt>$</tt>-style variable substitution is evaluated by converting the internal value of the variable to a string and pasting that into the expression where quite often the next step is just to convert it right back again into the integer or floating point value it started out as.  Also, if floating point is involved, you may notice some loss of precision.  (But don&rsquo;t misunderstand, it is still perfectly legal to use <tt>$</tt>-style variable and other substitutions in an expression.)
</p>

<p>
Character literals must appear inside single or double quotes.  Numeric literals can be entered in decimal, octal or hex.  Octal numbers can contain only the digits <tt>0</tt> through <tt>7</tt> and must begin with <tt>0</tt>.  Hex numbers must start with <tt>0x</tt> and contain only <tt>0</tt> through <tt>f</tt>.  (Either upper or lower case is acceptable.)
</p>

<h4>
<a name="Operators"></a>Operators
</h4>

<p>
Expressions are evaluated according to the relative  precedence of each operator in the expression.  For example, multiplication is done before addition.  The complete precedence hierarchy is shown in tabular form in the language reference.
</p>

<div class="codesample">284 D% calc 2 + 3*5
17
</div>

<p>
Some of the operators will be foreign, though we trust, not too difficult to use.  The file system tests are unary operators.  Each takes the name of a file or directory and tests it for existence, zero-length or some other interesting characteristic.  Since the operand is a pathname, the parser temporarily shifts to word mode to read it because word mode is more natural for pathnames.  The pathname can include wildcards and should not be enclosed in quotes.  In the example that follows, <tt>-e</tt> tests for existence; <tt>-D</tt> tests whether the name is a directory.
</p>

<div class="codesample">285 D% cd ~\samples
286 D% ls
args.c        colors.csh    factor.csh    mcvisa.csh    readme
args.exe      deltaday.csh  finance.csh   myecho.c      ts.csh
bits.csh      dumpenv.c     getprio.c     myecho.exe    viopaste.c
bumpdate.csh  dumpenv.exe   getprio.exe   newfiles.csh  viopaste.exe
caldate.csh   duplicat.csh  julian.csh    rcode.c       weekday.csh
calendar.csh  easter.csh    makecpgm.csh  rcode.exe
287 D% echo a*c
args.c
288 D% calc -e a*c
1
289 D% calc -D !$
calc -D a*c
0
</div>

<h4>
<a name="FileSystemTests"></a>File system tests
</h4>

<p>
The value returned from a file system test is always 1 or 0; there are no restrictions on how the value might be used in further calculations.
</p>

<div class="codesample">290 D% calc 1 + (!*) + (-e myecho.c)
calc 1 + ( -D a*c ) + ( -e myecho.c )
2
</div>

<h4>
<a name="IncrementAndDecrement"></a>Increment and decrement
</h4>

<p>
The unary incrementing and decrementing operators are <tt>++</tt> and <tt>--</tt>. Pasting one in front of a variable name bumps the variable, then returns the value.  Pasting one after the name bumps the variable but returns the prior state.
</p>

<div class="codesample">291 D% calc x = 1
1
292 D% calc ++x
2
293 D% calc x++
2
294 D% calc x
3
295 D% calc --x
2
</div>

<h4>
<a name="BitShifting"></a>Bit shifting
</h4>

<p>
The <tt>&lt;&lt;</tt>  and <tt>&gt;&gt;</tt>  bit shifting operators shift an integer value on the left by the number of bit positions given by the integer value on the right.  Bits shifted off the end are lost; values shifted in are always 0.
</p>

<div class="codesample">296 D% calc x &lt;&lt; 3
8
297 D% calc x &gt;&gt; 10
0
</div>

<h4>
<a name="BitwiseNot"></a>Bitwise not
</h4>

<p>
The unary <tt>~</tt> operator returns the bit-wise not of an integer operand.  As this example shows, integers are 32-bit signed values.
</p>

<div class="codesample">298 D% calc ~5
-6
299 D% calc 0xfffffffa
-6
300 D% calc ~!$
calc ~0xfffffffa
5
</div>

<h4>
<a name="LogicalNot"></a>Logical not
</h4>

<p>
The unary <tt>!</tt> operator returns the logical not.  If the operand is non-zero, 0 is returned, otherwise 1. In this example, the parentheses or space after the exclamation are deliberate to avoid having the expression confused as a history reference.
</p>

<div class="codesample">301 D% calc !(5.1)
0
302 D% calc ! 0
1
</div>

<h4>
<a name="Exponential"></a>Exponentiation
</h4>

<p>
The <tt>**</tt> operator is for exponentiation.  The left operand is raised to power of the right operand.
</p>

<div class="codesample">303 D% calc 2 ** 500
3.27339061e+150
</div>

<h4>
<a name="ModuloAndIntegerDivision"></a>Modulo and integer division
</h4>

<p>
The <tt>%</tt> operator is for modulo division and returns the remainder.
</p>

<div class="codesample">304 D% calc 22 % 7
1
</div>

<p>
A related <tt>//</tt> operator does integer division.  Where the standard <tt>/</tt> operator might return a floating point result, <tt>//</tt> gives just the integer part of any division.
</p>

<div class="codesample">305 D% calc 8/3
2.666667
306 D% calc 8//3
2
</div>

<h4>
<a name="ComparisonOperators"></a>Comparison operators
</h4>

<p>
The <tt>==</tt> operator tests for equality; the single <tt>=</tt> means assignment.  The <tt>!=</tt>, <tt>&lt;</tt>, <tt>&lt;=</tt>, <tt>&gt;=</tt>, and <tt>&gt;</tt> operators are all straight-forward tests of &ldquo;not equal,&rdquo; &ldquo;less than,&rdquo; &ldquo;less than or equal,&rdquo; etc.  Comparisons of strings are as easy as of numbers.
</p>

<div class="codesample">307 D% calc x = 3
3
308 D% calc x == 5
0
309 D% calc "able" &lt; "baker"
1
</div>

<p>
When the shell is asked to compare two expressions, it first tries to coerce them to numeric values.  This is so that, e.g., a string containing &ldquo;16&rdquo; compares greater than &ldquo;2&rdquo; even though a simple string compare would give the opposite result.
</p>

<h4>
<a name="PatternMatching"></a>Pattern matching
</h4>

<p>
The <tt>=~</tt> and <tt>!~</tt> are the &ldquo;pattern matches&rdquo; and &ldquo;pattern fails&rdquo; tests.  These are done in pretty much the same way wildcarding is done.  On the right is a pattern string possibly containing wildcard characters.  It&rsquo;s compared against the string on the left the same way a wildcard expansion would be done except that here, comparisons are case-sensitive and where alternation appears, the match succeeds if any of the alternates matches.
</p>

<div class="codesample">310 D% calc "Now is" =~ "N*i*"
1
311 D% calc "Now is" !~ "Now is"
0
312 D% calc "Now is" =~ "n*i*"
0
313 D% calc "Now is" =~ "{n,No}*i{s,the}"
1
</div>

<h4>
<a name="BitwiseAndXorOr"></a>Bitwise and, xor and or
</h4>

<p>
The <tt>&amp;</tt>, <tt>^</tt> and <tt>|</tt> operators perform bit-wise and, xor and or operations on integer operands.
</p>

<div class="codesample">314 D% calc 5 &amp; 4
4
315 D% calc 5 ^ 3
6
316 D% calc 5 | 3
7
</div>

<h4>
<a name="LogicalAndOr"></a>Logical and and or
</h4>

<p>
The <tt>&amp;&amp;</tt> and <tt>||</tt> operators perform logical and and or operations:
</p>

<div class="codesample">317 D% calc 5 &amp;&amp; 4
1
318 D% calc 0 &amp;&amp; 4
0
319 D% calc 5 || 3
1
320 D% calc 5 || 0
1
</div>

<h4>
<a name="QuestionMark"></a>The ?: Operator
</h4>

<p>
The <tt>?:</tt> trinary operator selects between two alternate expressions based on the logical true or false value of the first operand.
</p>

<div class="codesample">321 D% calc 0 ? "hello" : "goodbye"
goodbye
322 D% calc (5 &gt; 3) ? "hit" : "miss"
hit
</div>

<h4>
<a name="Braces"></a>The {...} operator
</h4>

<p>
The <tt>{<var>...</var>}</tt> grouping operator allows you to run a command and evaluate its result as a 1 if it succeeds or a zero if it fails.  For example:
</p>

<div class="codesample">323 D% calc {echo hello}
hello
1
324 D% calc {cd \nonexistent}
csh:  Couldn't change the current directory to '\nonexistent'.
0
</div>

<h4>
<a name="OpEqual"></a>The <i>Op</i>= operators
</h4>

<p>
Finally, the various <tt><var>op</var>=</tt> operators apply the <tt><var>op</var></tt> to the left and right operands, then assign the result to the left operand.
</p>

<div class="codesample">325 D% calc x = 2
2
326 D% calc x **= 500
3.27339061e+150
327 D% calc x
3.27339061e+150
</div>

<h4>
<a name="TypeConversions"></a>Type conversions
</h4>

<p>
The shell always tries to evaluate expressions &ldquo;sensibly&rdquo; by doing any type conversions that might seem necessary.  If an integer calculation results in an overflow, the shell shifts automatically to floating point.
</p>

<div class="codesample">328 D% calc 2**30
1073741824
329 D% calc 2**200
1.606938e+060
</div>

<p>
If a character string was given but an integer is needed, the shell tries to do that conversion also.  Because these conversions happen automatically, without any fanfare, the following literals all compare equal:
</p>

<div class="codesample">27    27.0    033    0x1B    " 27 "    '   0x1b '
</div>

<p>
(Null strings and strings consisting only of white space are considered equal to zero.  This is particularly convenient for local variables, which are initially set to null strings.)
</p>

<p>
The shell does automatic conversions to a character string format when the result is being printed.  Numeric results are always shown in decimal.  In this example, a procedure, the builtin square root routine, is invoked as a command; the value it returns is converted from floating point to character string and printed.
</p>

<div class="codesample">330 D% sqrt 2
1.414213
</div>

<p>
The shell also converts to a character string when you reference an array but use it as if it were not.
</p>

<div class="codesample">331 D% set x = Now is the time
332 D% cd ~\samples; myecho $x
'myecho' 'Now' 'is' 'the' 'time'
arg length = 23 characters
333 D% @ y = x
334 D% myecho $y
'myecho' 'Now is the time'
arg length = 23 characters
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">The @, calc, set, setenv and local statements</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="31-Wildcarding.htm">Wildcarding and pattern matching</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i>  Variables</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i>  Procedures</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i>  Wildcarding</a><br/>
</p>


<h3>
<small><a href="12-Quoting.htm">Previous</a> |
<a href="14-Aliases.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Aliases
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Aliases
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm"><b>Aliases</b></a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Aliases<br/>
<small><a href="13-Expressions.htm">Previous</a> |
<a href="15-ProgrammingConstructs.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Wildcards">Wildcards and special characters in an alias</a><br/>
<a href="#Arguments">Arguments to aliases</a><br/>
<a href="#Implementation">Implementation details</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
Aliases are a quick shorthand technique.  If you type an alias at the beginning of a command, it&rsquo;s replaced by whatever the alias is defined as.  They&rsquo;re intended to be used for relatively simple abbreviations:  if any arguments are needed, you have to be able to type them onto the end.  In more complex situations, <a href="15.3-Procedures.htm">procedures</a> are usually a better choice.
</p>

<p>
To list the aliases currently defined, use the <a href="21-Aliases.htm"><tt>alias</tt></a> command.  Some aliases are <a href="52-PredefinedAliases.htm">predefined</a> for you.
</p>

<div class="codesample">335 D% alias
cdd          cd +c
copy         local s ; @ s = nowild ; @ nowild = 1 ; safecopy
date         dt
del          local s ; @ s = nowild ; @ nowild = 1 ; safedel
dir          cmd /c dir
erase        del
h            history
label        hlabel
ll           ls -L
md           mkdir
mi           more -i
more         hmore
rd           rmdir
ren          rename
rename       local s ; @ s = nowild ; @ nowild = 1 ; saferename
ro           rotd
start        env -N
type         cat
vol          vl
xcopy        local s ; @ s = nowild ; @ nowild = 1 ; safexcopy
</div>

<p>
Some aliases are used to intercept references to <tt>cmd.exe</tt>&rsquo;s builtin commands.  For example, this is how <tt>dir</tt> is run.  Other aliases give simple alternate names to a command, e.g., <tt>rename</tt> for <tt>mv</tt>.  Still others are used to customize a command with a useful option.  For example, <tt>mi</tt> runs <tt>more</tt> but starts it immediately in interactive mode, which means the screen is cleared first; in a console window, this tends to run faster.
</p>

<p>
To find out how any particular alias is defined, use the alias command with only the name you&rsquo;re interested in as an operand.
</p>

<div class="codesample">336 D% alias mi
mi           more -i
</div>

<p>
To create a new alias, type the alias command followed by the name of alias being created and word list it should be expanded into:
</p>

<div class="codesample">337 D% alias hello echo hello world
338 D% hello
hello world
</div>

<p>
If you define an alias that refers to itself, either directly or via other aliases, the shell traps the reference rather than allowing it to expand without limit:
</p>

<div class="codesample">339 D% alias hello (echo infinite; hello again)
340 D% hello
csh:  A loop in the alias definitions was encountered and trapped.
</div>

<p>
This raises the question how you might define an alias, say, <tt>ls</tt>, that intercepts references to the <tt>ls</tt> utility without getting into a loop.  The answer is that the shell considers it a special case if the first word in the expansion of the alias is the same as its name.  Here&rsquo;s an alias that causes <tt>ls</tt> to always display all files:
</p>

<div class="codesample">341 D% alias ls ls +a
</div>

<p>
Other ways around the problem would be to use the full <tt>ls.exe</tt> name inside the alias or put quotes around the <tt>ls</tt>.
</p>

<h4>
<a name="Wildcards"></a>Wildcards and special characters in an alias
</h4>

<p>
Recall that any <a href="31-Wildcarding.htm">wildcards</a> or <a href="36-Quoting.htm#EscapeCharacter">escape characters</a> in a command are always processed before the command itself is run.  Suppose you wanted to define an alias to list all your <tt>.exe</tt> files in the current directory.  Watch what happens if we&rsquo;re not careful:
</p>

<div class="codesample">342 D% cd
d:\Program Files\Hamilton C shell 2012 x64\Samples
343 D% alias lexe ls *.exe
344 D% lexe
args.exe          dumpenv.exe       rcode.exe
blksize.exe       myecho.exe        winerror.exe
345 D% cd ..\bin
346 D% lexe
ls:  'args.exe' does not exist.
ls:  'blksize.exe' does not exist.
ls:  'dumpenv.exe' does not exist.
ls:  'myecho.exe' does not exist.
ls:  'rcode.exe' does not exist.
ls:  'winerror.exe' does not exist.
</div>

<p>
What happened?  Why didn&rsquo;t <tt>lexe</tt> give us the files in our new current directory?  The answer is clear if we list the alias definition:
</p>

<div class="codesample">347 D% alias lexe
lexe         ls args.exe blksize.exe dumpenv.exe myecho.exe rcode.exe winerror.exe
</div>

<p>
The <tt>*.exe</tt> wildcard got expanded before the alias definition was processed.  If we want to defer processing of the wildcard until later, when the alias is used, we need to escape the <tt>*</tt> character:
</p>

<div class="codesample">348 D% alias lexe ls ^*.exe
349 D% alias lexe
lexe         ls *.exe
</div>

<p>
It&rsquo;s just a little trickier if we want to turn off the special meaning not only when defining the alias but also when we use it.  That&rsquo;s done by embedding an extra <tt>^^</tt> sequence into what we type, knowing that&rsquo;ll turn into a single escape character in the definition.  Here&rsquo;s an example:
</p>

<div class="codesample">350 D% alias hello echo How are you^^^?
351 D% alias hello
hello        How are you^?
352 D% hello
How are you?
</div>

<h4>
<a name="Arguments"></a>Arguments to aliases
</h4>

<p>
Normally, any words on the line following the reference to the alias will simply be tacked onto the expansion.  For example:
</p>

<div class="codesample">353 D% alias hello echo hello world
354 D% hello how are you
hello world how are you
</div>

<p>
But suppose you&rsquo;d like to paste the arguments into the middle of the expansion?  The way to do that is with a very special adaptation of the <a href="08-History.htm">history mechanism</a>.  If the expansion contains any <a href="34-HistoryRecall.htm">history references</a>, the C shell treats this as a special case.  It temporarily adds the original text of that command to the history list.  Note that only the command itself &ndash; starting with the alias name and ending just before any semicolon, closing parenthesis or pipe symbol terminating the command &ndash; not the whole line is added.  Any history references in the definition of the alias are processed and the result taken as the final command text.  The temporary history entry is then discarded along with the original string of argument words.  Here&rsquo;s an example:
</p>

<div class="codesample">355 D% alias hello echo hi ^!^^, how are you^^^?
356 D% alias hello
hello        echo hi !^ how are you^?
357 D% echo x; hello Frank; echo y
x
hi Frank, how are you?
y
</div>

<p>
Notice the use of the escape characters to embed the history reference, <tt>!^</tt> and the literal <tt>?</tt> into the alias definition.
</p>

<p>
It is not necessary for the alias to use all the argument words.  Any that it doesn&rsquo;t reference using the history mechanism are just discarded.  Notice that this alias grabbed only the first argument word from history.  Suppose there were other words on the line:
</p>

<div class="codesample">358 D% hi Frank and Bob
hi Frank, how are you?
</div>

<p>
See how the rest were just discarded?
</p>

<h4>
<a name="Implementation"></a>Implementation details
</h4>

<p>
The alias mechanism is actually part of the parsing mechanism rather than a run-time feature of the C shell.  What that means is that the alias expansion is done <a href="45-OrderOfEvaluation.htm">when the statement is first read</a>, not when it&rsquo;s executed.  Here&rsquo;s an example where we attempt to change the definition of an alias inside a loop.  Notice that it doesn&rsquo;t have any effect until we exit the loop.  That&rsquo;s because the whole loop is being compiled as a block before any part of it is executed.
</p>

<div class="codesample">359 D% alias foo echo this is life
360 D% foreach i (hello world)
361 D?    alias foo echo $i
362 D?    foo
363 D? end
this is life
this is life
364 D% foo
world
</div>

<p>
Also, when an alias substitution is done, the expansion is taken as the series of words the alias was defined as; it&rsquo;s not reparsed into words all over again.  Here's an example using the <a href="Samples/myecho.htm"><tt>myecho</tt></a> sample application, which simply dumps the <tt>argv</tt> command line argument words it's given with quotes around each.
</p>

<div class="codesample">365 D% alias test myecho "this is a test"
366 D% alias test
test         myecho this is a test
367 D% test
'myecho' 'this is a test'
arg length = 22 characters
</div>

<p>
Notice that you can&rsquo;t really see that the test alias is defined as just two words, <tt>myecho</tt> and <tt>this is a test</tt> when you list it (it&rsquo;s just like listing a variable set to a list of words some of which contain spaces), but that&rsquo;s what it is.  These word boundaries are maintained even if the alias contains history references.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="21-Aliases.htm">Aliases</a><br/>
<a href="52-PredefinedAliases.htm">Predefined aliases</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i>  Procedures</a><br/>
<a href="08-History.htm"><i>Tutorial:</i>  History</a><br/>
<a href="12-Quoting.htm"><i>Tutorial:</i>  Quoting</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i>  Variables</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i>  Wildcarding</a><br/>
</p>


<h3>
<small><a href="13-Expressions.htm">Previous</a> |
<a href="15-ProgrammingConstructs.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Programming constructs
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Programming constructs
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm"><b>Programming constructs</b></a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Programming constructs<br/>
<small><a href="14-Aliases.htm">Previous</a> |
<a href="15.1-ConditionTesting.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#SerialExecution">Serial execution</a><br/>
<a href="#StatementsAndStatementLists">Statements and statement lists</a><br/>
<a href="#Parenthesis">Parenthesis</a><br/>
<a href="#ControlStructures">Control structures</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>



<p>
This chapter outlines the various structures provided for <a href="25-StatementRelationships.htm">connecting statements together</a>:  describing serial relationships, conditional execution, iteration and how procedures are defined and used.
</p>

<h4>
<a name="SerialExecution"></a>Serial execution
</h4>

<p>
As we&rsquo;ve seen already, commands typed on successive lines are executed serially, one after the other.  Writing several commands on one line with <a href="25-StatementRelationships.htm">semicolons</a> between them does the same thing.
</p>

<div class="codesample">368 D% echo hello; echo world
hello
world
369 D% _
</div>

<p>
The semicolon is not passed to the application you invoke.  If you really do want to pass a semicolon, you have to escape it or put it inside quotes.
</p>

<p>
A non-zero return code is not normally considered an error:  regardless of the return code from any particular command, serial execution continues.  We can demonstrate this with the <tt>rcode</tt> utility in the <tt>Samples</tt> directory which prints, then exits with the return code value you pass it on the command line.  This example also shows how you can retrieve the return code of the last child process by referring to the builtin <tt>status</tt> variable.
</p>

<div class="codesample">369 D% cd ~\samples
370 D% rcode 1; rcode 2
1
2
371 D% calc status
2
</div>

<p>
It&rsquo;s also possible to describe a conditional serial relationship.  If statements are joined by <tt>&amp;&amp;</tt>, the second one is executed only if the return code from the first one is 0, i.e., if the first statement succeeds.  If statements are joined by <tt>||</tt>, the second is executed only if the first one fails, i.e., returns a non-zero return code.
</p>

<div class="codesample">372 D% rcode 0 || rcode 1
0
373 D% rcode 1 || rcode 2
1
2
374 D% rcode 0 &amp;&amp; rcode 1
0
1
375 D% rcode 1 &amp;&amp; rcode 2
1
</div>

<h4>
<a name="StatementsAndStatementLists"></a>Statements and statement lists
</h4>

<p>
<a href="26-IORedirection.htm">I/O redirection</a> and <a href="25-StatementRelationships.htm">statement connections</a> are recognized according to a  precedence.  Just as in expressions, where <tt>*</tt> is done before <tt>+</tt>, statements are parsed so that some things are done before others.  I/O redirection comes before piping which comes before conditional execution which comes before serializing with semicolons.  For example:
</p>

<div class="codesample">376 D% echo hello; echo world | wc
hello
        1        1        7
</div>

<p>
The shell makes a special distinction between individual statements, no matter how complex, and lists of statements typed on separate lines or separated by semicolons.
</p>

<p>
Here&rsquo;s an example using the time command, which runs a statement and prints out the hours, minutes and seconds it took. time expects a single statement as a operand; if you type a semicolon, the time command (together with its operand) becomes just one statement in the list.
</p>

<div class="codesample">377 D% time echo hello world | wc
        1        2       13_
0:00:00.50
378 D% time echo hello; echo world
hello
0:00:00.00
world
</div>

<h4>
<a name="Parenthesis"></a>Parenthesis
</h4>

<p>
There are two ways to group a list of statements together to make them act like a single statement.  The simplest way is with parenthesis, which work the way they would in an expression:  even if the operator inside the parentheses are of lower precedence, they&rsquo;re done first.
</p>

<div class="codesample">379 D% (echo hello; echo world) | wc
        2        2       14
380 D% time (echo hello; echo world)
hello
world
0:00:00.00
</div>

<p>
A parenthesized group gets its own copy of the current directory and disk.  This makes it convenient to change directories inside the group and go do something without having to change back afterward.
</p>

<div class="codesample">381 D% cd
d:\Nicki\samples
382 D% (cd ..; cd)
d:\Nicki
383 D% cd
d:\Nicki\samples
</div>

<p>
The actual implementation uses the directory stack mechanism:  at entry to the group, the current directory is pushed onto the directory stack and at exit, the top entry is popped.
</p>

<div class="codesample">384 D% dirs
d:\Nicki\samples
385 D% (dirs )
d:\Nicki\samples
d:\Nicki\samples
386 D% dirs
d:\Nicki\samples
</div>

<h4>
<a name="ControlStructures"></a>Control structures
</h4>

<p>
The more general way of connecting statements together is with control structures, discussed in the next several chapters.  Control structions provide ways of describing <a href="18-ConditionTesting.htm">conditional</a> or <a href="19-Iteration.htm">iterative</a> execution and for adding new vocabulary to the language using <a href="20-Procedures.htm">procedures</a>.  You can use a control structure anywhere a statement is allowed.
</p>

<p>
The language is completely recursive:  control structures can be nested inside control structures, etc. A statement can be arbitrarily complex.  Here&rsquo;s an example timing a statement that turns out to be a <a href="19-Iteration.htm"><tt>for</tt></a> loop piped to a <a href="Utilities/wc.htm"><tt>wc</tt></a> and inside the <tt>for</tt> loop ...
</p>

<div class="codesample">387 D% time for i = 1 to 3 do
388 D? time echo hello world | wc
389 D?      end | wc
        6       12      126
0:00:01.03
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="17-LanguageReference.htm">Basic statements</a><br/>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="26-IORedirection.htm">I/O redirection</a><br/>
<a href="18-ConditionTesting.htm">Condition testing</a><br/>
<a href="19-Iteration.htm">Iteration</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="53-Samples.htm">Sample scripts</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="15.1-ConditionTesting.htm"><i>Tutorial:</i>  if and switch</a><br/>
<a href="15.2-Iteration.htm"><i>Tutorial:</i>  foreach, for, while and repeat</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i>  Procedures</a><br/>
<a href="15.4-Scripts.htm"><i>Tutorial:</i>  Scripts</a><br/>
<a href="15.5-LabelsAndGotos.htm"><i>Tutorial:</i>  Labels and gotos</a><br/>
</p>


<h3>
<small><a href="14-Aliases.htm">Previous</a> |
<a href="15.1-ConditionTesting.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		if and switch
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				if and switch
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm"><b>if and switch</b></a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
if and switch<br/>
<small><a href="15-ProgrammingConstructs.htm">Previous</a> |
<a href="15.2-Iteration.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#ifStatement">if statement</a><br/>
<a href="#switchStatement">switch statement</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
The <tt>if</tt> and <tt>switch</tt> statements provide condition testing.
</p>

<h4>
<a name="ifStatement"></a>if statement
</h4>

<p>
The <tt>if</tt> statement comes in two forms.  The short form is convenient if the choice is only between executing and not executing a single statement, which appears on the same line.
</p>

<div class="codesample">390 D% if (5 == 2 + 3) echo yes
yes
391 D% if (5 == 10) echo really
392 D% _
</div>

<p>
The longer form provides the more traditional if-then-else structure.  Indentation is a matter of choice, it&rsquo;s used in these examples merely to improve readability.
</p>

<div class="codesample">392 D% if (5 == 10) then
393 D?    echo 5 == 10
394 D? else
395 D?    echo 5 is not 10
396 D? end
5 is not 10
397 D% _
</div>

<h4>
<a name="switchStatement"></a>switch statement
</h4>

<p>
The <tt>switch</tt> statement works by attempting to pattern match the switch value against a series of alternative cases.  The <tt>switch</tt> and <tt>case</tt> values can all be arbitrary expressions.  If any pattern match succeeds, execution begins with the next statement following and continues, skipping over any interspersed <tt>case</tt> clauses until either the end of the <tt>switch</tt> block or a <tt>break</tt> statement is reached.
</p>

<div class="codesample">397 D% switch ("hello world")
398 D?    case 5:
399 D?       echo hit 5
400 D?    case "h*":
401 D?       echo hit "h*"
402 D?    case "x*":
403 D?       echo hit "x*"
404 D?       break
405 D?    case 43.2:
406 D?       echo hit 43.2
407 D?    default:
408 D?       echo did not hit
409 D? end
hit h*
hit x*
</div>

<p>
The <tt>break</tt> statement used here causes execution to &ldquo;break out of&rdquo; the innermost control structure.  If you&rsquo;re nested several layers deep into control structures and want to break out of a higher level structure you can label the higher level structure and specify that name on the <tt>break</tt> statement.
</p>

<h4>See also</h4>

<p>
<a href="18-ConditionTesting.htm">Condition testing</a><br/>
<a href="24-MiscStatements.htm">Miscellaneous statements</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>


<h3>
<small><a href="15-ProgrammingConstructs.htm">Previous</a> |
<a href="15.2-Iteration.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		foreach, for, while and repeat
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				foreach, for, while and repeat
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm"><b>foreach, for, while and repeat</b></a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
foreach, for, while and repeat<br/>
<small><a href="15.1-ConditionTesting.htm">Previous</a> |
<a href="15.3-Procedures.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#foreachStatement">foreach statement</a><br/>
<a href="#forStatement">for statement</a><br/>
<a href="#whileStatement">while statement</a><br/>
<a href="#repeatStatement">repeat statement</a><br/>
</p>

<p>
The <tt>foreach</tt>, <tt>for</tt> and <tt>repeat</tt> statements provide for iteration.
</p>


<h4>
<a name="foreachStatement"></a>foreach statement
</h4>

<p>
The <tt>foreach</tt> statement is designed for iterating over a series of words.  In this example, <tt>i</tt> is iterated over the list of all the files in the <tt>Samples</tt> directory.  Each one, in turn, is tested to see if it&rsquo;s executable (i.e., has a <tt>.csh</tt>, <tt>.cmd</tt>, <tt>.bat</tt>, <tt>.exe</tt>  or <tt>.com</tt> extension or is a valid binary executable.)
</p>

<div class="codesample">410 D% cd ~\samples
411 D% ls
args.c       dumpenv.c    finance.csh  myecho.exe   readme
args.exe     dumpenv.exe  makecpgm.csh rcode.c
bits.csh     factor.csh   myecho.c     rcode.exe
412 D% foreach i (*)
413 D?    if (-x $i) echo $i is executable
414 D? end
args.exe is executable
bits.csh is executable
dumpenv.exe is executable
factor.csh is executable
finance.csh is executable
makecpgm.csh is executable
myecho.exe is executable
rcode.exe is executable
</div>

<h4>
<a name="forStatement"></a>for statement
</h4>

<p>
The <tt>for</tt> statement provides more traditional iteration over numerical values.  If you specify a range (e.g., <tt>1 to 3</tt>) but don&rsquo;t specify the increment, 1 is assumed.  Although this example shows iteration over integer values, floating point values are equally acceptable.
</p>

<div class="codesample">415 D% for i = 1 to 3 do
416 D?    echo $i
417 D? end
1
2
3
</div>

<p>
You can also iterate over a list of ranges or individual values.  The <tt>to</tt> and <tt>by</tt> clauses may be specified in either order.
</p>

<div class="codesample">418 D% for i = 1, 4, 7, 12, -4 to 6 by 3 do
419 D?    echo $i
420 D? end
1
4
7
12
-4
-1
2
5
</div>

<h4>
<a name="whileStatement"></a>while statement
</h4>

<p>
The <tt>while</tt> statement works in the traditional manner, iterating so long as the while condition is true.  This example keeps popping up through the various levels of parent directories until it reaches the root. <tt>fullpath</tt> is one of the builtin procedures; it return the fully-qualified pathname of its argument.  Notice that <tt>fullpath</tt> is invoked in three different ways:  on line 421, as if it were a command, on 422 in more conventional procedure syntax and on 423, where it&rsquo;s substituted in as if it were a variable.
</p>

<div class="codesample">421 D% fullpath .
d:\Nicki\samples
422 D% while (fullpath(".") !~ "[a-zA-Z]:\")
423 D?    echo $fullpath(".")
424 D?    cd ..
425 D? end
d:\Nicki\samples
d:\Nicki
426 D% cd
d:\
</div>

<h4>
<a name="repeatStatement"></a>repeat statement
</h4>

<p>
The <tt>repeat</tt> statement has two forms.  In the short form, a numeric constant (not an expression) specifies the number of times to execute the statement following on the same line.
</p>

<div class="codesample">427 D% repeat 4 echo do this again
do this again
do this again
do this again
do this again
</div>

<p>
In the long form, <tt>repeat</tt> provides the more conventional repeat structure, iterating until some exit condition satisfied.
</p>

<div class="codesample">428 D% calc i = 1
1
429 D% repeat
430 D?    calc i++
431 D? until (i > 5)
1
2
3
4
5
</div>


<h4>See also</h4>

<p>
<a href="19-Iteration.htm">foreach, for, while and repeat</a><br/>
<a href="24-MiscStatements.htm">Miscellaneous statements</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>


<h3>
<small><a href="15.1-ConditionTesting.htm">Previous</a> |
<a href="15.3-Procedures.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Procedures
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Procedures
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm"><b>Procedures</b></a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Procedures<br/>
<small><a href="15.2-Iteration.htm">Previous</a> |
<a href="15.4-Scripts.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Procedures">Procedures</a><br/>
<a href="#ArgumentsToAProcedure">Arguments to a procedure</a><br/>
<a href="#ReturnValues">Return values</a><br/>
<a href="#Recursion">Recursion</a><br/>
<a href="#CallingAProcedure">Calling a procedure</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<h4>
<a name="Procedures"></a>Procedures
</h4>

<p>
Procedures, as in any high-level language, are a convenient way to package together a series of statements as a more convenient operation.  Once you&rsquo;ve defined a procedure, you can invoke it simply as if it were a new command.
</p>

<div class="codesample">432 D% proc hello()
433 D?    echo hello world
434 D? end
435 D% hello
hello world
</div>

<p>
The <tt>proc</tt> statement can also be used to ask what procedures are already defined or what arguments a particular procedure takes:
</p>

<div class="codesample">436 D% proc hello
hello        ( )
437 D% proc | mi
abs          ( x )
acos         ( x )
asin         ( x )
:
:
samepath     ( a, b )
sin          ( x )
sinh         ( x )
--- more --- (Press H for Help)
</div>

<p>
You can explicitly discard a definition with <tt>unproc</tt>; otherwise the shell remembers any procedure you tell it until you exit the shell or give it a new definition.
</p>

<div class="codesample">438 D% unproc hello
439 D% hello
csh:  Couldn't find an executable file named 'hello'.
</div>

<p>
When you give the shell a procedure definition, the shell compiles it into an internal form so that the next time you refer to it, it&rsquo;ll save the reparsing time and run much faster.  As an example, unproc  the whereis procedure to make the shell reload the definition from the <tt>.csh</tt> file and see what that does to the execution time:
</p>

<div class="codesample">440 D% unproc whereis
441 D% time whereis frizzle
d:\Nicki\bin\Frizzle.exe
0:00:02.15
442 D% !!
time whereis frizzle
d:\Nicki\bin\Frizzle.exe
0:00:01.28
</div>

<p>
The namespace for procedures is shared among all the threads:  if one thread creates a new procedure, it becomes usable immediately by all the other threads.
</p>

<h4>
<a name="ArgumentsToAProcedure"></a>Arguments to a procedure
</h4>

<p>
You can write a procedure so it expects arguments, just as you would in any other high level language.  Argument names are somewhat like local variables:  their initial values are set at entry to a procedure, hiding any previous definition; they go away as soon you exit the procedure code.  Here&rsquo;s a simple example which compares the timestamps on two files.
</p>

<div class="codesample">443 D% proc comparedates(a, b)
444 D?    if (`newer $a $b`) then
445 D?       echo $a is newer than $b
446 D?    else
447 D?       if (samepath(a, b)) then
448 D?          echo $a and $b are the same file!
449 D?       else
450 D?          echo $a is older than $b
451 D?       end
452 D?    end
453 D? end
454 D% comparedates `whereis Frizzle`
d:\Nicki\bin\Frizzle.exe is newer than d:\Nicki\LastRTM\Frizzle.com
455 D% _
</div>

<p>
When you pass arguments to a procedure on the command line, the individual argument words are paired up, one-by-one, with the argument names you gave.  If the shell runs out of names before it runs out of words, the last named argument gets all the remaining words:
</p>

<div class="codesample">455 D% proc xx(a, b)
456 D?   echo $#a $a
457 D?   echo $#b $b
458 D? end
459 D% xx now is the time
1 now
3 is the time
</div>

<p>
If you pass arguments to a procedure that doesn&rsquo;t take any, they&rsquo;re evaluated but quietly ignored.
</p>

<p>
If a procedure does take an argument, it always get some value, even if it&rsquo;s zero words long.  So if you want to know if you got passed a value, just count the number of words:
</p>

<div class="codesample">460 D% proc xx(a)
461 D?    echo $#a "&gt;&gt;$a&lt;&lt;"
462 D?    if (a == "") echo null argument!
463 D? end
464 D% xx
0 &gt;&gt;&lt;&lt;
null argument!
</div>

<p>
In a more serious vein, here&rsquo;s a simple procedure definition I use all the time (I have it in my <tt>startup.csh</tt> file) to implement a real quick and dirty (but very easy to use!) personal phone index:
</p>

<div class="codesample">465 D% proc ppi(name)
466 D?    grep -i "$name" h:\phone
467 D? end
468 D% ppi hamilton
Hamilton Laboratories  425-497-0102
</div>

<p>
As you add lines to your \phone file, you merely add any interesting search phrases or other tidbits onto the same line with the person&rsquo;s name.  Totally free format.  Add anything you like and search on anything you like and it&rsquo;s fast.
</p>

<h4>
<a name="ReturnValues"></a>Return values
</h4>

<p>
Procedures are also important in expressions, where it&rsquo;s generally useful to think of the procedure as returning a value, just as it might in any other language.  The type and value of what you choose to return is arbitrary.  Here&rsquo;s a purely mathematical example from finance.csh in the samples directory:
</p>

<div class="codesample">469 D% proc FV_PresentAmount(i, n)
470 D?    # Calculate the multiplier to convert $1 now to a
471 D?    #    future value, given interest rate i
472 D?    return 1/(1 + i/100)**n
473 D? end
474 D% # Calculate the future value of $500 invested
475 D% # for 10 years at 8% interest.
476 D% calc 500*FV_PresentAmount(8, 10)
1079.462499
</div>

<p>
If you call a procedure that returns a value as if it were a command, whatever it returns is printed:
</p>

<div class="codesample">477 D% FV_PresentAmount 8 10
2.158925
</div>

<h4>
<a name="Recursion"></a>Recursion
</h4>

<p>
A procedure can call other procedures or even itself.  When a procedure calls itself, it&rsquo;s called recursion.  Typical uses of recursion are in cases where the problem itself is recursive, or self-replicating.  For example, here&rsquo;s a procedure to walk down two directory trees A and B that are thought to be related and list any non-hidden files in A that are not in B.  (If you set nonohidden = 1, it&rsquo;ll compare hidden files also.)
</p>

<div class="codesample">478 D% proc comparetrees(a, b)
479 D?    local i, f
480 D?    foreach i ($a\*)
481 D?       @ f = $i:t
482 D?       if (! -e $b\$f) then
483 D?          echo $b\$f is missing
484 D?       else
485 D?          if (-d $i) comparetrees $i $b\$f
486 D?       end
487 D?    end
488 D? end
489 D% comparetrees c:\src\projectx a:\src
</div>

<p>
Notice that <tt>i</tt> and <tt>f</tt> were declared as local variables.  If the variables were simply set variables, one instance of them would be shared by all the levels of recursion.  In this particular example, that would still have worked, but only because each level calls the next only after anything involving <tt>f</tt> or <tt>i</tt> has been evaluated; it wouldn&rsquo;t matter if <tt>f</tt> or <tt>i</tt> was trampled by the next call.  Here&rsquo;s an example where obviously that would not be true: a clumsy attempt at a &ldquo;post-order&rdquo; traversal of a directory tree:
</p>

<div class="codesample">490 D% proc traverse(a)   # Don't do it this way
491 D?    foreach i ($a\*)
492 D?      if (-d $i) traverse $i
493 D?      echo $i
494 D?    end
495 D? end
496 D% traverse . | more
</div>

<p>
If you carefully examine the output of this traverse, you&rsquo;ll see that subdirectories don&rsquo;t get listed properly:  instead of being listed by themselves, the name of their last child is listed twice.  For a correct result, try it again with <tt>i</tt> defined as a local variable.  (Use the <kbd>Page&nbsp;Up</kbd> key to help you quickly re-enter the lines that stay the same.)
</p>

<h4>
<a name="CallingAProcedure"></a>Calling a procedure
</h4>

<p>
As you may have spotted, there are two ways to invoke a procedure.  Sometimes, the arguments are inside parentheses, separated by commas, and sometimes they&rsquo;re not.  What&rsquo;s the difference?
</p>

<p>
The difference is whether the context is an expression or a command.  As discussed when we first introduced expressions, the shell always begins to parse statements by first breaking them up into words.  That&rsquo;s fine for normal commands, e.g., running an external utility.  And it works also when you want to use a procedure as if it were a command, just typing the name of the procedure followed by a list of arguments separated by spaces, e.g.,
</p>

<div class="codesample">497 D% proc power(a, b)
498 D?    return a**b
499 D? end
500 D% power 2 3
8
501 D% _
</div>

<p>
But this style of parsing wouldn&rsquo;t be very suitable in those instances where the point is to do some kind of calculation or expression evaluation.  So when the shell encounters something that normally takes an expression, e.g., following the <tt>calc</tt> keyword, or inside the test in an <tt>if</tt> statement, it shifts to a different style of parsing, further breaking up the words into tokens, so that <tt>*</tt> isn&rsquo;t misunderstood as a wildcard, so we don&rsquo;t need to type spaces around all the operators, so we can type variable names without having to put a <tt>$</tt> in front of them and so on.  All of this is so that the rules for typing an expression can bear some resemblance to those followed by other programming languages like C, FORTRAN, Pascal, etc.
</p>

<p>
When we call a procedure from within an expression, all these same arguments still apply.  We want it to act pretty much like any other high level languages.  We want to be able to pass it arbitrarily complex expressions as arguments.  We want to be able to take the value it returns and use that value as a term in still other expressions.
</p>

<p>
So there&rsquo;s a real problem:  to call a procedure from within an expression and pass other expressions as arguments, we need a way of separating one argument from the next (obviously, it can&rsquo;t be just a space as it would be when the procedure is used as if it were a command) and for separating the whole procedure call and its arguments from the rest of the expression.  That&rsquo;s why the common high-level language convention of separating arguments by commas and putting parentheses around the whole list is used.  Here&rsquo;s an example of what that looks like:
</p>

<div class="codesample">501 D% calc 5.5 + power(2, 3)*9
77.500000
</div>

<p>
If you try using a procedure as a command but accidentally type the argument list with parenthesis, it&rsquo;s an error:
</p>

<div class="codesample">502 D% power(2, 3)
csh(line 490):  Couldn't evaluate expression operands as numeric
as required by the expression operator.
&gt; in power( "(", "2,", "3", ")" ) defined at line 597
&lt; called from line 502
</div>

<p>
The reason this is an error is because, since this was typed as a command, the shell took the words following the word power as literal arguments.  It couldn&rsquo;t tell you meant this as an expression.  Let&rsquo;s redefine that procedure, putting some echo statements in there so we can see what happened:
</p>

<div class="codesample">503 D% proc power(a, b)
504 D?   echo a is $a
505 D?   echo b is $b
506 D?   return a**b
507 D? end
508 D% power(2, 3)
a is (
b is 2, 3 )
csh(line 506):  Couldn't evaluate expression operands as numeric
as required by the expression operator.
&gt; in power( "(", "2,", "3", ")" ) defined at line 503
&lt; called from line 508
</div>

<p>
As you can see, the expression <tt>a**b</tt> failed to evaluate properly because <tt>a</tt> was set to the first argument word, <tt>(</tt>, and <tt>b</tt> was set to a list of all the rest of the words.  Neither was a number.
If you want to call a procedure and substitute the value back onto the command line even when the context is not an expression, it can be done, however.  One way is with command substitution:
</p>

<div class="codesample">509 D% echo `power 2 3`
a is 2 b is 3 8
</div>

<p>
This is a bit expensive, though, because the shell will have to create a new thread to run the power procedure and set up a pipe to read the result.  And as you see, if the procedure also writes to stdout, you&rsquo;ll pick up that text also, probably unintentionally.  Another, better way, is to use a dollar sign to introduce the substitution just as if it was a variable substitution:
</p>

<div class="codesample">510 D% echo $power(2, 3)
a is 2
b is 3
8
</div>

<p>
Notice that when use the dollar sign-style procedure reference, the rest of the syntax is as if the procedure had been called from within an expression.  The arguments do need to be within parenthesis and they do need to be separated by commas.  The reason is just the same one as for why a procedure call in an expression has to be done this way:  without the parentheses, there&rsquo;d be no way to tell where the arguments ended.  A nice benefit is that in the argument list, we get to use the full expression grammar:
</p>

<div class="codesample">511 D% echo $power(2, 3*sin(1/2))
a is 2
b is 1.438277
2.709970
</div>


<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="12-Quoting.htm"><i>Tutorial:</i> Quoting</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
</p>


<h3>
<small><a href="15.2-Iteration.htm">Previous</a> |
<a href="15.4-Scripts.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Scripts
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Scripts
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm"><b>Scripts</b></a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Scripts<br/>
<small><a href="15.3-Procedures.htm">Previous</a> |
<a href="15.5-LabelsAndGotos.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Scripts">Scripts</a><br/>
<a href="#ArgumentsToAScript">Arguments to a script</a><br/>
<a href="#ignorestatus">ignorestatus</a><br/>
<a href="#sourceStatement">source statement</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<h4>
<a name="Scripts"></a>Scripts
</h4>

<p>
Scripts are a final way of bundling up a series of statements to be called up and executed as a single command.  To create a script, create a file with a <tt>.csh</tt> extension:
</p>

<div class="codesample">512 D% cat &gt;trythis.csh
echo hello from trythis
^Z
513 D% trythis
hello from trythis
</div>

<p>
When you tell the shell to run a script, it first creates a new thread to run it.  This is partly a holdover from original UNIX language definition, partly a response to a provision in Windows for threads, but not a fork mechanism and partly due to a genuine need to inexpensively separate some of the script&rsquo;s environment from that of its caller.  (The next chapter has a longer discussion of threads.)
</p>

<h4>
<a name="ArgumentsToAScript"></a>Arguments to a script
</h4>

<p>
Arguments to a shell script are passed to it as the <tt>argv</tt> variable.  <tt>argv</tt> will be a list of any words that appeared on the command line following the name of the shell script.  (You can access the name of the script as the <tt>scriptname</tt> variable.)  You can access <tt>argv</tt> like any other variable:
</p>

<div class="codesample">514 D% cat &gt;tryargv.csh
echo $#argv $argv
^Z
515 D% tryargv hello how are you
4 hello how are you
</div>

<p>
There are also some shorthand forms for getting individual words of <tt>argv</tt>.  <tt>$0</tt> through <tt>$9</tt> is the same as <tt>$argv[0]</tt> through <tt>$argv[9]</tt>.  (Remember that unless you have <tt>nullwords</tt> set, subscripting errors will be caught.)
</p>

<h4>
<a name="ignorestatus"></a>ignorestatus
</h4>

<p>
If you write a script with serially connected statements the only thing that would cause the shell to quit before it gets to the end would be an explicit failure:  an application name that couldn&rsquo;t be found, a child process that terminated with a segment fault, or something else of an equally serious nature.  Often in a script, that&rsquo;s not what you want:  you&rsquo;ve written the script with the expectation that everything will work (as you planned) from one step to the next.  If something is wrong, you&rsquo;d like the script to quit as soon as possible, before any damage is done.
</p>

<p>
The way you do this is by setting <tt>ignorestatus = 0</tt>, which means you do not want to ignore the status codes coming back to this thread from its children.  Here&rsquo;s an example in the main thread:
</p>

<div class="codesample">516 D% set ignorestatus = 0
517 D% rcode 10
10
csh:  The child process running 'rcode' exited with a non-zero status = 10.
</div>

<p>
In the main thread, the shell will keep on going and prompt for the next command because interactively that&rsquo;s most sensible.  The shell knows to do this because <tt>ignoreerrors = 1</tt>.  But in a script, errors cause the shell to quit:
</p>

<div class="codesample">518 D% cat &gt;trythis.csh
calc ignoreerrors
set ignorestatus = 0
rcode 10
echo doesn^'t print
^Z
519 D% trythis
0
10
csh(d:\Nicki\trythis.csh:line 3): The child process running
'rcode' exited with a non-zero status = 10.
&gt; in d:\Nicki\trythis.csh
&lt; called from line 519
csh:  The csh script file 'd:\Nicki\samples\trythis.csh'
exited with a non-zero status = 10.
</div>

<p>
Notice that in this case we got two messages, one from the threads executing the script and one from the main thread, reporting what the script returned.  Let&rsquo;s return to the normal mode of ignoring status:
</p>

<div class="codesample">520 D% set ignorestatus = 1
</div>

<h4>
<a name="sourceStatement"></a>source statement
</h4>

<p>
The examples so far have shown how a script is normally run somewhat isolated in a separate thread.  It is also possible to run a script in your current thread using the <tt>source</tt> statement.  You might want to do this if you wanted to the script to change your current thread&rsquo;s private variables or its current directories or disk.   Here&rsquo;s an example to showing how a sourced script runs in the same thread:
</p>

<div class="codesample">521 D% cat &gt;trythis.csh
echo argv = $argv, threadid = $threadid
^Z
522 D% echo $threadid
6
523 D% trythis hello world
argv = hello world, threadid = 7
524 D% source trythis hello world
argv = hello world, threadid = 6
526 D% _
</div>

<p>
Notice how the <tt>argv</tt> argument vector is set up the same in either case.  Also, notice that the statement number skipped by one.  When you source a script, the effect is precisely as if you typed those lines in directly to the shell.  The lines read by source are even entered into the history list:
</p>

<div class="codesample">526 D% h 5
    522  echo $threadid
    523  trythis hello world
    524  source trythis hello world
    525  echo argv = $argv, threadid = $threadid
    526  h 5
</div>


<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="53-Samples.htm">Sample scripts</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="21-Aliases.htm">Aliases</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="55-Compatibility.htm">Compatibility</a><br/>
<a href="15.6-Interrupts.htm"><i>Tutorial:</i> Interrupts</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i> Procedures</a><br/>
<a href="14-Aliases.htm"><i>Tutorial:</i> Aliases</a><br/>
</p>


<h3>
<small><a href="15.3-Procedures.htm">Previous</a> |
<a href="15.5-LabelsAndGotos.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Labels and gotos
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Labels and gotos
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm"><b>Labels and gotos</b></a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Labels and gotos<br/>
<small><a href="15.4-Scripts.htm">Previous</a> |
<a href="15.6-Interrupts.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#CautionLabelsAndGotos">Caution:  labels and gotos</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="CautionLabelsAndGotos"></a>Caution:&nbsp; labels and gotos
</h4>

<p>
We haven&rsquo;t mentioned labels and gotos yet but it probably isn&rsquo;t a surprise that the C shell allows them.  Indeed:
</p>

<div class="codesample">527 D% cat &gt;trythis.csh
goto next
echo this does not print
next: echo this prints
^Z
528 D% trythis
this prints
</div>

<p>
If you want to use <tt>goto</tt>s to labels, you should be aware that forward references can be little trickier than a more conventional compiled language.  The C shell allows you to redefine a label anytime you like.  But if you type a <tt>goto</tt> that refers to previously defined label, the shell has no way of knowing that you intend it to redefine it up ahead.  You can keep running the last example over and over this way with exactly the same result:  because a new thread is started each time with no prior definition of next, the shell knows it must be a forward reference.  But imagine how repeatedly sourcing this script would fail in an infinite loop:
</p>

<div class="codesample">% source trythis
this prints
% source trythis
this prints
this prints
this prints
this prints
this prints
:
</div>

<p>
(Beware of actually trying this:  you may find it difficult to interrupt out of it.)
</p>

<p>
The reason sourcing the script a second time turns into an infinite loop is that the label next is already defined after the first run.  The second time, when the <tt>goto</tt> is read from the script, the history list would look something like this:
</p>

<div class="codesample">source trythis
goto next
echo does not print
next: echo this prints
source trythis
goto next
</div>

<p>
What particularly gets the shell into a muddle is the way this recurses indefinitely: each time through the loop, it recurses through an another level of sourcing.  Ultimately, it runs out of stack space and fails.   This is not a nice way to treat the shell!
</p>

<p>
In general, it&rsquo;s hard to recommend <tt>goto</tt>s in any programming language nowadays; in a script you intend to run using <tt>source</tt>, they can be particularly nasty.
</p>

<p>
The shell does automatically age labels and throw them away after a while even if they haven&rsquo;t been redefined.  When it discards a label, it also discards any compiled statements it&rsquo;s been holding onto that could have been executed only by a <tt>goto</tt> to that label.  The cutoff point where the shell begins to discard labels is set by the <tt>gotowindow</tt> variable.  Let&rsquo;s now clean up after ourselves and move along:
</p>

<div class="codesample">529 D% rm trythis.csh
</div>


<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="24-MiscStatements.htm">Miscellaneous statements</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="15.4-Scripts.htm"><i>Tutorial:</i> Scripts</a><br/>
<a href="15.1-ConditionTesting.htm"><i>Tutorial:</i> Condition testing</a><br/>
<a href="15.2-Iteration.htm"><i>Tutorial:</i> Iteration</a><br/>
</p>


<h3>
<small><a href="15.4-Scripts.htm">Previous</a> |
<a href="15.6-Interrupts.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Interrupts
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Interrupts
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm"><b>Interrupts</b></a></li>
				<li><a href="16-Scheduling.htm">Scheduling</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Interrupts<br/>
<small><a href="15.5-LabelsAndGotos.htm">Previous</a> |
<a href="16-Scheduling.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Interrupts">Interrupts</a><br/>
<a href="#MaskingInterrupts">Masking interrupts</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Interrupts"></a>Interrupts
</h4>

<p>
Normally, when you type <kbd>Ctrl</kbd>-<kbd>C</kbd>, you interrupt the foreground activity.  But what if you were in the midst of a complex script and needed to do some kind of cleanup before you exited?  What if you wanted to be sure you had a chance to delete any temporary files you might have littered around?
</p>

<p>
The solution is the <tt>onintr</tt> statement, which allows you to define the action to be taken when an interrupt is received.  It causes whatever&rsquo;s running to be interrupted all the way back up to the block in which the <tt>onintr</tt> routine was defined and for the interrupt routine to be run in that current thread.  Within that interrupt routine, you could, for example, remove all your temporary files and goto the end of the script or return a special value from a procedure or whatever else might be appropriate.
</p>

<div class="codesample">530 D% onintr echo hello
531 D% for i = 1 to 5 do
532 D?    echo $i
533 D?    sleep 1
534 D? end
1
^C
hello
</div>

<p>
Here&rsquo;s another example, returning from a procedure.  Note how the value returned (and printed) is the one produced by the <tt>onintr</tt> statement.
</p>

<div class="codesample">535 D% proc foobar()
536 D?    onintr return 5
537 D?    for i = 1 to 5 do
538 D?        echo $i
539 D?        sleep 1
540 D?    end
541 D? return 2
542 D? end
543 D% foobar
1
^C
5
</div>

<p>
When execution leaves the block in which an <tt>onintr</tt> is defined, the previous <tt>onintr</tt> (if any) again takes effect.  Note that a null <tt>onintr</tt> routine does not mean that interrupts are ignored, merely that after processing bubbles back up to the level where that <tt>onintr</tt> was defined, that it will continue with the next statement.  Notice how, in this example, when the <kbd>Ctrl</kbd>-<kbd>C</kbd> is received when obviously execution is stuck in the infinite loop inside bar, that the <tt>onintr goto xx</tt> causes a branch to xx in the same block in which the <tt>onintr</tt> was defined, not the <tt>xx</tt> in the block where execution was going on.  Also, notice that once both procedures have been exited, we&rsquo;re back to the same <tt>onintr</tt> routine we defined a few statements earlier.
</p>

<div class="codesample">544 D% proc foo()
545 D?    onintr goto xx
546 D?    bar
547 D?   xx:  echo this is foo
548 D? end
549 D% proc bar()
550 D?    while (1)   # Deliberately infinite loop
551 D?    end
552 D?   xx:  echo this is bar
553 D? end
554 D% foo
^C
this is foo
555 D% ^C
hello
555 D% _
</div>

<h4>
<a name="MaskingInterrupts"></a>Masking interrupts
</h4>

<p>
In cases where you&rsquo;d like to simply turn off interrupts or defer processing them, use the <tt>irqmask</tt> variable.  By default, it&rsquo;s set to 0, meaning interrupts will be accepted immediately.  Setting it to 1 means interrupts will be deferred until the mask is cleared again.  Setting it to 2 means interrupts will be totally ignored.
</p>

<p>
<tt>irqmask</tt> is a per-thread variable, meaning each thread can independently decide how it will respond to interrupts.  Each new thread always starts out with <tt>irqmask = 0</tt> (interrupts enabled).
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="24-MiscStatements.htm">Miscellaneous statements</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="16-Scheduling.htm"><i>Tutorial:</i> Scheduling</a><br/>
</p>


<h3>
<small><a href="15.5-LabelsAndGotos.htm">Previous</a> |
<a href="16-Scheduling.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Scheduling
	</title>
	
	<script type="text/javascript" src="Arrows.js"></script>
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="04-Tutorial.htm">Tutorials</a>
			</h4>
			<h2>
				Scheduling
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm"><b>Tutorials</b></a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Tutorials</p></li>
				<li><a href="04-Tutorial.htm">Getting started</a></li>
				<li><a href="04.1-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="04.2-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="05-TheUtilities.htm">Utilities</a></li>
				<li><a href="06-TarAndMT.htm">Tar and mt</a></li>
				<li><a href="07-IORedirection.htm">I/O redirection</a></li>
				<li><a href="08-History.htm">History</a></li>
				<li><a href="09-Variables.htm">Variables</a></li>
				<li><a href="10-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="11-Editing.htm">Editing</a></li>
				<li><a href="12-Quoting.htm">Quoting</a></li>
				<li><a href="13-Expressions.htm">Expressions</a></li>
				<li><a href="14-Aliases.htm">Aliases</a></li>
				<li><a href="15-ProgrammingConstructs.htm">Programming constructs</a></li>
				<li><a href="15.1-ConditionTesting.htm">if and switch</a></li>
				<li><a href="15.2-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="15.3-Procedures.htm">Procedures</a></li>
				<li><a href="15.4-Scripts.htm">Scripts</a></li>
				<li><a href="15.5-LabelsAndGotos.htm">Labels and gotos</a></li>
				<li><a href="15.6-Interrupts.htm">Interrupts</a></li>
				<li><a href="16-Scheduling.htm"><b>Scheduling</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Scheduling<br/>
<small><a href="15.6-Interrupts.htm">Previous</a> |
<a href="17-LanguageReference.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#ForegroundActivities">Foreground activities</a><br/>
<a href="#BackgroundActivities">Background activities</a><br/>
<a href="#VariablesAndThreads">Variables and threads</a><br/>
<a href="#Reentrancy">Re-entrancy</a><br/>
<a href="#Threads">Threads</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="ForegroundActivities"></a>Foreground activities
</h4>

<p>
Whenever you type any command, the shell&rsquo;s normal behavior is to start up that child activity and then go to sleep waiting for it to complete.  This is a foreground activity.  If you start something and then decide you want to stop it, type <kbd>Ctrl</kbd>-<kbd>C</kbd>, which wakes up the shell and causes it to stop the foreground activities.
</p>

<p>
If the application is going to run in its own separate window, that&rsquo;s treated specially.  For example, typing:
</p>

<div class="codesample">555 D% notepad
</div>

<p>
causes <tt>notepad</tt>, which is a graphical application, to appear in a new window.  In that case, unless the command is in script or part of a more complex structure, e.g., a pair of statements joined by <tt>;</tt>, <tt>&amp;&amp;</tt> or <tt>||</tt>, there&rsquo;s no reason for the shell to wait for the child&rsquo;s completion.  After all, if you want to wait until it&rsquo;s done you can do that yourself!
</p>

<p>
The way the shell figures out what type of application you&rsquo;re starting is by actually examining the executable file itself.  It can tell the difference between console and graphical applications.  When you start an application that needs a new window, the shell comes right back for the next command.
</p>

<p>
Also, if the child is a graphical application and stdout or stderr is tied to the console window where the C shell&rsquo;s running, the C shell recognizes that that handle won&rsquo;t be inheritable by the child and instead will create a pipe.  It&rsquo;ll give the write end to the child and create a background thread in the C shell to read anything coming back over the pipe from the child and copy it to the console window.  This means that with the C shell, you can still use ordinary printf&rsquo;s in a Windows graphical application and not lose any output.
</p>

<h4>
<a name="BackgroundActivities"></a>Background activities
</h4>

<p>
If you want to run something but don&rsquo;t want to wait for it complete, just type an ampersand at the end of the statement:
</p>

<div class="codesample">556 D% wc hello.c &gt;linecnt &amp;
1
557 D% _
</div>

<p>
This creates a child process to run word count in the background, with its output directed to a file.  The <tt>1</tt> message means that a new background job (job 1) has been spawned to process the command while you continue to work.  The job starts as a new thread.  If, as in this case, a separate process is needed, that thread will create it with a CreateProcess call to the Windows kernel then exit.  Each new thread, process or screen group spawned by a background job will inherit its parent&rsquo;s job number.  Every time a new background job is created, the job number is incremented.
</p>

<p>
The use of i/o redirection in combination with a background activity is not accidental.  If it&rsquo;s not redirected, it goes to your terminal, intermixing with the output of any foreground activities.  Occasionally, that might be exactly what you want.  For example, here&rsquo;s a timer to wake you up in 5 minutes (300 seconds):
</p>

<div class="codesample">557 D% (sleep 300; echo ^aWake Up, Sleepyhead.) &amp;
2
:
:
Beep
Wake Up, Sleepyhead.
</div>

<p>
The ampersand works consistently for things that need a new window:
</p>

<div class="codesample">558 D% notepad
3
559 D% _
</div>

<p>
A new job starts up and announces itself, then realizes that the notepad has to be run in a separate window.  Once it&rsquo;s started the child, the thread exits, its children are adopted by its parent thread and the child is left running as job 3.
</p>

<p>
Background activities are, in a sense, detached:  typing <kbd>Ctrl</kbd>-<kbd>C</kbd> doesn&rsquo;t interrupt them (unless they explicitly ask to be notified.)  You can start a large number of background activities and check on their status using the ps (process status) command.  Here&rsquo;s what you&rsquo;d see:
</p>

<div class="codesample">559 D% ps
Job     ID      Parent      State          Activity
-       t131    -           running        interrupt_handler
-       t134    t131        running        keyboard_reader
<b>-       t135    t131        running        main_thread</b>
-       t99     t131        running        console_io
3       p114    t135        running        notepad
</div>

<p>
Several threads are always running in the background.  Each spends most of the time asleep, waking up to do some housekeeping only when an interrupt or the signal that a child activity has completed is received.  One thread is dedicated to reading characters from the keyboard on request from other threads.  Another thread is the foreground command processor.  The console_io thread was spawned when the C shell realized that notepad is a graphical application and that a pipe would be needed to capture any stdio output from the child.  Other entries in the ps report come and go as you type commands.
</p>

<p>
If you want to explicitly terminate a background activity, use the kill command.  But do keep in mind that under Windows, there are two ways to kill a process:  If it&rsquo;s a console (text window) application, it can be done by sending it a <kbd>Ctrl</kbd>-<kbd>C</kbd> signal; that&rsquo;s what kill does by default.  But if it&rsquo;s a graphical application, it can only be done using the TerminateProcess call, a very brute force way of killing something; any DLL&rsquo;s that were being used by that process will not get any notification that the process has died and, thus, will not know to do any cleanup they might normally do.
</p>

<div class="codesample">560 D% kill -x! 3
561 D% ps
Job     ID      Parent      State          Activity
-       t131    -           running        interrupt_handler
-       t134    t131        running        keyboard_reader
<b>-       t135    t131        running        main_thread</b>
-       t99     t131        running        console_io
</div>

<h4>
<a name="VariablesAndThreads"></a>Variables and threads
</h4>

<p>
User-defined variables are shared between all active threads unless they&rsquo;re declared as <a href="22-Variables.htm"><tt>local</tt></a>.  If one changes a variable&rsquo;s value, the other threads see that change immediately.  Because the individual threads run asynchronously, this can cause some surprising results.  In this example, the foreground thread spawns new background threads and increments the variable <tt>i</tt> faster than the children can execute.  By the time any the children actually start, the loop has finished and every thread sees <tt>i</tt> as having the value 5.
</p>

<div class="codesample">562 D% for i = 1 to 3 do
563 D?    echo $i &amp;
564 D? end
4
5
6
565 D% 5
5
5
</div>

<p>
One solution is to use the <tt>eval</tt> statement.  <tt>eval</tt> parses the text it&rsquo;s passed at run-time, after any variable substitutions have been done.  Because the ampersand is inside the quotes, its special meaning isn&rsquo;t detected until run-time.
</p>

<div class="codesample">565 D% for i = 1 to 3 do
566 D?    eval "echo $i &amp;"
567 D? end
7
8
9
568 D% 1
2
3
</div>

<p>
A better solution is to make <tt>i</tt> a <tt>local</tt> variable, since locals are snapshotted and copied when the child is spawned:
</p>

<div class="codesample">568 D% local i;  for i = 1 to 3 do
569 D%    echo $i &amp;
570 D% end
10
11
12
571 D% 1
2
3
</div>

<h4>
<a name="Reentrancy"></a>Re-entrancy
</h4>

<p>
Threads also introduce the possibility of re-entrancy.  In the next example, we define a procedure for summing all the integers 1 to <tt><var>n</var></tt>.  Notice that it works fine if it&rsquo;s run by itself, but gives the wrong answers if two threads try to run it simultaneously:
</p>

<div class="codesample">571 D% proc sum(n)
572 D?    @ s = 0
573 D?    for i = 1 to n do
574 D?       @ s += i
575 D?    end
576 D? end
577 D% sum 100
5050
578 D% sum 100 &amp;; sum 100
13
6780
579 D% 7177
</div>

<p>
Here also, the solution is simply to include a statement defining <tt>i</tt> and <tt>s</tt> as <tt>local</tt> inside the procedure.
</p>

<h4>
<a name="Threads"></a>Threads
</h4>

<p>
In building Hamilton C shell, a conscious and fundamental decision was made to use threads in many situations where earlier shells might have created separate processes.  The result is a dramatically more responsive tool albeit one with some subtle semantic differences from the original.
</p>

<p>
The UNIX C shell language definition called for individual stages of a pipeline, command substitutions and scripts each to be run in a separate process cloned by forking the main process.  Using forking, the child inherited all of its parent&rsquo;s state (current directory, open file handles, environmental and set variables, etc.) but any changes it made only affected itself.  On a UNIX system with paging hardware and the fork mechanism built into the kernel, it&rsquo;s pretty fast.
</p>

<p>
But the Windows Win32 API&rsquo;s do not have fork , and trying to recreate precisely this language semantic under Windows would have been foolishly expensive, potentially adding several seconds to the startup time each time you invoked a shell script.  On the other hand, these systems do offer threads.  A process can have lots of threads and each one can run along at its own pace.  When a thread calls the kernel to do something that takes a long time (e.g., a disk read), it goes to sleep and doesn&rsquo;t wake up until the data&rsquo;s ready.  When one thread goes to sleep, the kernel looks around for another that&rsquo;s ready to run.  By using threads, it&rsquo;s possible to ensure that if one thing&rsquo;s got to wait, that won&rsquo;t hold up everything else.
</p>

<p>
Threads turn out to be even faster than a fork (regardless of the hardware), because the amount of state information associated with a thread is so little compared to that of a process.  As viewed by the kernel, a thread &ldquo;owns&rdquo; only a register set, a stack and an instruction pointer.  Everything else, memory, current directories, etc., is shared among all the threads in a process.  This means creating a thread is very fast, as is switching between threads.
</p>

<p>
On the other hand, using threads to best advantage imposed some significant design challenges in Hamilton C shell.  Certainly, for example, few would consider it acceptable if a script running in the background could <kbd>Boom<script type="text/javascript">
	if (Arrows.haveWingdings )
		document.write(' <span style="font-family: Wingdings">&#x4d;</span>');
	else
		document.write('!');
</script></kbd> change your foreground current disk!  The problem was to create a way for threads to cooperatively share the process resources but without giving away all the performance advantage we&rsquo;d started with by using threads.  Also, some of the elegance of threads is the idea you can keep creating new ones.  Each is just like the next:  any given thread can run just as complex a program as the next and each can spawn new threads.  It would be a shame to lose that recursive characteristic by clumsiness in the language design.
</p>

<p>
Starting with a clean sheet of paper, our solution was a highly multi-threaded architecture.  It expects you to start lots of threads:  stages in a pipe, background activities, etc.  To our knowledge, no other command processor on any system employs this technology.  Certainly, all the code in Hamilton C shell is re-entrant:  there is a minimum of global, statically-allocated data; the few variables that are global tend to be pointers to the roots of various dynamically-allocated information trees for managing variables, threads, processes, file handles and other resources.   When the shell creates a new thread, it creates the appropriate records and links them in.  Some characteristics given the new thread are inherited from its parent and some always get set to specific defaults.
</p>

<p>
Shared variables and other resources are semaphored:  before using a resource, a thread requests it;  if several resources are needed simultaneously, they&rsquo;re always requested in the same order to avoid deadlocks.  Critical resources are held only for short periods.  There&rsquo;s no polling anywhere.  &ldquo;Handle&rdquo; mechanisms are used so that, e.g., a thread can decide if its current disk and directories are set up by simply comparing an integer.  Path hashing structures are shared with a &ldquo;copy on write&rdquo; mechanism in case they change directories and need slightly different hash structures.  Any thread can do what any other can: compile or execute an arbitrarily complex C shell program or even spawn or pipe child threads.
</p>

<p>
Given the enormous advantage offered by threads and the unique technology we&rsquo;ve developed to exploit them, we expect Hamilton C shell should easily outperform any UNIX shell on comparable hardware.
</p>


<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="55-Compatibility.htm">Compatibility</a><br/>
<a href="15.6-Interrupts.htm"><i>Tutorial:</i> Interrupts</a><br/>
</p>



<h3>
<small><a href="15.6-Interrupts.htm">Previous</a> |
<a href="17-LanguageReference.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Language reference
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Language reference
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm"><b>Basic statements</b></a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Basic statements<br/>
<small><a href="16-Scheduling.htm">Previous</a> |
<a href="18-ConditionTesting.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#CommandLineSizeLimit">Command line size limit</a><br/>
<a href="#PathHashing">Path hashing</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<p>
A basic statement is a command name plus any argument words to be passed to it.  For example:
</p>

<div class="codesample">notepad hello.txt
cp hello.* ~Public
</div>

<p>
<a href="31-Wildcarding.htm">Wildcarding</a>, as shown here with the <tt>*</tt> and <tt>~</tt> characters, is done by the shell and the results passed to the command as the expanded list of
arguments. 
</p>

<p>
Individual statements are parsed into a series of words separated by white
space (spaces or tabs) or these <a href="25-StatementRelationships.htm">special tokens</a>
that allow stdio to be redirected, e.g., with <tt>&gt;</tt> or <tt>&lt;</tt> and for
statements to be joined together, e.g., serially with <tt>;</tt>, conditionally
with <tt>&amp;&amp;</tt> or in a pipeline with <tt>|</tt>:
</p>

<div class="codesample  langref">&amp;   |   ;   &gt;   &lt;  (   )   &amp;&amp;   ||   &gt;&gt;   &lt;&lt;   &gt;&amp;  &gt;!   &gt;&amp;!
</div>

<h4>
<a name="CommandLineSizeLimit"></a>Command line size limit
</h4>

<p>
Up to 32K characters can be passed on the command line to a child process.  That&rsquo;s
the limit of the Windows kernel, not the C shell; there is no limit on overall
command line length in the C shell itself.
</p>

<h4>
<a name="PathHashing"></a>Path hashing
</h4>

<p>
Hamilton C shell maintains a hash structure which
allows it to quickly search for a suitable <tt>.csh</tt>,
<tt>.exe</tt>, <tt>.com</tt>, <tt>.cmd</tt> or <tt>.bat</tt>
file in that order in each of the first 256 path directories.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="Utilities/csh.htm">Hamilton C shell command line options</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="26-IORedirection.htm">I/O redirection</a><br/>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="50-BuiltinUtilities.htm">Builtin utilities</a><br/>
<a href="51-ExternalUtilities.htm">External utilities</a><br/>
<a href="04-Tutorial.htm"><i>Tutorial:</i> Getting started</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="07-IORedirection.htm"><i>Tutorial:</i> I/O redirection</a><br/>
<a href="05-TheUtilities.htm"><i>Tutorial:</i> Utilities</a><br/>
</p>


<h3>
<small><a href="16-Scheduling.htm">Previous</a> |
<a href="18-ConditionTesting.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		if and switch
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				if and switch
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm"><b>if and switch</b></a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
if and switch<br/>
<small><a href="17-LanguageReference.htm">Previous</a> |
<a href="19-Iteration.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#if">if</a><br/>
<a href="#switch">switch</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<div class="codesample  langref">   if ( <var>expr</var> ) <var>statement</var>


   if ( <var>expr</var> ) then
      <var>statement_list</var>
   end


   if ( <var>expr</var> ) then
      <var>statement_list</var>
   else
      <var>statement_list</var>
   end


   if ( <var>expr</var> ) then
      <var>statement_list</var>
   elif ( <var>expr</var> ) <var>statement</var>


   if ( <var>expr</var> ) then
      <var>statement_list</var>
   elif ( <var>expr</var> ) then
      <var>statement_list</var>
   end


   if ( <var>expr</var> ) then
      <var>statement_list</var>
   elif ( <var>expr</var> ) then
   	<var>statement_list</var>
   else
      <var>statement_list</var>
   end


   switch ( <var>expr</var> )
      case <var>expr</var>:
         <var>statement_list</var>
      case <var>expr</var>:
         <var>statement_list</var>
      default:
         <var>statement_list</var>
   end
</div>

<h4>
<a name="if"></a>if
</h4>

<p>
The short form of the <tt>if</tt> statement, which must be typed
on one line, dispenses with the
<tt>then</tt> keyword and accepts a single statement to be executed
if <tt><var>expr</var></tt> evaluates as true.
</p>

<p>
The long form uses a <tt>then</tt>
keyword and allows optional <tt>else</tt> and <tt>elif</tt> clauses.
The last <tt>if</tt> in an <tt>elif</tt> chain may be either a short-
or a long-form <tt>if</tt> statement.
</p>

<p>
Where an expression is expected, conventional high level language
syntax is accepted.  Names refer to variables, <tt>*</tt>
means multiply, not wildcard and <tt>&gt;</tt> means greater than,
not i/o redirection.
</p>

<h4>
<a name="switch"></a>switch
</h4>

<p>
In a <tt>switch</tt> statement, expressions are compared by
<a href="31-Wildcarding.htm">pattern match</a>, as if using the
<a href="27-ExpressionOperators.htm"><tt>=~</tt></a> comparison operator. 
The <tt>case</tt> expression can be a string with wildcard
characters.  Comparisons are made down the list of alternatives
until one matches.  All following statements are executed until
a <tt>break</tt> is encountered.  A <tt>default</tt> clause is
optional but is always satisfied if no other <tt>case</tt>
matches.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>


<p>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="15.1-ConditionTesting.htm"><i>Tutorial:</i> if and switch</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>


<h3>
<small><a href="17-LanguageReference.htm">Previous</a> |
<a href="19-Iteration.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		foreach, for, while and repeat
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				foreach, for, while and repeat
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm"><b>foreach, for, while and repeat</b></a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
foreach, for, while and repeat<br/>
<small><a href="18-ConditionTesting.htm">Previous</a> |
<a href="20-Procedures.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<div class="codesample  langref">   foreach <var>name</var> ( <var>wordlist</var> )
      <var>statement_list</var>
   end


   for <var>name</var> = <var>expr</var> <var>[</var> to <var>expr</var> <var>]</var> <var>[</var> by <var>expr</var> <var>]</var>  do
      <var>statement_list</var>
   end


   while ( <var>expr</var> )
      <var>statement_list</var>
   end


   repeat <var>number</var> <var>statement</var>


   repeat
      <var>statement_list</var>
   until ( <var>expr</var> )
</div>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The <tt>foreach</tt> statement allows iteration over a list of words, often specified by wildcarding.  Each time through the loop, the control variable <tt><var>name</var></tt> is given the value of the next word in the list.
</p>

<p>
The <tt>for</tt> statement offers the more conventional numeric iteration.
Multiple iteration ranges, separated by commas, can be specified on the
<tt>for</tt> statement.
</p>

<p>
The <tt>while</tt> statement iterates so long as <tt><var>expr</var></tt>
continues to evaluate as true.
</p>

<p>
The <tt>repeat</tt>
statement has two variations.  The first provides for the iteration
of a single statement an integer number of times. The second form
iterates until <tt><var>expr</var></tt> evaluates as true.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="15.2-Iteration.htm"><i>Tutorial:</i> foreach, for, while and repeat</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>


<h3>
<small><a href="18-ConditionTesting.htm">Previous</a> |
<a href="20-Procedures.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Procedures
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Procedures
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm"><b>Procedures</b></a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Procedures<br/>
<small><a href="19-Iteration.htm">Previous</a> |
<a href="21-Aliases.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<div class="codesample  langref">   proc <var>name</var> ( <var>[</var> <var>namelist</var> <var>]</var> )
      <var>statement_list</var>
      return <var>[</var> <var>expr</var> <var>]</var>
   end


   proc
   proc <var>name</var>
   proc <var>pattern</var>


   unproc <var>namelist</var>
   unproc <var>pattern</var>
</div>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Procedures defined by the <tt>proc</tt> statement can recursively call
other procedures.  They can be referred to inside an expression or as
a new command, in which case any value returned is written to stdout.
There is an implicit return statement at the end of every procedure
definition.
</p>

<p>
The <tt>proc</tt> statement with no arguments prints a list of all the
procedures that have been defined; if the argument is a name, that one
procedure is listed; if the argument is a pattern, all procedures whose
names match the pattern are listed.
</p>

<p>
<tt>unproc <var>namelist</var></tt>, where <tt><var>namelist</var></tt> is a series of
names separated by commas, discards the specified procedures.
<tt>unproc <var>pattern</var></tt> discards all procedures whose names match
the pattern.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i> Procedures</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>


<h3>
<small><a href="19-Iteration.htm">Previous</a> |
<a href="21-Aliases.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Aliases
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Aliases
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm"><b>Aliases</b></a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Aliases<br/>
<small><a href="20-Procedures.htm">Previous</a> |
<a href="22-Variables.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<div class="codesample  langref">   alias <var>name</var> <var>[</var> = <var>]</var> ( <var>wordlist</var> )
   alias <var>name</var> <var>[</var> = <var>]</var> <var>wordlist</var>


   alias
   alias <var>name</var>
   alias <var>pattern</var>


   unalias <var>namelist</var>
   unalias <var>pattern</var>
</div>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Aliases provide a way of conveniently recalling frequently used commands
with a user-defined shorthand name.  The <tt>alias</tt> statement associates
a list of words with an alias name.  The <tt>=</tt> is optional.
Parentheses are used around the wordlist if it contains special characters
such as i/o redirection operators that should be part of the alias definition.
</p>

<p>
Inside the wordlist, <a href="34-HistoryRecall.htm">history</a> references
can be used to refer to the words on the command line but the <tt>!</tt>
history and any wildcard characters have to be escaped or quoted to defer
processing.  Here's an example.
</p>

<div class="codesample">1 C% alias word0 echo ^!^!:0
2 C% alias word1 echo ^!^!:1
3 C% alias wordargs echo ^!^!:^*
4 C% word0 now is the time
word0
5 C% word1 now is the time
now
6 C% wordargs now is the time
now is the time
</div>

<p>
<tt>alias <var>name</var></tt> prints the definition of that alias;
<tt>alias <var>pattern</var></tt> prints the definitions of all the aliases
whose names match the pattern.  <tt>alias</tt> without any arguments prints
the definitions of all the aliases.
</p>

<p>
<tt>unalias <var>namelist</var></tt> discards the specified aliases;
<tt>unalias <var>pattern</var></tt> discards all the aliases whose names
match the pattern.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i> Procedures</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>


<h3>
<small><a href="20-Procedures.htm">Previous</a> |
<a href="22-Variables.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		@, calc, set, setenv and local
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>

			</h4>
			<h2>
				@, calc, set, setenv and local
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm"><b>@, calc, set, setenv and local</b></a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
@, calc, set, setenv and local<br/>
<small><a href="21-Aliases.htm">Previous</a> |
<a href="23-FunctionKeys.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#LocalVars">Local variables</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<div class="codesample  langref">   @ <var>expr</var>
   calc <var>expr</var>


   set <var>variable-or-array-element</var> <var>[</var> = <var>]</var> ( <var>wordlist</var> )
   set <var>variable-or-array-element</var> <var>[</var> = <var>]</var> <var>wordlist</var>
   setenv <var>environment-variable</var> <var>[</var> = <var>]</var> ( <var>wordlist</var> )
   setenv <var>environment-variable</var> <var>[</var> = <var>]</var> <var>wordlist</var>
   shift <var>[</var> <var>variable</var> <var>]</var>


   set
   set <var>variable</var>
   set <var>pattern</var>
   setenv
   setenv <var>variable</var>
   setenv <var>pattern</var>


   unset <var>list-of-variables</var>
   unset <var>pattern</var>
   unsetenv <var>list-of-environment-variables</var>
   unsetenv <var>pattern</var>


   local <var>list-of-variables</var>
   local
   local <var>pattern</var>


   unlocal <var>list-of-variables</var>
   unlocal <var>pattern</var>
</div>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The <tt>@</tt> and <tt>calc</tt> statements will each calculate the
value of an expression; the <tt>@</tt> statement does it silently while
the <tt>calc</tt> statement writes the result to stdout.
</p>

<p>
The  <tt>set</tt>, <tt>setenv</tt> and <tt>shift</tt> statements manipulate
variables as words rather than expressions.  <tt>set</tt> defines a variable
that's shared between all threads in the shell; <tt>setenv</tt> puts it into
the environment which is inherited by child processes.  A <tt><var>named_ref</var></tt>
can be either a simple variable name or an indexed variable, e.g., <tt>files[2]</tt>.
</p>

<p>
<tt>set</tt> or <tt>setenv</tt> with no operands prints a list of all
defined variables of that type.  <tt>set&nbsp;<var>name</var></tt> or
<tt>setenv&nbsp;<var>name</var></tt> with no additional arguments prints the value of
the named variable.  <tt>set&nbsp;<var>pattern</var></tt> or
<tt>setenv&nbsp;<var>pattern</var></tt> prints the values of all the
variables whose names match the <a href="31-Wildcarding.htm">pattern</a>.
To resolve the ambiguity
between a pattern and an indexed variable reference, pattern arguments
to <tt>set</tt> or <tt>setenv</tt> cannot use the <tt>[</tt>
as the first wildcard character in the string.
</p>

<p>
<tt>unset&nbsp;<var>namelist</var></tt> or <tt>unsetenv&nbsp;<var>namelist</var></tt>
discard the specified variables.  <tt>unset&nbsp;<var>pattern</var></tt> or
<tt>unsetenv&nbsp;<var>pattern</var></tt> discard all the shell or environment
variables, respectively, that match the pattern.
</p>

<p>
By convention on Windows, environment variable names are
case-insensitive, so any patterns used with <tt>setenv</tt> or
<tt>unsetenv</tt> are also considered case-insensitive.
</p>

<h4>
<a name="LocalVars"></a>Local variables
</h4>

<p>
The <tt>local</tt> command lets you define a list of variable names that
you don't to share with other routines or other processes or threads
(except your own child threads).  When you define a local variable it hides
any previous definition from any outer statement list.  (But you are not
permitted to redefine any of the builtin <tt>set</tt> or <tt>setenv</tt>
variable names.)
</p>


<p>
The <tt><var>namelist</var></tt> may be typed with or without commas between the names.  When
you create a new local variable, its initial value is always a null string.
<tt>local</tt> with no operands reports the currently defined and accessible
local variables, if any.  <tt>local&nbsp;<var>pattern</var></tt> lists all the
local variables whose names match the pattern.
</p>

<p>
When you spawn a child thread either implicitly, e.g., to run the second
or following stage of a pipeline or explicitly, by typing <tt>&amp;</tt> at
the end of a command to run it in the background all your current local
variables are snapshotted and copied to the child.  If, following that,
either the parent or the child changes the value of any of these local
variables, it affects only its own copy.
</p>

<p>
Local variables are automatically discarded as soon as execution leaves
the statement nesting level in which the variable was created.  You can
also explicitly discard local variables using the  <tt>unlocal</tt>
command.
</p>

<p>
<tt>unlocal&nbsp;<var>namelist</var></tt> discards the specified local
variables.  <tt>unlocal&nbsp;<var>pattern</var></tt> discards all those whose
names match the pattern.
</p>

<p>
In all other respects, local variables act just like any other variables,
though you may find they're slightly faster since the shell doesn't
need to semaphore its use of them.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="44-VariablesSortedByName.htm">Predefined variables</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>

<h3>
<small><a href="21-Aliases.htm">Previous</a> |
<a href="23-FunctionKeys.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Function keys
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Function keys
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm"><b>Function keys</b></a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
setkey statement<br/>
<small><a href="22-Variables.htm">Previous</a> |
<a href="24-MiscStatements.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#UsingTheFunctionKeys">Using the function keys</a><br/>
<a href="#F1ToOpenTheUserGuide"><kbd>F1</kbd> to open the user guide</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<div class="codesample langref">   setkey <var>fkey</var> <var>[</var> = <var>]</var> ( <var>wordlist</var> )
   setkey <var>fkey</var> <var>[</var> = <var>]</var> <var>wordlist</var>


   setkey
   setkey <var>pattern</var>
   
   
   unsetkey <var>fkeylist</var>
   unsetkey <var>pattern</var>
</div>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The <tt>setkey</tt> command lets you define a list of words that should
be stuffed back onto the command-line whenever you press a particular
function key.  The syntax is exactly the same as used in the <tt>set</tt>,
<tt>setenv</tt> and <tt>alias</tt> commands, where <tt><var>fkey</var></tt> is any of
the function keys <kbd>F1</kbd> through <kbd>F12</kbd>,
case-insensitive.
</p>

<p>
<tt>setkey</tt> with no operands reports the current function key bindings,
if any.  <tt>setkey&nbsp;<var>pattern</var></tt> lists the bindings for any keys
whose names match the pattern.  The corresponding <tt>unsetkey</tt>
command discards key bindings.  The <tt><var>fkeylist</var></tt> can be typed with either
spaces or commas between the names of the keys.
</p>

<h4>
<a name="UsingTheFunctionKeys"></a>Using the function keys
</h4>

<div id="keystrokes">
<p class="left">
<kbd>F<i>n</i></kbd>
</p>

<p>
Clear the command line, post the text bound
to this key and execute the command.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<kbd>F<i>n</i></kbd>
</p>

<p>
Insert the text bound to this key at the cursor location but don't
execute it yet.
</p>
</div>

<div id="keystrokes" class="last">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>F<i>n</i></kbd>
</p>

<p>
Clear the command line and post the text bound to this key but don't
execute it yet.
</p>
</div>

<p>
Since the function key's bound text is written back into the command line
inside command line editor, the substitution happens ahead of any parsing
of the command line into words or expansion of <tt>!</tt> or <tt>%</tt>
history references so it is possible to meaningfully embed
these kinds of references into the key binding.
</p>

<h4>
<a name="F1ToOpenTheUserGuide"></a><kbd>F1</kbd> to open the user guide
</h4>

<p>
The default <a href="47-StartupCsh.htm"><tt>startup.csh</tt></a> uses <tt>setkey</tt> to cause <kbd>F1</kbd> to open the user guide.
</p>

<table>
<tr>
<td>
<pre><tt>#  Set f1 to open the user guide.
setkey   f1    open ^$shell:h:h\UserGuide\index.htm
</tt></pre>
</td>
</tr>
</table>

<p>
<tt>$shell</tt> refers to the path to the currently running <tt>csh.exe</tt>; escaping the <tt>$</tt> with <tt>^</tt> defers evaluation to run-time, simply to avoid
dealing with a path that contains spaces.  The <a href="39-PathnameEditing.htm"><tt>:h</tt></a> operator returns the directory containing.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="31-Wildcarding.htm">Wildcard characters</a><br/>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="35-CommandCompletion.htm">Command completion</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
</p>

<h3>
<small><a href="22-Variables.htm">Previous</a> |
<a href="24-MiscStatements.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Miscellaneous statements
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Miscellaneous statements
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm"><b>Miscellaneous statements</b></a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">


<h3>
Miscellaneous statements<br/>
<small><a href="23-FunctionKeys.htm">Previous</a> |
<a href="25-StatementRelationships.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax and description</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax and description
</h4>

<table >

<tr>
<th style="width: 150px">
Statement
</th>
<th>
Function
</th>
</tr>

<tr>
<td class="langref">
<a name="driveletter"></a>
<var>driveletter</var><tt>:</tt>
</td>
<td>
<p>
Change current drive.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="label"></a>
<var>label</var><tt>:</tt>
</td>
<td>
<p>
Define a label.  To avoid being confused with a drive letter, a label cannot be a single alphabetic character.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="parens"></a>
<tt>(</tt> <var>statement_list</var> <tt>)</tt>
</td>
<td>
<p>
Group a list of statements, saving and restoring the current
drive and current directory during execution.  (Current directory
settings on other drives are not saved and restored.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="break"></a>
<tt>break </tt><var>[ name ]</var>
</td>
<td>
<p>
Exit from the named or, by default, the innermost <tt>switch</tt>,
<tt>foreach</tt>, <tt>for</tt>, <tt>while</tt> or  <tt>repeat</tt>
statement.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="continue"></a>
<tt>continue </tt><var>[ name ]</var>
</td>
<td>
<p>
Continue with the next iteration of the named or innermost <tt>foreach</tt>,
<tt>for</tt>, <tt>while</tt> or <tt>repeat</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="exit"></a>
<tt>exit </tt><var>[ expr ]</var>
</td>
<td>
<p>
Exit from this thread or, if this is the main thread, from the C shell.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="goto"></a>
<tt>goto </tt><var>name</var>
</td>
<td>
<p>
Continue at the labeled statement.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="onintr"></a>
<tt>onintr </tt><var>statement</var>
</td>
<td>
<p>
Define the action to be taken if an interrupt is signaled.  Whatever's
running is interrupted all the way back up to the block in which the
<tt>onintr</tt> was defined.  That statement is run in the current
thread and execution continues with the next statement in the block where
the <tt>onintr</tt> was defined.  When execution leaves a block in which
an <tt>onintr</tt> is defined, the previous <tt>onintr</tt> (if any)
again takes effect.  To ignore or defer interrupts, use the
<tt>irqmask</tt> variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="source"></a>
<tt>source </tt><var>wordargs</var>
</td>
<td>
<p>
Read and process statements from a file as if they were typed
into this thread.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="time"></a>
<tt>time</tt> <var>statement</var>
</td>
<td>
<p>
Execute the statement and report how long it took.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="comment"></a>
<tt>#</tt>
</td>
<td>
<p>
Comment text up to the end of the line.  To be recognized as a valid
comment, the <tt>#</tt> must be followed by at least one space or tab.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="embedded"></a>
<tt>## <var>comment</var> ##</tt>
</td>
<td>
<p>
Embedded comment.  To be recognized, the <tt>##</tt> tokens should be preceded and followed by white space.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="17-LanguageReference.htm">Basic statements</a><br/>
<a href="18-ConditionTesting.htm">if and switch</a><br/>
<a href="19-Iteration.htm">foreach, for, while and repeat</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="15.1-ConditionTesting.htm"><i>Tutorial:</i> if and switch</a><br/>
<a href="15.2-Iteration.htm"><i>Tutorial:</i> foreach, for, while and repeat</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
<a href="15.5-LabelsAndGotos.htm"><i>Tutorial:</i> Labels and gotos</a><br/>
</p>

<h3>
<small><a href="23-FunctionKeys.htm">Previous</a> |
<a href="25-StatementRelationships.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Statement relationships
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Statement relationships
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm"><b>Statement relationships</b></a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Statement relationships<br/>
<small><a href="24-MiscStatements.htm">Previous</a> |
<a href="26-IORedirection.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax and description</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax and description
</h4>

<p>
In order of decreasing precedence:
</p>

<table>

<tr>
<th style="width: 180px">
Operator
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<pre><tt>(    )</tt></pre>
</td>
<td>
<p>
Grouping
</p>
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>&gt;    &gt;!   &gt;&amp;   &gt;&amp;!
&gt;&gt;   &gt;&gt;!  &gt;&gt;&amp;  &gt;&gt;&amp;!
&lt;    &lt;&lt;</tt></pre>
</td>
<td>
<p>
<a href="26-IORedirection.htm">I/O Redirection</a>
</p>
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>|    |&amp;</tt></pre>
</td>
<td>
<p>
Piping (stdout only or stdout + stderr) between concurrent
operations
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>&amp;</tt>
</td>
<td>
<p>
At the end of a statement, execute the statement as a background thread or process
</p>
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>&amp;&amp;   ||</tt></pre>
</td>
<td>
<p>
Conditional execution:  only run the second statement if the first succeeds (zero return code) or only if the first fails (non-zero return code)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>;</tt>
</td>
<td>
<p>
Serial execution
</p>
</td>
</tr>

</table>

<p>
The grammar is completely recursive, so statements of arbitrary complexity
can be freely nested, conditionally executed, piped or redirected.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="17-LanguageReference.htm">Basic statements</a><br/>
<a href="26-IORedirection.htm">I/O redirection</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="07-IORedirection.htm"><i>Tutorial:</i> I/O redirection and piping</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
</p>

<h3>
<small><a href="24-MiscStatements.htm">Previous</a> |
<a href="26-IORedirection.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		I/O redirection
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				I/O redirection
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm"><b>I/O redirection</b></a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
I/O redirection<br/>
<small><a href="25-StatementRelationships.htm">Previous</a> |
<a href="27-ExpressionOperators.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax and description</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax and description
</h4>

<table>

<tr>
<th style="width: 180px">
Operator
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<pre><tt>&gt;    &gt;!   &gt;&amp;   &gt;&amp;!</tt></pre>
</td>
<td>
<p>
Output to a file.  <tt>!</tt> allows an existing file to be
overwritten even if <tt>noclobber</tt> is set.  <tt>&amp;</tt> redirects both stdout and stderr.
</p>
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>&gt;&gt;   &gt;&gt;!  &gt;&gt;&amp;  &gt;&gt;&amp;!</tt></pre>
</td>
<td>
<p>
Append to a file
</p>
</td>
</tr>

<tr>
<td>
<tt>&lt;</tt>
</td>
<td>
<p>
Read stdin from a file
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>&lt;&lt; <var>string</var></tt>
</td>
<td>
<p>
Inline data: the text on the following lines, up to the line containing
only the specified <tt><var>string</var></tt> will be fed as stdin to the statement.
Command and variable substitution is normally done on the inline text.
</p>

<p>
In the special case where <tt><var>string</var></tt> contains any of
the <a href="36-Quoting.htm">quoting characters</a>, <tt>^</tt> <tt>'</tt>,
<tt>"</tt> or <tt>`</tt>, they're discarded without processing.  But both
the resulting <tt><var>string</var></tt> and the inline text are taken as literal text. 
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="07-IORedirection.htm"><i>Tutorial:</i> I/O redirection and piping</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
</p>

<h3>
<small><a href="25-StatementRelationships.htm">Previous</a> |
<a href="27-ExpressionOperators.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Expression operators
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Expression operators
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm"><b>Expression operators</b></a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Expression operators<br/>
<small><a href="26-IORedirection.htm">Previous</a> |
<a href="28-FileSystemTests.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<p>In order of decreasing precedence.
</p>

<table>

<tr>
<th style="width: 180px">
Operator
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<pre><tt>(   )</tt></pre>
</td>
<td>
Grouping or procedure call arguments
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>{   }</tt></pre>
</td>
<td>
Run the enclosed statement list and return 1 if it succeeds or 0 otherwise.
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>[   ]</tt></pre>
</td>
<td>
Array indexing.  (The first element is element 0.)
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>-A   -C   -D   -H
-R   -S   -d   -e
-f   -o   -w   -x
-z   -t   -s</tt></pre>
</td>
<td>
<p>
<a href="28-FileSystemTests.htm">File system tests</a>.  Each takes a single word which may contain wildcards as an operand.
</p>
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>++   --</tt></pre>
</td>
<td>
Prefix and postfix increment/decrement.  Right to left associativity.
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>~    -    !    +</tt></pre>
</td>
<td>
Bitwise, arithmetic and logical complements and unary plus.  Right to left associativity.
</td>
</tr>

<tr>
<td class="langref">
<tt>**</tt>
</td>
<td>
Exponentiation.  Right to left associativity.
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>*    /    %    //</tt></pre>
</td>
<td>
Multiplication, division, remainder and integer division
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>+    -</tt></pre>
</td>
<td>
Addition and subtraction
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>&lt;&lt;   &gt;&gt;</tt></pre>
</td>
<td>
Bit-shifting
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>&lt;    &lt;=   &gt;=   &gt;</tt></pre>
</td>
<td>
Relation testing operators
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>==   !=   =~   !~</tt></pre>
</td>
<td>
Equality and pattern-matching operators
</td>
</tr>

<tr>
<td class="langref">
<tt>&amp;</tt>
</td>
<td>
Bit And
</td>
</tr>

<tr>
<td class="langref">
<tt>^</tt>
</td>
<td>
Bit Xor
</td>
</tr>

<tr>
<td class="langref">
<tt>|</tt>
</td>
<td>
Bit Or
</td>
</tr>

<tr>
<td class="langref">
<tt>&amp;&amp;</tt>
</td>
<td>
Logical And
</td>
</tr>

<tr>
<td class="langref">
<tt>||</tt>
</td>
<td>
Logical Or
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>?    :</tt></pre>
</td>
<td>
Conditional selection.  Right to left associativity.
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>=    +=   -=   *=
/=   %=   //=  &gt;&gt;=
&lt;&lt;=  &amp;=   ^=   |=
**=</tt></pre>
</td>
<td>
Assignment operators
</td>
</tr>

</table>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Precedence and associativity is the same as C except for the addition of the new operators.  Except as noted, operators of equal precedence group left to right so, e.g., <tt>10/5*2</tt> is read as <tt>(10/5)*2</tt> = 4, not <tt>10/(5*2)</tt> = 1.
</p>

<p>
Expressions result in sensible types, considering both the types <var>and</var>
the values of the operands.  For example, <tt>10/2</tt> returns the integer
<tt>5</tt> but <tt>5/2</tt> produces the floating point value <tt>2.5</tt>.
Also, the integer <tt>1</tt>, the floating point value <tt>1.0</tt> and
the string <tt>"1"</tt> all compare equal.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="28-FileSystemTests.htm">File system tests</a><br/>
<a href="25-StatementRelationships.htm">Statement relationships</a><br/>
<a href="26-IORedirection.htm">I/O redirection</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="13-Expressions.htm#WordsVersusExpressions"><i>Tutorial:</i> Words versus expressions</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="07-IORedirection.htm"><i>Tutorial:</i> I/O redirection and piping</a><br/>
<a href="15-ProgrammingConstructs.htm"><i>Tutorial:</i> Programming constructs</a><br/>
</p>

<h3>
<small><a href="26-IORedirection.htm">Previous</a> |
<a href="28-FileSystemTests.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		File system tests
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				File system tests
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm"><b>File system tests</b></a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">


<h3>
File system tests<br/>
<small><a href="27-ExpressionOperators.htm">Previous</a> |
<a href="29-SpecialDevices.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<p>
The file system operators each take a single operand word.  This first set all return 1 (true) or 0 (false).
</p>

<table>

<tr>
<th style="width: 100px">
Operator
</th>
<th>
True if
</th>
</tr>

<tr>
<td class="langref">
<tt>-A</tt>
</td>
<td>
<p>
Archive bit set
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-C</tt>
</td>
<td>
<p>
File or directory is compressed
</p>
</td>
</tr>

<tr>
<td class="langref">
<pre><tt>-D   -d</tt></pre>
</td>
<td>
<p>
Directory
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-H</tt>
</td>
<td>
<p>
Hidden file or directory
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-R</tt>
</td>
<td>
<p>
Read-only file or directory
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-S</tt>
</td>
<td>
<p>
System file or directory
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-e</tt>
</td>
<td>
<p>
File or directory exists
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-f</tt>
</td>
<td>
<p>
Ordinary File
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-o</tt>
</td>
<td>
<p>
Ownership (Same as existence on a FAT file system)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-r</tt>
</td>
<td>
<p>
Readable (Same as ordinary file on a FAT file system)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-w</tt>
</td>
<td>
<p>
Writable (Not read-only and not a directory)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-x</tt>
</td>
<td>
<p>
Executable (Has a <tt>.csh</tt>, <tt>.exe</tt>, <tt>.com</tt>
or <tt>.cmd</tt> extension and, if it's an <tt>.exe</tt>
or a <tt>.com</tt> file, appears to be a valid binary executable.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-z</tt>
</td>
<td>
<p>
Zero-length file
</p>
</td>
</tr>

</table>

<p>
The <tt>-t</tt> and <tt>-s</tt> operators return timestamps and sizes.
</p>

<table>

<tr>
<th style="width: 100px">
Operator
</th>
<th>
Returns
</th>
</tr>

<tr>
<td class="langref">
<tt>-t</tt>
</td>
<td>
<p>
Timestamp in the 24-hour local time formatted as a character string of the form,
<tt><var>YYYY</var>-<var>MM</var>-<var>DD</var> <var>hh</var>:<var>mm</var>:<var>ss</var></tt>,
e.g., <tt>2012-11-25 17:35:26</tt>.  If the operand doesn't exist or doesn't have a timestamp
(as is the case for <tt>C:\</tt>), <tt>-t</tt> returns null; this is not an error.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>-s</tt>
</td>
<td>
<p>
Size in bytes if the operand exists and is a file, otherwise null. 
</p>
</td>
</tr>

</table>


<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The file system operators are all prefix operators.  Each takes a single operand, which
is <a href="13-Expressions.htm#WordsVersusExpressions">interpreted as a word</a>, not an
expression, and may involve <a href="31-Wildcarding.htm">wildcarding</a>.  If wildcarding
produces more than one match, the test is done on the first one.  For example:
</p>

<div class="codesample">if (-d $a) then
   echo $a is a directory
end
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="13-Expressions.htm#WordsVersusExpressions"><i>Tutorial:</i> Words versus expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
</p>

<h3>
<small><a href="27-ExpressionOperators.htm">Previous</a> |
<a href="29-SpecialDevices.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Special devices
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Special devices
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm"><b>Special devices</b></a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Special devices<br/>
<small><a href="28-FileSystemTests.htm">Previous</a> |
<a href="30-AnsiEscapeSequences.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<table>

<tr>
<th style="width: 150px">
Name
</th>
<th>
Use
</th>
</tr>

<tr>
<td class="langref">
<tt>\\.\a:</tt>
</td>
<td>
The diskette as a raw device.  (Not available on Windows 9x.)
</td>
</tr>

<tr>
<td class="langref">
<tt>\\.\tape0</tt>
</td>
<td>
The tape drive as a raw device.  (Not available on Windows 9x.)
</td>
</tr>

<tr>
<td class="langref">
<tt>aux</tt>
</td>
<td>
The auxiliary port.
</td>
</tr>

<tr>
<td class="langref">
<tt>con</tt>
</td>
<td valign ="top">
The console device.  This is the text window the shell is running in.  Reading from it reads the keyboard; writing to it writes to the screen.
</td>
</tr>

<tr>
<td class="langref">
<tt>conin$</tt>
</td>
<td valign ="top">
The Win32 console keyboard.  A read-only device.
</td>
</tr>

<tr>
<td class="langref">
<tt>conout$</tt>
</td>
<td valign ="top">
The Win32 console display.  A write-only device.
</td>
</tr>

<tr>
<td class="langref">
<tt>com1</tt><span style="font-size: 0.9em"> to </span><tt>com7</tt>
</td>
<td valign ="top">
The various async  communication ports you may have.  They can be read or written.
</td>
</tr>

<tr>
<td class="langref">
<tt>lpt1</tt><span style="font-size: 0.9em"> to </span><tt>lpt4</tt>
</td>
<td valign ="top">
The line printer ports.
</td>
</tr>

<tr>
<td class="langref">
<tt>nul</tt>
</td>
<td valign ="top">
The  null device.  Reads return end-of-file; writes are discarded.
</td>
</tr>

<tr>
<td class="langref">
<tt>prn</tt>
</td>
<td valign ="top">
The print spooler queue.
</td>
</tr>

</table>


<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Hamilton C shell recognizes the Windows special device names regardless of whether they are typed in upper or lower case and regardless of whether there is a trailing colon.  For example, <tt>COM1:</tt>,  <tt>COM1</tt> and <tt>com1</tt> all refer to the same device.  Not all devices will be installed on any particular machine.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="17-LanguageReference.htm">Basic statements</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="26-IORedirection.htm">I/O Redirection</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="07-IORedirection.htm"><i>Tutorial:</i> I/O redirection and piping</a><br/>
</p>

<h3>
<small><a href="28-FileSystemTests.htm">Previous</a> |
<a href="30-AnsiEscapeSequences.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		ANSI escape sequences
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				ANSI escape sequences
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm"><b>ANSI escape sequences</b></a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
ANSI escape sequences<br/>
<small><a href="29-SpecialDevices.htm">Previous</a> |
<a href="31-Wildcarding.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<p>
In this table, <kbd>Esc</kbd> refers to the 0x1B escape character.
</p>

<table>

<tr>
<th style="width: 150px">
Escape sequence
</th>

<th>
Meaning
</th>

</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>row</var><tt>; </tt><var>col</var><tt> H</tt>
</td>
<td>
<p>
Set cursor position, counting from (1, 1) in the upper left-hand corner.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>row</var><tt>; </tt><var>col</var><tt> f</tt>
</td>
<td>
<p>
Set cursor position, counting from (1, 1) in the upper left-hand corner.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>n</var><tt> A</tt>
</td>
<td>
<p>
Cursor up <tt><var>n</var></tt> rows.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>n</var><tt> B</tt>
</td>
<td>
<p>
Cursor down <tt><var>n</var></tt> rows.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>n</var><tt> C</tt>
</td>
<td>
<p>
Cursor forward <var>n</var> rows.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>n</var><tt> D</tt>
</td>
<td>
<p>
Cursor backward <tt><var>n</var></tt> rows.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ s</tt>
</td>
<td>
<p>
Save cursor position.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ u</tt>
</td>
<td>
<p>
Restore cursor position.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ 2 J</tt>
</td>
<td>
<p>
Erase display and move cursor to upper left-hand corner.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ K</tt>
</td>
<td>
<p>
Erase to end of line.
</p>
</td>
</tr>

<tr>
<td class="langref">
<kbd>Esc</kbd><tt> [ </tt><var>g</var><tt> m</tt>
</td>
<td>
<p>
Set graphics rendition (color, etc.).  More than one change can be specified by using semicolons between each <tt><var>g</var></tt> value:
</p>

<h5>
Basic attributes
</h5>

<table class="plain">
<tr>
<td style="width: 50px">
0
</td>
<td>
Normal
</td>
</tr>

<tr>
<td>
1
</td>
<td>
Bright
</td>
</tr>

<tr>
<td>
2
</td>
<td>
Dim
</td>
</tr>

<tr>
<td>
5
</td>
<td>
Bright background
</td>
</tr>

<tr>
<td>
7
</td>
<td>
Reverse video
</td>
</tr>

<tr>
<td>
8
</td>
<td>
Hidden
</td>
</tr>
</table>

<h5>
Foreground colors
</h5>

<table class="plain">
<tr>
<td style="width: 50px">
30
</td>
<td>
Black
</td>
</tr>

<tr>
<td>
31
</td>
<td>
Red
</td>
</tr>

<tr>
<td>
32
</td>
<td>
Green
</td>
</tr>

<tr>
<td>
33
</td>
<td>
Yellow
</td>
</tr>

<tr>
<td>
34
</td>
<td>
Blue
</td>
</tr>

<tr>
<td>
35
</td>
<td>
Magenta
</td>
</tr>

<tr>
<td>
36
</td>
<td>
Cyan
</td>
</tr>

<tr>
<td>
37
</td>
<td>
White
</td>
</tr>
</table>

<h5>
Background colors
</h5>

<table class="plain">
<tr>
<td style="width: 50px">
40
</td>
<td>
Black
</td>
</tr>

<tr>
<td>
41
</td>
<td>
Red
</td>
</tr>

<tr>
<td>
42
</td>
<td>
Green
</td>
</tr>

<tr>
<td>
43
</td>
<td>
Yellow
</td>
</tr>

<tr>
<td>
44
</td>
<td>
Blue
</td>
</tr>

<tr>
<td>
45
</td>
<td>
Magenta
</td>
</tr>

<tr>
<td>
46
</td>
<td>
Cyan
</td>
</tr>

<tr>
<td>
47
</td>
<td>
White
</td>
</tr>
</table>

</td>
</tr>
</table>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The C shell and all the utilities that come with it generate these ANSI escape sequences when writing to a file or pipe.  When writing to the console, they interpret these sequences.
</p>

<p>
The builtin <a href="49-BuiltinProcedures.htm#ansi"><tt>ansi()</tt></a> procedure can be used to generate the SGR color sequences without having to know the actual encoding, e.g., <tt>ansi("red")</tt>.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="36-Quoting.htm#EscapeCharacter">Escaping a single character</a><br/>
<a href="40-EnvironmentVariables.htm#COLORS"><tt>COLORS</tt> environment variable</a><br/>
<a href="49-BuiltinProcedures.htm#ansi"><tt>ansi()</tt> procedure</a><br/>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="04-Tutorial.htm#CustomizingTheScreenColors"><i>Tutorial:</i> Customizing the screen colors</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i> Procedures</a><br/>
</p>

<h3>
<small><a href="29-SpecialDevices.htm">Previous</a> |
<a href="31-Wildcarding.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Wildcarding
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Wildcarding
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm"><b>Wildcarding</b></a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">


<h3>
Wildcarding and pattern matching<br/>
<small><a href="30-AnsiEscapeSequences.htm">Previous</a> |
<a href="32-FilenameCompletion.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Syntax">Syntax</a><br/>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Syntax"></a>Syntax
</h4>

<table>

<tr>
<th style="width: 100px">
Characters
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<tt>?</tt>
</td>
<td>
<p>
Match any single character, including <tt>.</tt>
but not <tt>\</tt> or <tt>/</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>*</tt>
</td>
<td>
<p>
Match any number of characters, including <tt>.</tt>
but not <tt>\</tt> or <tt>/</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>[<var>a</var>-<var>z</var>]</tt>
</td>
<td>
<p>
An example range:  match any character <tt><var>a</var></tt> through <tt><var>z</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>[^<var>a</var>-<var>z</var>]</tt>
</td>
<td>
<p>
An example exclusion range: match any character not in the set
<tt><var>a</var></tt> through <tt><var>z</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>{<var>a</var>,<var>b</var>}<var>c</var></tt>
</td>
<td>
<p>
<i>Alternation:</i>  Generate both <tt><var>ac</var></tt> and <tt><var>bc</var></tt>, where <tt><var>a</var></tt>, <tt><var>b</var></tt> and <tt><var>c</var></tt> are themselves arbitrarily complex wildcard patterns.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>...</tt>
</td>
<td>
<p>
<i>Indefinite directory:</i>  Match any number of directory levels &ndash; zero
or more &ndash; whatever it takes to make the rest of the pattern match.
</p>
</td>
</tr>

</table>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Patterns are used both for traditional filename wildcarding on the command line, e.g.,
to pass a list of arguments to a command, and for examining strings with expressions.  Patterns
are nestable arbitrarily and a recursive comparison algorithm
is used to guarantee a sensible result no matter how complex the
pattern.  For example, <tt>*\[a-c]*.[ch]</tt> and <tt>...\{a,b*\...}\p*.c</tt>
both operate sensibly.
</p>

<p>
Even drive letters can be wildcarded, e.g.,
<tt>*:\Program*\Hamilton*</tt> works, though it can be very slow if
you have a some <tt>net use</tt> drives that are offline and you
haven&rsquo;t restricted your search with the
<a href="40-EnvironmentVariables.htm#DRIVEMASK"><tt>DRIVEMASK</tt></a> environment
variable.  If an application like the C shell tries to read from an
unavailable network drive, Windows will try to reconnect the
drive in order to perform the read.  Reconnecting with a
machine that&rsquo;s up and running is quick.  But if the machine
is offline, it takes several seconds for the network protocols
to time out and for Windows to report that.
</p>

<p>
Filename wildcards can be used <a href="13-Expressions.htm#WordsVersusExpressions">wherever
a word is expected</a> and will match any filename except <tt>.</tt> and <tt>..</tt> unless
it's marked &ldquo;hidden.&rdquo;  To allow wildcarding to match hidden files:

<div class="codesample  langref">set <a href="42-PerThreadVariables.htm#nonohidden">nonohidden</a> = 0    # Default: No hidden files
set nonohidden = 1    # Include hidden files</div>

To turn off wildcarding on the command line:

<div class="codesample  langref">set <a href="42-PerThreadVariables.htm#nowild">nowild</a> = 0        # Default:  Wildcarding enabled
set nowild = 1        # Turn off wildcarding</div>

To control what happens if a wildcard doesn't match anything:

<div class="codesample  langref">set <a href="42-PerThreadVariables.htm#nowild">nonomatch</a> = 0     # Default: Considered an error
set nonomatch = 1     # Pass it through to the application
set nonomatch = 2     # Simply discard the wildcard</div>
   
<a href="36-Quoting.htm">Quoting</a> the word prevents wildcarding.
Since filenames are not case sensitive, filename wildcarding isn't either.
</p>
<p>
A pattern can also be used  to examine a string in a
<a href="18-ConditionTesting.htm#switch"><tt>switch</tt></a>
statement or with the <tt>=~</tt> (pattern matches) and <tt>!~</tt>
(pattern fails) <a href="27-ExpressionOperators.htm">expression operators</a>.
In this context, the pattern must be inside <a href="36-Quoting.htm">quotes</a>,
since otherwise it would be parsed as an expression, with <tt>*</tt> being viewed
as the multiply operator, etc.  When examining a string with a pattern that uses
alternation, the pattern matches if any of the alternatives matches.  <i>When
matching strings, case does matter.</i>
</p>
<p>
When using a pattern to examine a string with <tt>=~</tt> or
<tt>!~</tt> or with a <tt>switch</tt>, the string being tested is
the left operand and the pattern is on the right.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="42-PerThreadVariables.htm#nonohidden">nonohidden variable</a><br/>
<a href="42-PerThreadVariables.htm#nonomatch">nonomatch variable</a><br/>
<a href="42-PerThreadVariables.htm#nowild">nowild variable</a><br/>
<a href="17-LanguageReference.htm">Basic statements</a><br/>
<a href="19-Iteration.htm">foreach statement</a><br/>
<a href="18-ConditionTesting.htm#switch">switch statement</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="28-FileSystemTests.htm">File system tests</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="32-FilenameCompletion.htm">Filename completion</a><br/>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
<a href="13-Expressions.htm#WordsVersusExpressions"><i>Tutorial:</i> Words versus expressions</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="12-Quoting.htm"><i>Tutorial:</i> Quoting</a><br/>
<a href="13-Expressions.htm#PatternMatching"><i>Tutorial:</i> Pattern matching expression operators</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i> Filename completion</a><br/>
</p>

<h3>
<small><a href="30-AnsiEscapeSequences.htm">Previous</a> |
<a href="32-FilenameCompletion.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Filename completion
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Filename completion
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm"><b>Filename completion</b></a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Filename completion<br/>
<small><a href="31-Wildcarding.htm">Previous</a> |
<a href="33-CommandLineEditing.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Filename completion lets you type just the first part of a filename and
have the shell fill in the rest.  There are three variations:  using the <kbd>Tab</kbd> key for walking one-by-one through the list of matches, <kbd>Ctrl</kbd>-<kbd>F</kbd> for basic filename completion and <kbd>Ctrl</kbd>-<kbd>D</kbd> to paste all the matches onto the command line.
</p>

<div id="keystrokes">
<p class="left">
<kbd>Tab</kbd>
</p>

<p>
<b>Next match.</b>  Move one-by-one through the list of matching filenames.
After the last, paste the original back in place, highlighting with the
<a href="40-EnvironmentVariables.htm#MATHCHFAIL"><tt>MATCHFAIL</tt></a> color,
then continue, with the next <kbd>Tab</kbd>, cycling
through the list again.
</p>

<p>
To type an ordinary tab character, use
<kbd>Ctrl</kbd>-<kbd>Tab</kbd>.  Alternately, if the C shell is started with the
<a href="Utilities/csh.htm"><tt>-T</tt></a> option, the <kbd>Tab</kbd> key generates a plain tab character and
<kbd>Ctrl</kbd>-<kbd>Tab</kbd> is the filename completion key.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Shift</kbd>-<kbd>Tab</kbd>
</p>

<p>
<b>Previous match.</b>  Same as the <kbd>Tab</kbd> key, but rotate backward through the list of matches.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>F</kbd>
</p>

<p>
<b>Filename completion.</b>  Appending the <tt>*</tt> <a href="31-Wildcarding.htm">wildcard</a>
character onto the end, use the previous word as a wildcard pattern.  If it matches a
single file, substitute it in with a space following.  If you <i>don't</i>
want a space following, use the <a href="Utilities/csh.htm"><tt>-N</tt></a> option when you start the C
shell.
</p>

<p>
If there were multiple matches, but they all had
some common front-part that fully &ldquo;used up&rdquo; the pattern,
substitute in just that common front-part and show it in the color
specified by the <a href="40-EnvironmentVariables.htm#DUPLICATES"><tt>DUPLICATES</tt></a>
variable (default is green).
</p>

<p>
If substitution wasn't possible, highlight the pattern
in the color specified by the <a href="40-EnvironmentVariables.htm#MATHCHFAIL"><tt>MATCHFAIL</tt></a>
variable (default is bright red).  Any highlighting color is
turned off when you press the next keystroke.
</p>
</div>

<div id="keystrokes" class="last">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>D</kbd>
</p>

<p>
<b>Duplicate completions.</b>  Same  wildcarding, but if there are multiple
matches, show them all with a space following.  If you
<i>don't</i> want a space following, use the<br/>
<a href="Utilities/csh.htm"><tt>-N</tt></a> option when
you start the C shell.  If there were no matches, highlight the
pattern in the color specified by the
<a href="40-EnvironmentVariables.htm#MATHCHFAIL"><tt>MATCHFAIL</tt></a>
variable; default is bright red.
</p>
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="42-PerThreadVariables.htm#nonohidden">nonohidden variable</a><br/>
<a href="Utilities/csh.htm">Hamilton C shell command line options</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i> Filename completion</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
</p>

<h3>
<small><a href="31-Wildcarding.htm">Previous</a> |
<a href="33-CommandLineEditing.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Command line editing
	</title>
	
	<script type="text/javascript" src="Arrows.js"></script>
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Command line editing
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm"><b>Command line editing</b></a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Command line editing<br/>
<small><a href="32-FilenameCompletion.htm">Previous</a> |
<a href="34-HistoryRecall.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
If you don't have an <kbd>Alt</kbd> key, use <kbd>Ctrl</kbd>-<kbd>Shift</kbd> instead.
</p>

<div id="keystrokes">
<p class="left">
<kbd>Enter</kbd>
</p>

<p>
Accept the command as typed.  Move to the end (if not there already) and
carriage return to a new line.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Home</kbd>
</p>

<p>
Beginning of command line.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>End</kbd>
</p>

<p>
End of command line.
</p>
</div>

<div id="keystrokes">
<p class="left">
<script type="text/javascript">
	Arrows.UpArrow( );
</script>
</p>

<p>
Up one command in the history list.  Each time it's pressed, it
displays the preceding entry in the history list.  Any <tt>!</tt>
or <tt>%</tt> history references in the original text will have
been fixed up unless it was the immediately preceding command
and it had one of these references that failed.  If already at the
first entry, the command line is highlighted in bright red.
</p>
</div>

<div id="keystrokes">
<p class="left">
<script type="text/javascript">
	Arrows.DownArrow( );
</script></p>

<p>
Down one command line in the history list.  If already at the latest
entry, the command line is highlighted in bright red.
</p>
</div>

<div id="keystrokes">
<p class="left">
<script type="text/javascript">
	Arrows.LeftArrow( );
</script></p>

<p>
One character left.
</p>
</div>

<div id="keystrokes">
<p class="left">
<script type="text/javascript">
	Arrows.RightArrow( );
</script></p>

<p>
One character right.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<script type="text/javascript">
	Arrows.UpArrow( );
</script>
</p>

<p>
Up one row on the screen if the command is long enough that it runs
over a row.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<script type="text/javascript">
	Arrows.DownArrow( );
</script>
</p>

<p>
Down one row on the screen.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<script type="text/javascript">
	Arrows.LeftArrow( );
</script>
</p>

<p>
Backup word.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<script type="text/javascript">
	Arrows.RightArrow( );
</script>
</p>

<p>
Forward word.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Backspace</kbd>
</p>

<p>
Delete preceding word.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<kbd>Home</kbd>
</p>

<p>
Delete all preceding characters on the command line.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<kbd>End</kbd>
</p>

<p>
Delete all following characters.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<script type="text/javascript">
	Arrows.UpArrow( );
</script>
</p>

<p>
Delete up one row on the screen if the command runs over a row.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<script type="text/javascript">
	Arrows.DownArrow( );
</script></p>

<p>
Delete down one row.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<script type="text/javascript">
	Arrows.LeftArrow( );
</script>
</p>

<p>
Delete preceding word.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<script type="text/javascript">
	Arrows.RightArrow( );
</script>
</p>

<p>
Delete next word.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Insert</kbd>
</p>

<p>
Toggle insert/overstrike mode.  When inserting, the cursor is
slightly thicker.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Insert</kbd>
</p>

<p>
Insert the next word from the last section of deleted text.  When
it reaches the end of the deleted text, it starts over.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Alt</kbd>-<kbd>Insert</kbd>
</p>

<p>
Insert all the rest of the previously deleted text.
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Page Up</kbd>
</p>

<p>
Backup to one past the last history reference.  (Repeatedly typing
<kbd>Page Up</kbd>, then <kbd>Enter</kbd> is a convenient way of picking up a whole
series of commands from history.)
</p>
</div>

<div id="keystrokes">
<p class="left">
<kbd>Page Down</kbd>
</p>

<p>
Forward to the newest entry in the history list.
</p>
</div>

<div id="keystrokes" class="last">
<p class="left">
<kbd>Esc</kbd>
</p>

<p>
Clear the command line.
</p>
</div>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="41-ProcessWideVariables.htm#histchars">histchars variable</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i> Filename completion</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
</p>

<h3>
<small><a href="32-FilenameCompletion.htm">Previous</a> |
<a href="34-HistoryRecall.htm">Next</a></small>
</h3>		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		History recall
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				History recall
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm"><b>History recall</b></a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
History recall<br/>
<small><a href="33-CommandLineEditing.htm">Previous</a> |
<a href="35-CommandCompletion.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
History recall allows a previous statement to be quickly recalled and
re-executed.  It's a very fast shorthand, especially in the
edit/compile/debug loop or to fix a typo.  For convenience, <tt>!</tt>
is taken as an ordinary character if followed by white space,
<tt>=</tt>, <tt>~</tt> or <tt>(</tt>.
</p>
<p>
If you want, you can choose different characters to introduce history
references by changing the <a href="41-ProcessWideVariables.htm#histchars">
<tt>histchars</tt></a> variable.
</p>


<table>

<tr>
<th style="width: 120px">
Command
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<tt>!!</tt>
</td>
<td>
Last command
</td>
</tr>

<tr>
<td class="langref">
<tt>!^</tt>
</td>
<td>
<p>
First argument word of last command
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>!$</tt>
</td>
<td>
<p>
Last word of last command
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>!*</tt>
</td>
<td>
<p>
All arguments of last command
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>!<var>n</var></tt>
</td>
<td>
<p>
Command <tt><var>n</var></tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>!-<var>n</var></tt>
</td>
<td>
<p>
<tt><var>n</var></tt>th command from the last, counting the immediately
preceding command as <tt>!-0</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>!<var>str</var></tt>
</td>
<td>
<p>
Last command starting with <tt><var>str</var></tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>!?<var>str</var>?</tt>
</td>
<td>
<p>
Last command containing <tt><var>str</var></tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>%<var>str1</var>%<var>str2</var>%</tt>
</td>
<td>
<p>
Substitute <tt><var>str2</var></tt> for <tt><var>str1</var></tt> in last command. Recognized
only at the beginning of the command line.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="41-ProcessWideVariables.htm#histchars">histchars variable</a><br/>
<a href="35-CommandCompletion.htm">Command completion</a><br/>
<a href="32-FilenameCompletion.htm">Filename completion</a><br/>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i> Filename completion</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
</p>

<h3>
<small><a href="33-CommandLineEditing.htm">Previous</a> |
<a href="35-CommandCompletion.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Command completion
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Command completion
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm"><b>Command completion</b></a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Command completion<br/>
<small><a href="34-HistoryRecall.htm">Previous</a> |
<a href="36-Quoting.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Command completion lets you type just part of a previous
command and have the shell fill in the rest.  As with filename
completion, if no match is found, color highlighting as defined
by the <a href="40-EnvironmentVariables.htm#MATCHFAIL"><tt>MATCHFAIL</tt></a>
variable (default is bright red) will
be used.  Consecutive depressions cause the search to continue
on back through the history list.
</p>

<div id="keystrokes">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Enter</kbd>
</p>

<p>
Find the previous command that started with the characters of the preceding word.
</p>
</div>

<div id="keystrokes" class="last">
<p class="left">
<kbd>Ctrl</kbd>-<kbd>Shift</kbd>-<kbd>Enter</kbd>
</p>

<p>
Find the previous command that contained the characters of the preceding word anywhere on the line.
</p>
</div>

<p>
Repeatedly pressing these keys cycles up through all the matching commands you&rsquo;ve previously typed.  Command completion uses the <a href="08-History.htm">history</a> mechanism to recall commands you&rsquo;ve previously typed.</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="40-EnvironmentVariables.htm#MATCHFAIL">MATCHFAIL variable</a><br/>
<a href="32-FilenameCompletion.htm">Filename completion</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
<a href="04.2-FilenameCompletion.htm"><i>Tutorial:</i> Filename completion</a><br/>
</p>

<h3>
<small><a href="34-HistoryRecall.htm">Previous</a> |
<a href="36-Quoting.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Quoting
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Quoting
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm"><b>Quoting</b></a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Quoting<br/>
<small><a href="35-CommandCompletion.htm">Previous</a> |
<a href="37-VariableSubstitution.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<table>

<tr>
<th style="width: 180px">
String
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<a name="SingleQuotes"></a><tt>' <var>string</var> '</tt>
</td>
<td>
<p>
<b>Strong quote.</b>  Literal character string.  Only escape characters and <a href="34-HistoryRecall.htm">history substitutions</a> are recognized.  Embedded blanks, <a href="31-Wildcarding.htm">wildcard</a> characters, double quotes, backquotes and <a href="37-VariableSubstitution.htm">dollar signs</a> are treated as ordinary characters.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="DoubleQuotes"></a><tt>" <var>string</var> "</tt>
</td>
<td>
<p>
<b>Weak quote.</b> Embedded blanks, <a href="31-Wildcarding.htm">wildcard</a> characters and single quotes are treated as ordinary characters.  <a href="34-HistoryRecall.htm">History</a>, command and <a href="37-VariableSubstitution.htm">variable substitutions</a> are still done.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="CommandSubstitution"></a><tt>` <var>statement_list</var> `</tt>
</td>
<td>
<p>
<b>Command substitution.</b>  Evaluate the string as a separate command and substitute its output back onto the command line.  Newlines are turned into spaces and ANSI  escape sequences (for highlighting, etc.) are filtered out.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="LineAtATimeCommandSubstitution"></a><tt>`` <var>statement_list</var> ``</tt>
</td>
<td>
<p>
<b>Line-at-a-time command substitution.</b>  Whole lines of output from the enclosed statements are parsed as words, even if they have embedded spaces or other special characters.  Very useful for dealing with Windows filenames that have spaces.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="EscapeCharacter"></a><tt>^<var>c</var></tt>
</td>
<td>
<p class="multi">
<b>Escape just the next character.</b>  Use to remove any special meaning from the next character, to specify a character by its binary value or to specify one following non-printable characters.  If the NewLine character at the end of a line is quoted this way, it&rsquo;s treated as ordinary white space.
</p>

<p>
The default escape character is the circumflex <kbd>^</kbd>, Windows-style.  You can set it to be <kbd>\</kbd>, Unix-style, or any other character of your choice by changing the <a href="41-ProcessWideVariables.htm#escapesym"><tt>escapesym</tt></a> variable.
</p>

<h5>
Escape sequences
</h5>

<table class="plain">

<tr>
<td style="width: 50px"  class="langref">
<tt>^a</tt>
</td>
<td>
Audible alert (bell)
</td>
</tr>

<tr>
<td class="langref">
<tt>^b</tt>
</td>
<td>
Backspace
</td>
</tr>

<tr>
<td class="langref">
<tt>^f</tt>
</td>
<td>
Form Feed
</td>
</tr>

<tr>
<td class="langref">
<tt>^n</tt>
</td>
<td>
New Line
</td>
</tr>

<tr>
<td class="langref">
<tt>^r</tt>
</td>
<td>
Carriage Return
</td>
</tr>

<tr>
<td class="langref">
<tt>^t</tt>
</td>
<td>
Tab
</td>
</tr>

<tr>
<td class="langref">
<tt>^v</tt>
</td>
<td>
Vertical Tab
</td>
</tr>

<tr>
<td class="langref">
<tt>^^</tt>
</td>
<td>
Single escapesym character
</td>
</tr>

<tr>
<td class="langref">
<tt>^<var>octal</var></tt>
</td>
<td>
The binary character value as a 3-digit octal number.
</td>
</tr>

<tr>
<td class="langref">
<tt>^x<var>hex</var></tt>
</td>
<td>
The binary character value as a 2-digit hexadecimal number.
</td>
</tr>
</table>

</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="41-ProcessWideVariables.htm#escapesym">escapesym variable</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitutions</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="12-Quoting.htm"><i>Tutorial:</i> Quoting</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
</p>

<h3>
<small><a href="35-CommandCompletion.htm">Previous</a> |
<a href="37-VariableSubstitution.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Variable substitution
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Variable substitution
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm"><b>Variable substitution</b></a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Variable substitution<br/>
<small><a href="36-Quoting.htm">Previous</a> |
<a href="38-SubstitutionModifiers.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Variable substitution is typically used to pass the value of a variable as an argument to a command.  For example:  <tt>echo $message</tt>
</p>

<p>
The <tt>${<var>...</var>}</tt> variations are used to isolate the variable substitution from whatever text (including any colons) may follow.
</p>


<table>

<tr>
<th style="width: 150px">
Reference
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<tt>$<var>var</var></tt>
</td>
<td>
<p>
Value of variable <tt><var>var</var></tt>
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>${<var>var</var>}</tt>
</td>
<td>
<p>
Same as <tt>$<var>var</var></tt> except separated from anything following.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$<var>var</var>[ <var>expr</var> ]</tt>
</td>
<td>
<p>
Value of <tt><var>var</var></tt>, indexed by an arbitrarily complex expression.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>${<var>var</var>[ <var>expr</var> ]}</tt>
</td>
<td>
<p>
Same as <tt>$<var>var</var>[<var>expr</var>]</tt> except separated from anything following.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$#<var>var</var></tt>
</td>
<td>
<p>
Number of words in <tt><var>var</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>${#<var>var</var>}</tt>
</td>
<td>
<p>
Same as <tt>$#<var>var</var></tt> except isolated from anything following.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$?<var>var</var></tt>
</td>
<td>
<p>
1 if <tt><var>var</var></tt> exists; 0 otherwise.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>${?<var>var</var>}</tt>
</td>
<td>
<p>
Same as <tt>$?<var>var</var></tt> except isolated from anything following.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$<var>proc</var>( <var>arglist</var> )</tt>
</td>
<td>
<p>
Procedure reference, used as a variable substitution.  The arguments are expressions, separated by commas.  Any value returned by the procedure will be substituted in place.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$&lt;</tt>
</td>
<td>
<p>
Pseudo-variable result of reading one line from stdin each time it&rsquo;s evaluated.  Same as <tt>$getline</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$*</tt>
</td>
<td>
<p>
Same as <tt>$argv</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">	
<tt>$0</tt><span style="font-size:0.9em"> through </span><tt>$9</tt>
</td>
<td>
<p>
Same as <tt>$argv[0]</tt> through <tt>$argv[9]</tt>
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="22-Variables.htm">@, calc, set, setenv and local</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="41-ProcessWideVariables.htm">Predefined shared variables</a><br/>
<a href="42-PerThreadVariables.htm">Predefined inherited variables</a><br/>
<a href="43-PerThreadVariables.htm">Predefined initialized variables</a><br/>
<a href="44-VariablesSortedByName.htm">Combined list of predefined variables</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
</p>

<h3>
<small><a href="36-Quoting.htm">Previous</a> |
<a href="38-SubstitutionModifiers.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Substitution modifiers
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Substitution modifiers
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm"><b>Substitution modifers</b></a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Substitution modifiers<br/>
<small><a href="37-VariableSubstitution.htm">Previous</a> |
<a href="39-PathnameEditing.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Substitution modifiers can be applied to any <a href="36-Quoting.htm#CommandSubstitution">command</a>,
<a href="37-VariableSubstitution.htm">variable</a> or <a href="34-HistoryRecall.htm">history</a>
substitution.  Any number in a row can be applied.

</p>

<table>

<tr>
<th style="width: 120px">
Operator
</th>
<th>
Meaning
</th>
</tr>

<tr>
<td class="langref">
<tt>:<var>n</var></tt>
</td>
<td>
<p>
<tt><var>n</var></tt>th word
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:#</tt>
</td>
<td>
<p>
Count the number of words
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:^</tt>
</td>
<td>
<p>
Word number 1, counting from 0
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:$</tt>
</td>
<td>
<p>
Last word
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:%</tt>
</td>
<td>
<p>
Word matched by a <tt>!?<var>str</var>?</tt> history search
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:<var>n</var>-<var>m</var></tt>
</td>
<td>
<p>
<tt><var>n</var></tt>th through <tt><var>m</var></tt>th words
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:-<var>n</var></tt>
</td>
<td>
<p>
0 through <tt><var>n</var></tt>th words
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:<var>n</var>-</tt>
</td>
<td>
<p>
<tt><var>n</var></tt>th through next-to-last words
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:<var>n</var>*</tt>
</td>
<td>
<p>
<tt><var>n</var></tt>th through last word
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:*</tt>
</td>
<td>
<p>
1 through last word
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:q</tt>
</td>
<td>
<p>
Single-quote each word
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:s/<var>str1</var>/<var>str2</var>/</tt>
</td>
<td>
<p>
Substitute <tt><var>str2</var></tt> for <tt><var>str1</var></tt>
and then reparse into words.  Match failures are considered to
be errors unless <tt>ignoreerrors == 2</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:S/<var>str1</var>/<var>str2</var>/</tt>
</td>
<td>
<p>
Substitute <tt><var>str2</var></tt> for <tt><var>str1</var></tt>
but leave it as a single string.  Also, failure to match is not
considered an error.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:&amp;</tt>
</td>
<td>
<p>
Repeat last substitution
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:g</tt>
</td>
<td>
<p>
Global editing:  as a prefix character to any of the other editing operators,
it means apply the edit operation everywhere it matches, not just
the first occurrence.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:x</tt>
</td>
<td>
<p>
Treat each word as a string, break it up into words, then single-quote
each word.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:p</tt>
</td>
<td>
<p>
Print the substitution but don't execute the statement.  (Ignored except
in history substitutions.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:h&nbsp;&nbsp;:r&nbsp;&nbsp;:t<br/>
:e&nbsp;&nbsp;:f&nbsp;&nbsp;:m<br/>
:M&nbsp;&nbsp;:A&nbsp;&nbsp;:L</tt>
</td>
<td>
<p>
<a href="39-PathnameEditing.htm">Pathname editing</a> operators:  head, root, tail, extension, fullpath, mixedpath, fullmixedpath, shortname and longname.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="39-PathnameEditing.htm">Pathname editing</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitutions</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="36-Quoting.htm#CommandSubstitution">Command substitution</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
<a href="07-IORedirection.htm#CommandSubstitution"><i>Tutorial:</i> Command substitution</a><br/>
</p>

<h3>
<small><a href="37-VariableSubstitution.htm">Previous</a> |
<a href="39-PathnameEditing.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Pathname editing
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Pathname editing
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm"><b>Pathname editing</b></a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Pathname editing on x\y.z<br/>
<small><a href="38-SubstitutionModifiers.htm">Previous</a> |
<a href="40-EnvironmentVariables.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Pathname editing can be applied to any <a href="36-Quoting.htm#CommandSubstitution">command</a>,
<a href="37-VariableSubstitution.htm">variable</a> or <a href="34-HistoryRecall.htm">history</a>
substitution.  Any number in a row can be applied.

</p>

<table>

<tr>
<th style="padding-right: 7px">
Operator
</th>
<th>
Name
</th>
<th>
Description
</th>
<th>
Result
</th>

</tr>

<tr>
<td class="langref">
<tt>:h</tt>
</td>
<td>
head
</td>
<td>
<p>
Directory containing
</p>
</td>
<td>
<p>
<tt>x</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:r</tt>
</td>
<td>
root
</td>
<td>
<p>
Path without <tt>.ext</tt>
</p>
</td>
<td>
<p>
<tt>x\y</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:t</tt>
</td>
<td>
tail
</td>
<td>
<p>
Simple filename
</p>
</td>
<td>
<p>
<tt>y.z</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:b</tt>
</td>
<td>
base
</td>
<td>
<p>
Filename without <tt>.ext</tt>
</p>
</td>
<td>
<p>
<tt>y</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:e</tt>
</td>
<td>
extension
</td>
<td>
<p>
<tt>.ext</tt> without the <tt>.</tt>
</p>
</td>
<td>
<p>
<tt>z</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:f</tt>
</td>
<td>
fullpath
</td>
<td>
<p>
Fully-qualified name
</p>
</td>
<td>
<p>
<tt>c:\Users\Public\x\y.z</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:m</tt>
</td>
<td>
mixedpath
</td>
<td>
<p>
Mixed-case pathname
</p>
</td>
<td>
<p>
<tt>x\Y.c</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:M</tt>
</td>
<td style="padding-right: 7px">
fullmixedpath
</td>
<td style="padding-right: 7px">
<p>
Mixed-case pathname
</p>
</td>
<td>
<p>
<tt>c:\Users\Public\x\Y.z</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:A</tt>
</td>
<td>
shortname
</td>
<td>
<p>
Short 8.3 filename
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>:L</tt>
</td>
<td>
longname
</td>
<td>
<p>
Long filename
</p>
</td>
</tr>

</table>

<p>
The shortname function depends on support from the
filesystem.  Long filenames read over the network from an HPFS
partition do not have shortnames, for example.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitutions</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="36-Quoting.htm#CommandSubstitution">Command substitution</a><br/>
<a href="11-Editing.htm#PathnameEditing"><i>Tutorial:</i> Pathname editing</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
<a href="07-IORedirection.htm#CommandSubstitution"><i>Tutorial:</i> Command substitution</a><br/>
</p>

<h3>
<small><a href="38-SubstitutionModifiers.htm">Previous</a> |
<a href="40-EnvironmentVariables.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Environment variables
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Environment variables
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm"><b>Environment variables</b></a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Environment variables<br/>
<small><a href="39-PathnameEditing.htm">Previous</a> |
<a href="41-ProcessWideVariables.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#PredefindedEnvironmentVariables">Predefined environment variables</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Environmental variables are passed to any child processes or windows you create by invoking an external utility or application.
When Hamilton C shell starts up it looks for the ones shown here to be defined in the environment it inherits.
</p>

<p>
These variables are special:  If they&rsquo;re not already defined in the environment the shell inherits when it starts, it creates them.
</p>

<div class="codesample">COLORS       COMSPEC      CSHTITLE     DUPLICATES   HIGHLIGHT    HOME
MATCHFAIL    PATH         PROMPT1      PROMPT2      SHELL
</div> 

<p>
Environmental variable names are not case-sensitive.  <tt>Path</tt> and <tt>PATH</tt> refer to the same thing.
</p>

<h4>
<a name="PredefindedEnvironmentVariables"></a>Predefined environment variables
</h4>

<table>

<tr>
<th>
Name
</th>
<th style="width: 90px">
Default
</th>
<th>
Use
</th>
</tr>

<tr>
<td class="langref">
<a name="ADDITIONS"></a><tt>ADDITIONS</tt>
</td>
<td class="langref">
<tt>Bright white on green</tt>
</td>
<td>
<p>
Lines added found by <a href="Utilities/diff.htm"><tt>diff</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ASCIICONVERT"></a><tt>ASCIICONVERT</tt>
</td>
<td class="langref">
<tt>Bright yellow</tt>
</td>
<td>
<p>
ASCII files which received line end conversions by <a href="Utilities/tar.htm"><tt>tar</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="CDPATH "></a><tt>CDPATH</tt>
</td>
<td>
</td>
<td>
<p>
List of directories to search for the subdirectory specified as the new current directory.  Entries are separated by <tt>;</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="COLORS"></a><tt>COLORS</tt>
</td>
<td>
null
</td>
<td>
<p>
Normal screen colors.  If it's not set, the C shell inherits the color settings of the console window when it starts.
</p>

<p style="margin-top:12px">
The colors available in the C shell are <tt>black</tt>, <tt>red</tt>, <tt>green</tt>, <tt>yellow</tt>,
<tt>blue</tt>, <tt>magenta</tt> (or <tt>blue red</tt>), <tt>cyan</tt> (or <tt>blue green</tt>) and
<tt>white</tt>.  Foreground colors may also be <tt>bright</tt>, <tt>dim</tt>, <tt>blink</tt> or
<tt>reverse</tt>.
</p>

<p style="margin-top:12px">
The optional keyword <tt>on</tt> introduces background colors.  All the names of the
colors along with the keywords <tt>bright</tt>, <tt>dim</tt>, <tt>blink</tt>, <tt>reverse</tt> and
<tt>on</tt> may be in upper, lower or mixed case.
</p>

<p style="margin-top:12px">
<tt>Blink</tt> causes true blinking only full-screen; in a text window, it
just makes the background brighter.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="COMSPEC"></a><tt>COMSPEC</tt>
</td>
<td>
</td>
<td>
<p>
Usually, this is the pathname of <tt>cmd.exe</tt>.  If you set it to point to the C shell, e.g., so other programs will
invoke the C shell rather than <tt>cmd.exe</tt>, the C shell will try to look through the search path for <tt>cmd.exe</tt>
if it needs to run a <tt>.cmd</tt> file.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="CSHOPTIONS"></a><tt>CSHOPTIONS</tt>
</td>
<td>
</td>
<td>
<p>
Default set of command line options to be pasted ahead of any other command line options passed to <a href="Utilities/csh.htm"><tt>csh.exe</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="CSHTITLE"></a><tt>CSHTITLE</tt>
</td>
<td>
</td>
<td>
<p>
Template for the title bar.  Setting it to a null string causes the title bar inherited at startup to be displayed.
Unsetting it causes &ldquo;Hamilton C shell&rdquo; to be displayed.  Other values will be evaluated for command and
variable substitutions the same way the prompt variables are interpreted.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="DELETIONS"></a><tt>DELETIONS</tt>
</td>
<td class="langref">
<tt>Bright white on red</tt>
</td>
<td>
<p>
Lines deleted found by <a href="Utilities/diff.htm"><tt>diff</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="DIRECTORIES"></a><tt>DIRECTORIES</tt>
</td>
<td class="langref">
<tt>Bright</tt>
</td>
<td>
<p>
Directories listed by <a href="Utilities/ls.htm"><tt>ls</tt></a>. 
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="DRIVEMASK"></a><tt>DRIVEMASK</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/du.htm"><tt>du</tt></a>, <a href="Utilities/pwd.htm"><tt>pwd</tt></a> and
<a href="Utilities/vol.htm"><tt>vol</tt></a> and in drive wildcarding, e.g., <tt>*:foo.*</tt>, to limit the
default list of drives it will report on.  Written as a list of alphabetic characters representing the drives
you want listed; ranges are allowed, e.g., <tt>c-e</tt>.  If you don&rsquo;t define this variable,  all
drives beginning with <tt>C:</tt> are normally reported.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="DUPLICATES"></a><tt>DUPLICATES</tt>
</td>
<td>
Green
</td>
<td>
<p>
When filename completion matches more than one name.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ESCAPESYM"></a><a name="ESCAPESYM"></a><tt>ESCAPESYM</tt>
</td>
<td>
<tt>^</tt>
</td>
<td>
<p>
Character to be interpreted as a literal escape character.  Placed in the environment and passed to child processes
only if it is not the default circumflex.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="FOREIGNFILES"></a><tt>FOREIGNFILES</tt>
</td>
<td class="langref">
<tt>Bright red</tt>
</td>
<td>
<p>
Used by <a href="Utilities/tar.htm"><tt>tar</tt></a> when listing filetypes in an archive that have no counterparts on Windows.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="HIGHLIGHT"></a><tt>HIGHLIGHT</tt>
</td>
<td class="langref">
<tt>Bright</tt>
</td>
<td>
Current disk or directory.
</td>
</tr>

<tr>
<td class="langref">
<a name="HOME"></a><tt>HOME</tt>
</td>
<td>
</td>
<td>
<p>
Home directory.  Default is the initial current directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="LAYER"></a><tt>LAYER</tt>
</td>
<td>
</td>
<td>
<p>
Counts the nesting level of this invocation of the C shell for use the in the prompts defined in the default
<a href="47-StartupCsh.htm#Default"><tt>Startup.csh</tt></a> file. 
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="LSOPTIONS"></a><tt>LSOPTIONS</tt>
</td>
<td>
</td>
<td>
<p>
Default set of command line options to be pasted ahead of any other command line options passed to
<a href="Utilities/ls.htm"><tt>ls</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MATCHFAIL"></a><tt>MATCHFAIL</tt>
</td>
<td class="langref">
<tt>Bright red</tt>
</td>
<td>
<p>
When filename or command completion doesn&rsquo;t match anything.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MIXEDCASEDRIVES"></a><tt>MIXEDCASEDRIVES</tt>
</td>
<td>
</td>
<td>
<p>
List of drives and UNC names for which <a href="Utilities/ls.htm"><tt>ls</tt></a>, <a href="Utilities/pwd.htm"><tt>pwd</tt></a>,
wildcarding and the <a href="49-BuiltinProcedures.htm#fullpath"><tt>fullpath</tt></a> and current directory functions should
report filenames in mixed case rather than all lower case.  Default is all drives are considered mixed case.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MOREEOF"></a><tt>MOREEOF</tt>
</td>
<td class="langref">
<tt>Green</tt>
</td>
<td>
<p>
End or top of file in <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MOREERROR"></a><tt>MOREERROR</tt>
</td>
<td class="langref">
<tt>Bright white on red</tt>
</td>
<td>
<p>
Unrecognizable command to <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MOREFILLIN"></a><tt>MOREFILLIN</tt>
</td>
<td class="langref">
<tt>Black</tt>
</td>
<td>
<p>
User response to <a href="Utilities/more.htm"><tt>more</tt></a> prompt.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MOREPROMPT"></a><tt>MOREPROMPT</tt>
</td>
<td class="langref">
<tt>Red on white</tt>
</td>
<td>
<p>
Prompt line in <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="MORETOPMEM"></a><tt>MORETOPMEM</tt>
</td>
<td class="langref">
<tt>Bright yellow</tt>
</td>
<td>
<p>
Top of Memory message from <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="PATH"></a><tt>PATH</tt>
</td>
<td>
</td>
<td>
<p>
Search path for executable files as one long string.  Each directory on the path is separated from the next by a <tt>;</tt>.
See also the shell <a href="41-ProcessWideVariables.htm#path"><tt>path</tt></a> variable, which has the list of directories
parsed into separate words.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="PROMPT1"></a><tt>PROMPT1</tt>
</td>
<td class="langref">
<tt>$@ $CDISK%</tt>
</td>
<td>
<p>
Primary command prompt template.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="PROMPT2"></a><tt>PROMPT2</tt>
</td>
<td class="langref">
<tt>$@ $CDISK?</tt>
</td>
<td>
<p>
Continuation line prompt template.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="RADIX"></a><tt>RADIX</tt>
</td>
<td>
16
</td>
<td>
<p>
Default radix used by <a href="Utilities/more.htm"><tt>more</tt></a> and other utilities when displaying binary data.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="READONLYDIRS"></a><tt>READONLYDIRS</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> and other utilities for directories marked read-only.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="READONLYFILES"></a><tt>READONLYFILES</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> and other utilities for files marked read-only.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="SHELL"></a><tt>SHELL</tt>
</td>
<td>
</td>
<td>
<p>
Always set to the pathname of the Hamilton C shell <a href="Utilities/csh.htm"><tt>csh.exe</tt></a> file.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="SWITCHCHARS"></a><tt>SWITCHCHARS</tt>
</td>
<td class="langref">
<tt>-/</tt>
</td>
<td>
<p>
Characters that can be used as option introducers for the shell and utilities.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="SYSTEMDIRS"></a><tt>SYSTEMDIRS</tt>
</td>
<td class="langref">
<tt>Bright green</tt>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> for directories with the System bit on.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="SYSTEMFILES"></a><tt>SYSTEMFILES</tt>
</td>
<td class="langref">
<tt>Green</tt>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> for files with the System bit on.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="TABS"></a><tt>TABS</tt>
</td>
<td>
8
</td>
<td>
<p>
Used by <a href="Utilities/more.htm"><tt>more</tt></a>, <a href="Utilities/head.htm"><tt>head</tt></a>,
<a href="Utilities/tail.htm"><tt>tail</tt></a> and <a href="Utilities/tabs.htm"><tt>tabs</tt></a> to tell them
how many character positions there are between tab stops.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="TAPE"></a><tt>TAPE</tt>
</td>
<td class="langref">
<tt>\\.\tape0</tt>
</td>
<td>
<p>
Used by <a href="Utilities/mt.htm"><tt>mt</tt></a> to specify the pathname of the default tape drive.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="TARASCII"></a><tt>TARASCII</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/tar.htm"><tt>tar</tt></a> to identify files, using a list of wildcards, that should
be considered as ASCII, regardless of content.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="TARBINARY"></a><tt>TARBINARY</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/tar.htm"><tt>tar</tt></a> to identify files, using a list of wildcards, that should
be considered as binary, regardless of content.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">@, calc, set, setenv and local</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="41-ProcessWideVariables.htm">Predefined shared variables</a><br/>
<a href="42-PerThreadVariables.htm">Predefined inherited variables</a><br/>
<a href="43-PerThreadVariables.htm">Predefined initialized variables</a><br/>
<a href="44-VariablesSortedByName.htm">Combined list of predefined variables</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
</p>

<h3>
<small><a href="39-PathnameEditing.htm">Previous</a> |
<a href="41-ProcessWideVariables.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Shared variables
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Shared variables
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm"><b>Shared variables</b></a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Shared variables<br/>
<small><a href="40-EnvironmentVariables.htm">Previous</a> |
<a href="42-PerThreadVariables.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#PredefindedSharedVariables">Predefined shared variables</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
These shell variables are shared across the entire C shell process among all threads.  If one thread changes the value of any of these variables, the change is instantly seen by all other threads.
</p>

<p>
These specific shell variables are read-only.
</p>

<div class="codesample" style="font-weight:bolder">NTVersion         OperatingSystem       processid         shell
WinBuild          WinVersion
</div>

<p>
In contrast to <a href="40-EnvironmentVariables.htm#">environment variables</a>, all shell variables are case-sensitive.
</p>

<h4>
<a name="PredefindedSharedVariables"></a>Predefined shared variables
</h4>

<table>

<tr>
<th style="width: 120px">
Name
</th>
<th style="width: 90px">
Default
</th>
<th>
Use
</th>
</tr>

<tr>
<td class="langref">
<tt class="process">$</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="process">processid</tt> variable when typed as <tt>$$</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="bsdhistory"></a><tt class="process">bsdhistory</tt>
</td>
<td>
0
</td>
<td>
<p>
By default, <tt>!!</tt> is the immediately preceding command and <tt>!-1</tt> is the one before that.  Setting <tt class="process">bsdhistory = 1</tt> makes them the same.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="cdpath"></a><tt class="process">cdpath</tt>
</td>
<td>
null
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#CDPATH"><tt>CDPATH</tt></a> environmental variable, broken into words.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="cshtitle"></a><tt class="process">cshtitle</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#CSHTITLE"><tt>CSHTITLE</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="escapesym"></a><tt class="process">escapesym</tt>
</td>
<td>
<tt>^</tt>
</td>
<td>
<p>
Character to be interpreted as a literal escape character.  Same as the
<a href="40-EnvironmentVariables.htm#ESCAPESYM"><tt>ESCAPESYM</tt></a>
environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="histchars"></a><tt class="process">histchars</tt>
</td>
<td class="langref">
<tt>!%</tt>
</td>
<td>
<p>
Characters which introduce long-form and short-form history references, respectively.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="home"></a><tt class="process">home</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#HOME"><tt>HOME</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">NTVersion</tt>
</td>
<td>
</td>
<td>
<p>
Obsolete name for the <tt class="process">WinBuild</tt> variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">OperatingSystem</tt>
</td>
<td>
</td>
<td>
<p>
Name of the operating system on which the shell is running.  Possible values are <tt>Windows&nbsp;NT</tt> and <tt>Windows&nbsp;9x</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="path"></a><tt class="process">path</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#PATH"><tt>PATH</tt></a> environmental variable, broken into words.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">processid</tt>
</td>
<td>
</td>
<td>
<p>
The unique process ID assigned by the Windows kernel to this copy of the C shell.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="prompt1"></a><tt class="process">prompt1</tt>
</td>
<td class="langref">
<tt>$@ $CDISK%</tt>
</td>
<td>
<p>
Same as <a href="40-EnvironmentVariables.htm#PROMPT1"><tt>PROMPT1</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="prompt2"></a><tt class="process">prompt2</tt>
</td>
<td class="langref">
<tt>$@ $CDISK?</tt>
</td>
<td>
<p>
Same as <a href="40-EnvironmentVariables.htm#PROMPT2"><tt>PROMPT2</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="savehist"></a><tt class="process">savehist</tt>
</td>
<td>
0
</td>
<td>
<p>
Save the history contents into <tt>history.csh</tt> in the home directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="shell"></a><tt class="process">shell</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#SHELL"><tt>SHELL</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">WinBuild</tt>
</td>
<td>
</td>
<td>
<p>
Build number of the Windows system on which the shell is running, e.g., 7601 for Windows 7.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">WinVersion</tt>
</td>
<td>
</td>
<td>
<p>
Version number of the Windows API on which the shell is running, e.g., 6.1 for Windows 7.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">@, calc, set, setenv and local</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="42-PerThreadVariables.htm">Predefined inherited variables</a><br/>
<a href="43-PerThreadVariables.htm">Predefined initialized variables</a><br/>
<a href="44-VariablesSortedByName.htm">Combined list of predefined variables</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
</p>

<h3>
<small><a href="40-EnvironmentVariables.htm">Previous</a> |
<a href="42-PerThreadVariables.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Inherited variables
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Inherited variables
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm"><b>Inherited variables</b></a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">


<h3>
Inherited variables<br/>
<small><a href="41-ProcessWideVariables.htm">Previous</a> |
<a href="43-PerThreadVariables.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#PredefindedInheritedVariables">Predefined inherited variables</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Each thread gets its own copies of the following variables, but the initial value is inherited from its parent thread.  The defaults are the initial values when the C shell starts.
</p>

<h4>
<a name="PredefindedInheritedVariables"></a>Predefined inherited variables
</h4>

<table>
<tr>
<th style="width: 120px">
Name
</th>
<th style="width: 90px">
Default
</th>
<th>
Use
</th>
</tr>

<tr>
<td class="langref">
*
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="inherited">argv</tt> variable when typed as <tt>$*</tt>.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">argv</tt>
</td>
<td>
</td>
<td>
<p>
Any argument words passed to the shell or to a <tt>.csh</tt> script file.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">bsdargv</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If set, <tt>$<span class="inherited">argv</span>[0]</tt> contains the name of the script, just as it would under the original Berkeley C shell; by default, <tt>$<span class="inherited">argv</span>[0]</tt> is the first argument word.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">cdhome</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If set, the <tt>cd</tt> command with no argument is the same as <tt>cd $home</tt>.  Default is to simply print the current directory name.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">cdisk</tt>
</td>
<td>
</td>
<td>
<p>
Current disk, not including the colon.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">CDISK</tt>
</td>
<td>
</td>
<td>
<p>
Same as <tt class="inherited">cdisk</tt>, but in upper case.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">chgdisk</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If set, <tt>cd</tt> automatically changes the current disk if the path is on another disk.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">cwd</tt>
</td>
<td>
</td>
<td>
<p>
Full pathname of the current directory.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">echoallinput</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Copy the input to stdout as it&rsquo;s read.  Similar to <tt class="initialized">echoinput</tt>, but inherited from parent to child threads.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">gotowindow</tt>
</td>
<td class="langref">
<tt>50</tt>
</td>
<td>
<p>
Number of statements a <tt>goto</tt> can jump over (when not inside a nested block) without being considered an error.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">nohashing</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine how/whether path hashing is done:  <tt>0</tt> means full path hashing of the directories on the search path; <tt>1</tt> means turn off hashing completely; <tt>2</tt> means hash only the directories which do not depend on the setting of the current directory.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">noclobber</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If True, don&rsquo;t allow redirection to overwrite an existing file unless the <tt>!</tt> override is given.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">noglob</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the nowild variable.
</p>
</td>
</tr>



<tr>
<td class="langref">
<a name="nonohidden"></a><tt class="inherited">nonohidden</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine whether <a href="31-Wildcarding.htm">wildcarding</a> will match against hidden files:  <tt>0</tt> means don&rsquo;t match hidden files; <tt>1</tt> means hidden files will be found.
</p>
</td>
</tr>



<tr>
<td class="langref">
<a name="nonomatch"></a><tt class="inherited">nonomatch</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine the response to a <a href="31-Wildcarding.htm">wildcard</a> that doesn&rsquo;t match anything:  <tt>0</tt> means it&rsquo;s an error; <tt>1</tt> means pass it through to the application; <tt>2</tt> means simply discard it.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">nonovar</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine the response to a reference to a non-existent variable, procedure or alias.  Same encoding as <tt class="inherited">nonomatch</tt>.
</p>
</td>
</tr>



<tr>
<td class="langref">
<a name="nowild"></a><tt class="inherited">nowild</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Can only be set to true <tt>1</tt> or false <tt>0</tt>.  Set to true, it turns off filename <a href="31-Wildcarding.htm">wildcarding</a>.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">nullwords</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determines whether an array index off the end of a list is an error <tt>0</tt> or returns a null word <tt>1</tt>.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">precision</tt>
</td>
<td class="langref">
<tt>6</tt>
</td>
<td>
<p>
Number of decimal places to print when displaying floating point values.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">scripted</tt>
</td>
<td>
</td>
<td>
<p>
Tells whether this thread is running or called from a script <tt>1</tt> or not <tt>0</tt>.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">tailstatus</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determines whether the status variable will reflect the reflect the return code from the leftmost or rightmost stage of a pipeline:  <tt>0</tt> means leftmost; <tt>1</tt> means rightmost.
</p>
</td>
</tr>



<tr>
<td class="langref">
<tt class="inherited">verbose</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If true <tt>1</tt>, print out all available information when reporting errors.
</p>
</td>
</tr>

</table>

<p>
<tt class="inherited">echoallinput</tt>, <tt class="inherited">ignoreerrors</tt> and <tt class="inherited">interactive</tt> are initialized for the main thread based on command-line options.  Each thread has its own independent current disk and current directories, initially inherited from its parent.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">@, calc, set, setenv and local</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="41-ProcessWideVariables.htm">Predefined shared variables</a><br/>
<a href="43-PerThreadVariables.htm">Predefined initialized variables</a><br/>
<a href="44-VariablesSortedByName.htm">Combined list of predefined variables</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
</p>

<h3>
<small><a href="41-ProcessWideVariables.htm">Previous</a> |
<a href="43-PerThreadVariables.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Initialized variables
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Initialized variables
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm"><b>Initialized variables</b></a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Initialized variables<br/>
<small><a href="42-PerThreadVariables.htm">Previous</a> |
<a href="44-VariablesSortedByName.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#PredefindedInitializedVariables">Predefined initialized variables</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
Each thread gets its own copies of the following variables.  Each is always initialized to the default, not inherited.  In addition, each new thread is initialized with default on-interrupt processing (a forced exit), and null search and replace strings.
</p>

<h4>
<a name="PredefindedInitializedVariables"></a>Predefined initialized variables
</h4>

<table>
<tr>
<th style="width: 120px">
Name
</th>
<th style="width: 90px">
Default
</th>
<th>
Use
</th>
</tr>

<tr>
<td class="langref">
<tt class="initialized">&lt;</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="initialized">getline</tt> variable when typed as <tt>$&lt;</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">@</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="initialized">stmtnumber</tt> variable when typed as <tt>$@</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">child</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Identification number of the last child process spawned.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">echoinput</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Copy the input to stdout as it&rsquo;s read.  (Similar to <tt class="inherited">echoallinput</tt> but not inherited to a child thread.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">eofgetline</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Pseudo-variable to indicate if the last reference to <tt class="initialized">getline</tt> encountered an end-of-file condition.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">getchar</tt>
</td>
<td>
</td>
<td>
<p>
Read one character from stdin without echoing.  If stdin is tied to the keyboard, outboard keys are returned as two-character strings.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">getline</tt>
</td>
<td>
</td>
<td>
<p>
Read one line from stdin pseudo-variable.  If stdin is tied to the keyboard, keystrokes are echoed as they&rsquo;re typed.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">history</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Number of statements to remember on the history list; <tt>0</tt> turns off the history mechanism.  (If the thread is interactive, history is automatically set to <tt>100</tt>.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">ignoreeof</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If True, don&rsquo;t exit at EOF on stdin; insist on an exit command.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">ignoreerrors</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine whether execution should continue if an error occurs:  <tt>0</tt> means the thread exits; <tt>1</tt> (the default for an interactive thread) means exit from loops or procedures and try to read a new command; <tt>2</tt> means ignore all errors.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">ignorestatus</tt>
</td>
<td class="langref">
<tt>1</tt>
</td>
<td>
<p>
If True, a non-zero status code from a child process is ignored.  Otherwise, it&rsquo;s an error.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">interactive</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If True, prompt for input.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">irqmask</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determines whether interrupts are enabled <tt>0</tt>, deferred until the mask is cleared again <tt>1</tt> or ignored <tt>2</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">scriptname</tt>
</td>
<td>
</td>
<td>
<p>
Name of the C shell script file being executed, if any.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">status</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Exit code of the last child process.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">stmtnumber</tt>
</td>
<td class="langref">
<tt>1</tt>
</td>
<td>
<p>
Autoincremented statement number used with the history list and in prompting.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">threadid</tt>
</td>
<td>
</td>
<td>
<p>
Thread id of the currently executing thread.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">@, calc, set, setenv and local</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="41-ProcessWideVariables.htm">Predefined shared variables</a><br/>
<a href="42-PerThreadVariables.htm">Predefined inherited variables</a><br/>
<a href="44-VariablesSortedByName.htm">Combined list of predefined variables</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
</p>

<h3>
<small><a href="42-PerThreadVariables.htm">Previous</a> |
<a href="44-VariablesSortedByName.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		All variables
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				All variables
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm"><b>All variables</b></a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Combined list of predefined variables<br/>
<small><a href="43-PerThreadVariables.htm">Previous</a> |
<a href="45-OrderOfEvaluation.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Legend">Legend</a><br/>
<a href="#CombinedList">Combined list</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Legend"></a>Legend
</h4>

<table class="white">
<tr>
<td style="width: 120px">
<tt>ENVIRONMENT</tt>
</td>
<td>
<p>
An environmental variable.  Environmental variables are passed to any child processes or windows you create by invoking an external utility or application.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">shared</tt>
</td>
<td>
<p>
A shell variable shared by all threads.  If one thread makes a change, all will see it.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">inherited</tt>
</td>
<td>
<p>
Each thread gets its own copy but the initial value is inherited from its parent.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">initialized</tt>
</td>
<td>
<p>
Each thread gets its own copy but the initialization is always to a defined value.
</p>
</td>
</tr>
</table>

<h4>
<a name="CombinedList"></a>Combined list
</h4>

<table>

<tr>
<th style="width: 120px">
Name
</th>
<th style="width: 90px">
Default
</th>
<th>
Use
</th>
</tr>

<tr>
<td class="langref">
<tt class="process">$</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="process">processid</tt> variable when typed as <tt>$$</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
*
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="inherited">argv</tt> variable when typed as <tt>$*</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">&lt;</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="initialized">getline</tt> variable when typed as <tt>$&lt;</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">@</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the <tt class="initialized">stmtnumber</tt> variable when typed as <tt>$@</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>ADDITIONS</tt>
</td>
<td class="langref">
<tt>Bright white on green</tt>
</td>
<td>
<p>
Lines added found by <a href="Utilities/diff.htm"><tt>diff</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">argv</tt>
</td>
<td>
</td>
<td>
<p>
Any argument words passed to the shell or to a <tt>.csh</tt> script file.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>ASCIICONVERT</tt>
</td>
<td class="langref">
<tt>Bright yellow</tt>
</td>
<td>
<p>
ASCII files which received line end conversions by <a href="Utilities/tar.htm"><tt>tar</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">bsdargv</tt>
</td>
<td>
0</td>
<td>
<p>
If set, <tt>$<span class="inherited">argv</span>[0]</tt> contains the name of the script, just as it would under the original Berkeley C shell; by default, <tt>$<span class="inherited">argv</span>[0]</tt> is the first argument word.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">bsdhistory</tt>
</td>
<td>
0
</td>
<td>
<p>
By default, <tt>!!</tt> is the immediately preceding command and <tt>!-1</tt> is the one before that.  Setting <tt class="process">bsdhistory = 1</tt> makes them the same.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">cdhome</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If set, the <tt>cd</tt> command with no argument is the same as <tt>cd $home</tt>.  Default is to simply print the current directory name.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">cdisk</tt>
</td>
<td>
</td>
<td>
<p>
Current disk, not including the colon.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">CDISK</tt>
</td>
<td>
</td>
<td>
<p>
Same as <tt class="inherited">cdisk</tt>, returning the current disk, but in upper case.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>CDPATH</tt>
</td>
<td>
</td>
<td>
<p>
List of directories to search for the subdirectory specified as the new current directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">cdpath</tt>
</td>
<td>
null
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#CDPATH"><tt>CDPATH</tt></a> environmental variable, broken into words.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">chgdisk</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If set, <tt>cd</tt> automatically changes the current disk if the path is on another disk.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">child</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Identification number of the last child process spawned.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>COLORS</tt>
</td>
<td>
null
</td>
<td>
<p>
Normal screen colors.  If it's not set, the C shell inherits the color settings of the console window when it starts.
</p>

<p style="margin-top:12px">
The colors available in the C shell are <tt>black</tt>, <tt>red</tt>, <tt>green</tt>, <tt>yellow</tt>,
<tt>blue</tt>, <tt>magenta</tt> (or <tt>blue red</tt>), <tt>cyan</tt> (or <tt>blue green</tt>) and
<tt>white</tt>.  Foreground colors may also be <tt>bright</tt>, <tt>dim</tt>, <tt>blink</tt> or
<tt>reverse</tt>.
</p>

<p style="margin-top:12px">
The optional keyword <tt>on</tt> introduces background colors.  All the names of the
colors along with the keywords <tt>bright</tt>, <tt>dim</tt>, <tt>blink</tt>, <tt>reverse</tt> and
<tt>on</tt> may be in upper, lower or mixed case.
</p>

<p style="margin-top:12px">
<tt>Blink</tt> causes true blinking only full-screen; in a text window, it
just makes the background brighter.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>COMSPEC</tt>
</td>
<td>
</td>
<td>
<p>
Usually, this is the pathname of <tt>cmd.exe</tt>.  If you set it to point to the C shell, e.g., so other programs will invoke the C shell rather than <tt>cmd.exe</tt>, the C shell will try to look through the search path for <tt>cmd.exe</tt> if it needs to run a <tt>.cmd</tt> file.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>CSHOPTIONS</tt>
</td>
<td>
</td>
<td>
<p>
Default set of command line options to be pasted ahead of any other command line options passed to <a href="Utilities/csh.htm"><tt>csh.exe</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>CSHTITLE</tt>
</td>
<td>
</td>
<td>
<p>
Template for the title bar.  Setting it to a null string causes the title bar inherited at startup to be displayed.  Unsetting it causes &ldquo;Hamilton C shell&rdquo; to be displayed.  Other values will be evaluated for command and variable substitutions the same way the prompt variables are interpreted.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">cshtitle</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#CSHTITLE"><tt>CSHTITLE</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">cwd</tt>
</td>
<td>
</td>
<td>
<p>
Full pathname of the current directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>DELETIONS</tt>
</td>
<td class="langref">
<tt>Bright white on red</tt>
</td>
<td>
<p>
Lines deleted found by <a href="Utilities/diff.htm"><tt>diff</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>DIRECTORIES</tt>
</td>
<td class="langref">
<tt>Bright</tt>
</td>
<td>
<p>
Directories listed by <a href="Utilities/ls.htm"><tt>ls</tt></a>. 
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>DRIVEMASK</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/du.htm"><tt>du</tt></a>, <a href="Utilities/pwd.htm"><tt>pwd</tt></a> and <a href="Utilities/vol.htm"><tt>vol</tt></a> and in drive wildcarding, e.g., <tt>*:foo.*</tt>, to limit the default list of drives it will report on.  Written as a list of alphabetic characters representing the drives you want listed; ranges are allowed, e.g., <tt>c-e</tt>.  If you don&rsquo;t define this variable,  all drives beginning with <tt>C:</tt> are normally reported.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>DUPLICATES</tt>
</td>
<td>
Green
</td>
<td>
<p>
When filename completion matches more than one name.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">echoallinput</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Copy the input to stdout as it&rsquo;s read.  Similar to <tt class="initialized">echoinput</tt>, but inherited from parent to child threads.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">echoinput</tt>
</td>
<td>
0
</td>
<td>
<p>
Copy the input to stdout as it&rsquo;s read.  (Similar to <tt class="inherited">echoallinput</tt> but not inherited to a child thread.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">eofgetline</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Pseudo-variable to indicate if the last reference to getline encountered an end-of-file condition.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>ESCAPESYM</tt>
</td>
<td>
<tt>^</tt>
</td>
<td>
<p>
Character to be interpreted as a literal escape character.  Placed in the environment and passed to child processes only if it is not the default circumflex.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">escapesym</tt>
</td>
<td>
<tt>^</tt>
</td>
<td>
<p>
Character to be interpreted as a literal escape character.  Same as the
<a href="40-EnvironmentVariables.htm#ESCAPESYM"><tt>ESCAPESYM</tt></a>
environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>FOREIGNFILES</tt>
</td>
<td class="langref">
<tt>Bright red</tt>
</td>
<td>
<p>
Used by <a href="Utilities/tar.htm"><tt>tar</tt></a> when listing filetypes in an archive that have no counterparts on Windows.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">getchar</tt>
</td>
<td>
</td>
<td>
<p>
Read one character from stdin without echoing.  If stdin is tied to the keyboard, outboard keys are returned as two-character strings.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">getline</tt>
</td>
<td>
</td>
<td>
<p>
Read one line from stdin pseudo-variable.  If stdin is tied to the keyboard, keystrokes are echoed as they&rsquo;re typed.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">gotowindow</tt>
</td>
<td class="langref">
<tt>50</tt>
</td>
<td>
<p>
Number of statements a goto can jump over (when not inside a nested block) without being considered an error.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>HIGHLIGHT</tt>
</td>
<td class="langref">
<tt>Bright</tt>
</td>
<td>
<p>
Current disk or directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">histchars</tt>
</td>
<td class="langref">
<tt>!%</tt>
</td>
<td>
<p>
Characters which introduce long-form and short-form history references, respectively.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">history</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Number of statements to remember on the history list; 0 turns off the history mechanism.  (If the thread is interactive, history is automatically set to 100.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>HOME</tt>
</td>
<td>
</td>
<td>
<p>
Home directory.  Default is the initial current directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">home</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#HOME"><tt>HOME</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">ignoreeof</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If True, don&rsquo;t exit at EOF on stdin; insist on an exit command.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">ignoreerrors</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine whether execution should continue if an error occurs:  <tt>0</tt> means the thread exits; <tt>1</tt> (the default for an interactive thread) means exit from loops or procedures and try to read a new command; <tt>2</tt> means ignore all errors.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">ignorestatus</tt>
</td>
<td class="langref">
<tt>1</tt>
</td>
<td>
<p>
If True, a non-zero status code from a child process is ignored.  Otherwise, it&rsquo;s an error.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">interactive</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If True, prompt for input.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">irqmask</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determines whether interrupts are enabled <tt>0</tt>, deferred until the mask is cleared again <tt>1</tt> or ignored <tt>2</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="LAYER"></a><tt>LAYER</tt>
</td>
<td>
</td>
<td>
<p>
Counts the nesting level of this invocation of the C shell for use the in the prompts defined in the default
<a href="47-StartupCsh.htm#Default"><tt>Startup.csh</tt></a> file. 
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>LSOPTIONS</tt>
</td>
<td>
</td>
<td>
<p>
Default set of command line options to be pasted ahead of any other command line options passed to <a href="Utilities/ls.htm"><tt>ls</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MATCHFAIL</tt>
</td>
<td class="langref">
<tt>Bright red</tt>
</td>
<td>
<p>
When filename or command completion doesn&rsquo;t match anything.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MIXEDCASEDRIVES</tt>
</td>
<td>
</td>
<td>
<p>
List of drives and UNC names for which <a href="Utilities/ls.htm"><tt>ls</tt></a>, <a href="Utilities/pwd.htm"><tt>pwd</tt></a>, wildcarding and the <a href="49-BuiltinProcedures.htm#fullpath"><tt>fullpath</tt></a> and current directory functions should report filenames in mixed case rather than all lower case.  Default is all drives are considered mixed case.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MOREEOF</tt>
</td>
<td>
Green
</td>
<td>
<p>
End or top of file in <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MOREERROR</tt>
</td>
<td class="langref">
<tt>Bright white on red</tt>
</td>
<td>
<p>
Unrecognizable command to <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MOREFILLIN</tt>
</td>
<td class="langref">
<tt>Black</tt>
</td>
<td>
<p>
User response to <a href="Utilities/more.htm"><tt>more</tt></a> prompt.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MOREPROMPT</tt>
</td>
<td class="langref">
<tt>Red on white</tt>
</td>
<td>
<p>
Prompt line in <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>MORETOPMEM</tt>
</td>
<td class="langref">
<tt>Bright yellow</tt>
</td>
<td>
<p>
Top of Memory message from <a href="Utilities/more.htm"><tt>more</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">nohashing</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine how/whether path hashing is done:  <tt>0</tt> means full path hashing of the directories on the search path; <tt>1</tt> means turn off hashing completely; <tt>2</tt> means hash only the directories which do not depend on the setting of the current directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">noclobber</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If True, don&rsquo;t allow redirection to overwrite an existing file unless the <tt>!</tt> override is given.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">noglob</tt>
</td>
<td>
</td>
<td>
<p>
A synonym for the nowild variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">nonohidden</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine whether <a href="31-Wildcarding.htm">wildcarding</a> will match against hidden files:  <tt>0</tt> means don&rsquo;t match hidden files; <tt>1</tt> means hidden files will be found.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">nonomatch</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine the response to a <a href="31-Wildcarding.htm">wildcard</a> that doesn&rsquo;t match anything:  <tt>0</tt> means it&rsquo;s an error; <tt>1</tt> means pass it through to the application; <tt>2</tt> means simply discard it.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">nonovar</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determine the response to a reference to a non-existent variable, procedure or alias.  Same encoding as <tt class="inherited">nonomatch</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">nowild</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Can only be set to true <tt>1</tt> or false <tt>0</tt>.  Set to true, it turns off filename <a href="31-Wildcarding.htm">wildcarding</a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">NTVersion</tt>
</td>
<td>
</td>
<td>
<p>
Obsolete name for the <tt class="process">WinBuild</tt> variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">nullwords</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determines whether an array index off the end of a list is an error <tt>0</tt> or returns a null word <tt>1</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">OperatingSystem</tt>
</td>
<td>
</td>
<td>
<p>
Name of the operating system on which the shell is running.  Possible values are <tt>Windows NT</tt> and <tt>Windows 9x</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>PATH</tt>
</td>
<td>
</td>
<td>
<p>
Search path for executable files as one long string.  Each directory on the path is separated from the next by a <tt>;</tt>.  See also the shell <a href="41-ProcessWideVariables.htm#path"><tt>path</tt></a> variable, which has the list of directories parsed into separate words.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">path</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#PATH"><tt>PATH</tt></a> environmental variable, broken into words.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">precision</tt>
</td>
<td class="langref">
<tt>6</tt>
</td>
<td>
<p>
Number of decimal places to print when displaying floating point values.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">processid</tt>
</td>
<td>
</td>
<td>
<p>
The unique process ID assigned by the Windows kernel to this copy of the C shell.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>PROMPT1</tt>
</td>
<td class="langref">
<tt>$@ $CDISK%</tt>
</td>
<td>
<p>
Primary command prompt template.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">prompt1</tt>
</td>
<td class="langref">
<tt>$@ $CDISK%</tt>
</td>
<td>
<p>
Same as <a href="40-EnvironmentVariables.htm#PROMPT1"><tt>PROMPT1</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>PROMPT2</tt>
</td>
<td class="langref">
<tt>$@ $CDISK?</tt>
</td>
<td>
<p>
Continuation line prompt template.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">prompt2</tt>
</td>
<td class="langref">
<tt>$@ $CDISK?</tt>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#PROMPT2"><tt>PROMPT2</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>RADIX</tt>
</td>
<td>
16
</td>
<td>
<p>
Default radix used by <a href="Utilities/more.htm"><tt>more</tt></a> and other utilities when displaying binary data.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>READONLYDIRS</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> and other utilities for directories marked read-only.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>READONLYFILES</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> and other utilities for files marked read-only.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">savehist</tt>
</td>
<td>
0
</td>
<td>
<p>
Save the history contents into <tt>history.csh</tt> in the home directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">scripted</tt>
</td>
<td>
</td>
<td>
<p>
Tells whether this thread is running or called from a script <tt>1</tt> or not <tt>0</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">scriptname</tt>
</td>
<td>
</td>
<td>
<p>
Name of the C shell script file being executed, if any.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>SHELL</tt>
</td>
<td>
</td>
<td>
<p>
Always set to the pathname of the Hamilton C shell <a href="Utilities/csh.htm"><tt>csh.exe</tt></a> file.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">shell</tt>
</td>
<td>
</td>
<td>
<p>
Same as the <a href="40-EnvironmentVariables.htm#SHELL"><tt>SHELL</tt></a> environmental variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">status</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Exit code of the last child process.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">stmtnumber</tt>
</td>
<td class="langref">
<tt>1</tt>
</td>
<td>
<p>
Autoincremented statement number used with the history list and in prompting.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>SWITCHCHARS</tt>
</td>
<td class="langref">
<tt>-/</tt>
</td>
<td>
<p>
Characters that can be used as option introducers for the shell and utilities.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>SYSTEMDIRS</tt>
</td>
<td class="langref">
<tt>Bright green</tt>
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> for directories with the System bit on.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>SYSTEMFILES</tt>
</td>
<td>
Green
</td>
<td>
<p>
Used by <a href="Utilities/ls.htm"><tt>ls</tt></a> for files with the System bit on.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>TABS</tt>
</td>
<td>
8
</td>
<td>
<p>
Used by <a href="Utilities/more.htm"><tt>more</tt></a>, <a href="Utilities/head.htm"><tt>head</tt></a>, <a href="Utilities/tail.htm"><tt>tail</tt></a> and <a href="Utilities/tabs.htm"><tt>tabs</tt></a> to tell them how many character positions there are between tab stops.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">tailstatus</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
Determines whether the status variable will reflect the reflect the return code from the leftmost or rightmost stage of a pipeline:  <tt>0</tt> means leftmost; <tt>1</tt> means rightmost.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>TAPE</tt>
</td>
<td class="langref">
<tt>\\.\tape0</tt>
</td>
<td>
<p>
Used by <a href="Utilities/mt.htm"><tt>mt</tt></a> to specify the pathname of the default tape drive.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>TARASCII</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/tar.htm"><tt>tar</tt></a> to identify files, using a list of wildcards, that should be considered as ASCII, regardless of content.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>TARBINARY</tt>
</td>
<td>
</td>
<td>
<p>
Used by <a href="Utilities/tar.htm"><tt>tar</tt></a> to identify files, using a list of wildcards, that should be considered as binary, regardless of content.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="initialized">threadid</tt>
</td>
<td>
</td>
<td>
<p>
Thread id of the currently executing thread.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="inherited">verbose</tt>
</td>
<td class="langref">
<tt>0</tt>
</td>
<td>
<p>
If true <tt>1</tt>, print out all available information when reporting errors.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">WinBuild</tt>
</td>
<td>
</td>
<td>
<p>
Build number of the Windows system on which the shell is running, e.g., 7601 for Windows 7.
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt class="process">WinVersion</tt>
</td>
<td>
</td>
<td>
<p>
Version number of the Windows API on which the shell is running, e.g., 6.1 for Windows 7.
</p>
</td>
</tr>

</table>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="22-Variables.htm">@, calc, set, setenv and local</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="38-SubstitutionModifiers.htm">Substitution modifiers</a><br/>
<a href="40-EnvironmentVariables.htm">Predefined environment variables</a><br/>
<a href="41-ProcessWideVariables.htm">Predefined shared variables</a><br/>
<a href="42-PerThreadVariables.htm">Predefined inherited variables</a><br/>
<a href="43-PerThreadVariables.htm">Predefined initialized variables</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="11-Editing.htm"><i>Tutorial:</i> Editing</a><br/>
</p>

<h3>
<small><a href="43-PerThreadVariables.htm">Previous</a> |
<a href="45-OrderOfEvaluation.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Order of evaluation
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Order of evaluation
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm"><b>Order of evaluation</b></a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Order of evaluation<br/>
<small><a href="44-VariablesSortedByName.htm">Previous</a> |
<a href="46-LoginCsh.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#TwoPhases">Broken into compiling and execution</a><br/>
<a href="#Compiling">Compiling</a><br/>
<a href="#Execution">Execution</a><br/>
<a href="#SearchOrder">Search order</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="TwoPhases"></a>Broken into compiling and execution
</h4>

<p>
Here&rsquo;s a rough summary of the procedure by which the C shell reads, parses and evaluates your commands.  It's broken into two phases:  compiling and execution.
</p>

<h4>
<a name="Compiling"></a>Compiling
</h4>

<p>
The command is read from the keyboard, a script or other source and transformed into an internal form, ready for execution.
</p>

<ol>
<li>
<p>
The command is read.  If stdin appears to be a keyboard, the <a href="33-CommandLineEditing.htm">command line editing</a> routines are used to read a keystroke at a time, entering them into the command buffer and doing whatever editing is indicated.   Otherwise, the shell simply uses the Windows kernel&rsquo;s <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa365467(v=vs.85).aspxhttp://msdn.microsoft.com/en-us/library/windows/desktop/aa365467(v=vs.85).aspx">Win32 ReadFile</a> function to read small chunks until the end of the statement has been found.
</p>
</li>

<li>
<p>
<a href="34-HistoryRecall.htm">History substitution</a> is done.  Any <tt>!</tt> or <tt>%</tt> history references are expanded.
</p>
</li>

<li>
<p>
The text is <a href="17-LanguageReference.htm">broken up into separate words</a>.  Unless it&rsquo;s part of a <a href="36-Quoting.htm">quoted string</a>, white space (tabs and spaces) separates words.  Also, these special strings are interpreted as separate words even if they&rsquo;re run together with other text:
</p>

<div class="codesample">&amp;   |   ;   &gt;   &lt;   (   )   &amp;&amp;   ||   &gt;&gt;   &lt;&lt;   &gt;&amp;   &gt;!   &gt;&amp;!
</div>
</li>

<li>
<p>
The command is added to the <a href="08-History.htm">history list</a>.  Because this is done after the text has been broken up into separate words, the commands in the history list will look a bit different than the way you typed them.  It&rsquo;s done this way to make it clearer how to refer to individual words number, e.g., <tt>!!:3</tt> to refer to word 3 in the previous command.
</p>
</li>

<li>
<p>
The command is compiled into an internal form using a recursive descent parser, recognizing the language constructs and whether a given portion of a command is really an <a href="13-Expressions.htm">expression</a> or just a series of words.
</p>

<p>
Compilation at this stage is at the level of a whole construct, e.g., a whole <a href="19-Iteration.htm"><tt>foreach</tt></a> statement or <a href="20-Procedures.htm"><tt>proc</tt></a> definition and everything inside it.  That&rsquo;s so that every time through a loop or every time a procedure is run, the shell won&rsquo;t waste time recompiling statements that could have been compiled the first time.  Also, <a href="21-Aliases.htm">aliases</a> are expanded at this stage and some minor optimizations are done, e.g., pre-compiling static patterns appearing in <a href="31-Wildcarding.htm#Usage">pattern-matching expressions</a>, etc.
</p>
</li>
</ol>

<h4>
<a name="Execution"></a>Execution
</h4>

<p>
The internal form is executed.  The various quoting and other substitution activities are done, in effect, in this order:
</p>

<ol>
<li>
<p>
<a href="16-Scheduling.htm">Threads</a> are spawned for separate stages of a <a href="07-IORedirection.htm#Pipes">pipeline</a> or for <a href="16-Scheduling.htm#BackgroundActivities">background</a> execution.  That&rsquo;s to avoid serializing any blocking events as, for example, the shell hits the disk, looking through the <a href="40-EnvironmentVariables.htm#PATH">search path</a> for executable files, etc.  By spawning separate threads, those blocking events can be overlapped.
</p>
</li>

<li>
<p>
<a href="26-IORedirection.htm">I/O redirection</a> is performed.  If the filename being redirected to/from is actually a <a href="31-Wildcarding.htm">wildcard</a> or a <a href="36-Quoting.htm#CommandSubstitution">command</a> or <a href="37-VariableSubstitution.htm">variable substitution</a>, that word will be expanded.
</p>
</li>

<li>
<p>
Single and double <a href="36-Quoting.htm">quoted strings</a> are processed.  If the quoted string contains any <a href="31-Wildcarding.htm">wildcard</a> characters, they&rsquo;re escaped so that they&rsquo;ll appear as literal characters when wildcarding is done but still be unescaped right after that.
</p>

<p>
In the compiled internal form, double-quoted strings containing <a href="36-Quoting.htm#CommandSubstitution">command</a> or <a href="37-VariableSubstitution.htm">variable substitution</a> are already specially broken up to look, at this stage, like a series of double-quoted strings with any substitutions concatenated together.
</p>
</li>

<li>
<p>
<a href="37-VariableSubstitution.htm">Variable</a> and <a href="36-Quoting.htm#CommandSubstitution">command substitutions</a> are done.
</p>
</li>

<li>
<p>
<a href="31-Wildcarding.htm">Wildcarding</a> is done.
</p>
</li>

<li>
<p>
<a href="36-Quoting.htm#EscapeCharacter">Escape characters</a> are processed.
</p>
</li>

<li>
<p>
The series of words is passed to the command as arguments.  (It&rsquo;s at this point, if it&rsquo;s an <a href="Utilities/eval.htm"><tt>eval</tt></a> command, that the argument text is passed back through the parser and then to the evaluation logic)
</p>
</li>
</ol>

<h4>
<a name="SearchOrder"></a>Search order
</h4>

<p>
Commands are searched for in this order:
</p>

<ol>
<li>
<p>
<a href="20-Procedures.htm">User-defined procedures</a>.
</p>
</li>

<li>
<p>
<a href="49-BuiltinProcedures.htm">Builtin procedures</a> and <a href="50-BuiltinUtilities.htm">builtin commands</a>.
</p>
</li>

<li>
<p>
External commands, searched for in the <a href="40-EnvironmentVariables.htm#PATH"><tt>PATH</tt></a> directories in this order within each directory:
</p>

<div class="codesample">.csh   .exe   .com   .cmd   .bat
</div>
</li>

<li>
<p>
If no executable file with one of these extensions is found, all files which match the command will be examined.  If the file appears to be a script, the C shell will look for a <tt>#!</tt> directive in the first line, e.g., 
</p>

<div class="codesample">#!/usr/bin/perl
</div>

<p>
and, if it finds one, try to find the specified language processor, looking first in the location specified and, if not found there, in all the various path directories.
</p>
</li>

<li>
<p>
The internal form of each compiled statement is discarded once it&rsquo;s no longer needed, i.e., if there&rsquo;s no way you might invoke that code from a later statement. 
</p>
</li>

<li>
<p>
For example, once you define a procedure, it&rsquo;s always accessible; you can call it at any time, so that compiled code is never discarded unless you redefine the procedure or explicitly <a href="20-Procedures.htm"><tt>unproc</tt></a> it.  But an ordinary statement typed at the command line could be re-run (without re-entering it using history or by retyping it) only if it was part of a larger control structure or if there was a way to <a href="24-MiscStatements.htm#goto"><tt>goto</tt></a> it, meaning there would have to have been a label preceding it.
</p>
</li>
</ol>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="17-LanguageReference.htm">Basic statements</a><br/>
<a href="33-CommandLineEditing.htm">Command line editing</a><br/>
<a href="34-HistoryRecall.htm">History recall</a><br/>
<a href="21-Aliases.htm">Aliases</a><br/>
<a href="36-Quoting.htm">Quoting</a><br/>
<a href="27-ExpressionOperators.htm">Expression operators</a><br/>
<a href="19-Iteration.htm">foreach, for, while and repeat</a><br/>
<a href="26-IORedirection.htm">I/O redirection</a><br/>
<a href="37-VariableSubstitution.htm">Variable substitution</a><br/>
<a href="31-Wildcarding.htm">Wildcarding</a><br/>
<a href="04-Tutorial.htm"><i>Tutorial:</i> Basic statements</a><br/>
<a href="04.1-CommandLineEditing.htm"><i>Tutorial:</i> Command line editing</a><br/>
<a href="08-History.htm"><i>Tutorial:</i> History</a><br/>
<a href="14-Aliases.htm"><i>Tutorial:</i> Aliases</a><br/>
<a href="13-Expressions.htm"><i>Tutorial:</i> Expressions</a><br/>
<a href="07-IORedirection.htm"><i>Tutorial:</i> I/O redirection</a><br/>
<a href="09-Variables.htm"><i>Tutorial:</i> Variables</a><br/>
<a href="10-Wildcarding.htm"><i>Tutorial:</i> Wildcarding</a><br/>
</p>

<h3>
<small><a href="44-VariablesSortedByName.htm">Previous</a> |
<a href="46-LoginCsh.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Login.csh
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Login.csh
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm"><b>Login.csh</b></a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
		
<h3>
Login.csh<br/>
<small><a href="45-OrderOfEvaluation.htm">Previous</a> |
<a href="47-StartupCsh.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#Default">Default login.csh</a><br/>
<a href="#OverridingTheDefault">Overriding the default</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The C shell looks for a <tt>login.csh</tt> file if it's started with
the <tt>-L</tt> option indicating that it&rsquo;s a login shell.  The search
order is to look first in the user&rsquo;s <tt>~</tt> home directory, then
in the C shell&rsquo;s distribution directory for the default.
</p>

<p>
Because <tt>login.csh</tt> is useful for setting up <a href="40-EnvironmentVariables.htm">
environment variables</a>, <tt>login.csh</tt> is read before <a href="47-StartupCsh.htm">
<tt>startup.csh</tt></a>.
</p>

<h4>
<a name="Default"></a>Default login.csh
</h4>

<p>
This is the default <tt>login.csh</tt> file in the distribution directory.
</p>
		
<table>
<tr>
<td>
<pre><tt>#  Hamilton C shell(tm) 2012
#  Login.csh Release 5.1.a

#  This is the default login.csh file.  The Hamilton C shell looks for
#  this file first in your home directory and then in its distribution
#  directory if you start it with -L.

#  You can override this by creating your own login.csh in your home
#  directory.  If all you'd like to do is add your own additional
#  statements, the easiest way to do that is to source this default
#  login.csh file at the start of the one in your home directory:
#
#     source $shell:h:h\login.csh

#  Blank lines are ignored; anything following a "#" on a given line is
#  considered a comment.


local savehashing
@ savehashing = nohashing
@ nohashing = 1
local cshdir, i

#  Setup the search path, adding the ".", bin and samples directories
#  if they're not already on the path.

set cshdir = $shell:h:h

$cshdir\samples\memberi &gt; nul  # just to load the member proc

foreach i ( $cshdir\{Samples,Bin} )
   if ( ! memberi( i, path ) ) set path = $i $path
end
if ( path[ 0 ] != "." ) set path = . $path


@ nohashing = savehashing
unlocal savehashing


#  If the SwitchChars variable isn't set, set it to a hyphen
#  as the only command line option switch character.

if (! $?SwitchChars) setenv SwitchChars = -


#  If tabs isn't defined, set it to be 3
if ( ! $?tabs ) setenv Tabs = 3


#  Setup the cdpath variable, if it's not already defined, to allow
#  quick cd's into the user's home directory and desktop directories.

if ( $#cdpath == 0 ) then
   set cdpath = $home ``directory desktop`` ``directory -a desktop``
end
unlocal cshdir, i


set     savehist  = 0
set     ignoreeof = 1
</tt></pre>
</td>
</tr>
</table>

<h4>
<a name="OverridingTheDefault"></a>Overriding the default
</h4>

<p>
The C shell runs the default <tt>login.csh</tt> only if you don't have one in your
<a href="40-EnvironmentVariables.htm#HOME"><tt>HOME</tt></a> directory.  So the easiest
way to easiest way to override the default is to create a <tt>login.csh</tt> in that
directory and put whatever you like in it, including copying and pasting only just
those parts of the default <tt>login.csh</tt> you like.
</p>

<p>
If you mostly like the default <tt>login.csh</tt> but would add or change only
a few things, <a href="24-MiscStatements.htm#source"><tt>source</tt></a> the default
default <tt>login.csh</tt> but then override parts of it.
</p>

<p>
Here's how to source the default <tt>login.csh</tt> without having to know where it is. 
</p>

<div class="codesample">source $shell:h:h\login.csh
</div>

<p>
The <tt>$shell</tt> variable returns the filename of the C shell executable that's
running, e.g., <tt>C:\Program Files\Hamilton C shell 2012 x64\Bin\csh.exe</tt>.  The
<tt>:h</tt> editing operator returns the parent directory. <tt>$shell:h:h</tt> is
the root of C shell's install directory, <tt>C:\Program Files\Hamilton C shell 2012 x64</tt>.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="47-StartupCsh.htm">Startup.csh</a><br/>
<a href="48-CustomizingTheShell.htm">Customizing the shell</a><br/>
<a href="Utilities/csh.htm">C shell command line options</a><br/>
<a href="40-EnvironmentVariables.htm">Environment variables</a><br/>
<a href="44-VariablesSortedByName.htm">Predefined variables</a><br/>
</p>

<h3>
<small><a href="45-OrderOfEvaluation.htm">Previous</a> |
<a href="47-StartupCsh.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Startup.csh
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Startup.csh
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm"><b>Startup.csh</b></a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
		
<h3>
Startup.csh<br/>
<small><a href="46-LoginCsh.htm">Previous</a> |
<a href="48-CustomizingTheShell.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#Usage">Usage</a><br/>
<a href="#Default">Default startup.csh</a><br/>
<a href="#OverridingTheDefault">Overriding the default</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="Usage"></a>Usage
</h4>

<p>
The C shell always looks for a <tt>startup.csh</tt> file unless it's started with
<tt>-f</tt> or <tt>-F</tt> indicating fast startup.  The search
order is to look first in the user&rsquo;s <tt>~</tt> home directory, then
in the C shell&rsquo;s distribution directory for the default.
</p>

<p>
Because <a href="46-LoginCsh.htm"><tt>login.csh</tt></a> is useful for setting
up <a href="40-EnvironmentVariables.htm">environment variables</a>, <tt>login.csh</tt>
is read before <tt>startup.csh</tt>.
</p>

<p>
<tt>startup.csh</tt> is useful for defining settings that aren't inherited from
parent to child process copies of the C shell, including definitions for useful
<a href="21-Aliases.htm">aliases</a> and <a href="20-Procedures.htm">procedures</a>.
</p>

<h4>
<a name="Default"></a>Default startup.csh
</h4>

<p>
This is the default <tt>startup.csh</tt> file in the distribution directory.
</p>
		
<table>
<tr>
<td><pre><tt>#  Hamilton C shell(tm) 2012
#  Startup.csh Release 5.2

#  This is the default startup.csh file.  Hamilton C shell looks for
#  this file first in your home directory and then in its distribution 
#  directory every time you start a new copy.

#  You can override this by creating your own startup.csh in your home
#  directory.  If all you'd like to do is add your own additional
#  statements, the easiest way to do that is to source this default
#  startup.csh file at the start of the one in your home directory:
#
#     source $shell:h:h\startup.csh

#  Blank lines are ignored; anything following a "#" on a given line is
#  considered a comment.


#  Useful constant.

@     pi       = 3.1415926535897932384626433


#  Aliases to allow these functions to be used under cmd.exe albeit
#  under different names.  (Date and vol conflict with cmd.exe builtins.)

alias date     dt
alias vol      vl


#  Aliases to access the Hamilton versions of more, label, rm
#  and sort, still allowing use of the Windows more.com, label.exe
#  and sort.exe utilities if referred to with the .com or .exe
#  extension.

alias more     hmore
alias label    hlabel
alias rm       hrm
alias sort     hsort


#  If we're running under Windows95, alias cmd to be command.com.

if (`whereis cmd.exe` == '') alias cmd command.com


#  Aliases to simulate cmd.exe builtins.

alias assoc    cmd /c '"assoc ^!^*"'
alias ftype    cmd /c '"ftype ^!^*"'
alias md       mkdir
alias pause    (echo -n Press any key when ready ...; @ getchar; echo)
alias rd       rmdir
alias start    env -N
alias type     cat


#  Aliases and procedures for intercepting copy, xcopy and rename commands so
#  that wildcarding won't be done before they're called.

proc safecopy(files)
   cmd /c copy $files; @ nowild = s; unlocal s
end
alias copy     (local s; @ s = ^$nowild; @ nowild = 1; safecopy)

proc safexcopy(files)
   xcopy.exe $files; @ nowild = s; unlocal s
end
alias xcopy    (local s; @ s = ^$nowild; @ nowild = 1; safexcopy)

proc saferename(files)
   cmd /c rename $files; @ nowild = s; unlocal s
end
alias rename   (local s; @ s = ^$nowild; @ nowild = 1; saferename)
alias ren      rename


#  Intercept the del command so "del *.*" still gives the "Are you sure?"
#  message.  (Alternately, you may prefer to simply alias it to rm.exe.)

proc safedel(files)
   cmd /c del $files; @ nowild = s; unlocal s
end
alias del      (local s; @ s = ^$nowild; @ nowild = 1; safedel)
alias erase    del

#  Intercept the dir command either with a simple alias (letting the C shell
#  do the wildcarding first) or with the same kind of alias + proc mechanism
#  used above to turn off wildcarding first.  (Dir behaves differently
#  depending on whether you let it do its own wildcarding or not.)

#  Uncomment either the simple alias to let the C shell do the wildcarding:

alias dir      cmd /c dir

#  or the following 4 lines to have dir work exactly like under cmd.exe:

#  proc safedir(files)
#     cmd /c dir $files; @ nowild = s; unlocal s
#  end
#  alias dir      (local s; @ s = ^$nowild; @ nowild = 1; safedir)


#  Aliases to run the Vim editors, using env to delete the SHELL variable
#  from the environment Vim inherits.  Vim only knows how to use cmd.exe
#  to "shell out" via the :! commands and gets confused if the SHELL
#  variable is defined.

alias vim      env -D SHELL= vim.exe
alias gvim     env -D SHELL= gvim.exe


#  Provide a help mechanism that can give either
#     a) The Win32 error message corresponding to a specified error code or
#        (if no code number is given) the status from the last command, or
#     b) Help for a specified NT command.

proc help(errno)
   if ($#errno == 0) @ errno = status
   if (isnumber(errno[0])) then
      winerror $errno   #  winerror is in the samples directory with source.
   else
      help.exe $errno
   end
end


#  Aliases to implement obsolete Unix C shell reserved words.  (You may
#  not want these unless you have old habits.)

alias breaksw  break
alias endif    end
alias endsw    end


#  Pre-defined aliases.

alias app      (cat &gt;&gt;)    #  Append stdin to a file.
alias beep     eval echo -n ^^a  #  Beep! (eval is used with an extra ^ so
                                 #     just listing aliases won't beep at you.)
alias cdd      cd +c       #  Change directory AND disk.
alias di       diff -b!    #  "Diff interactive":  Merged diff using color to
                           #     show changes.  Ignore white space differences.
alias duc      du -c       #  Disk usage for the current disk only.
alias f        fgrep       #  Faster name for fgrep.
alias fi       fgrep -i    #  fgrep, case-independent.
alias fn       fgrep -n    #  Fgrep and print line numbers.
alias g        grep        #  Faster name for grep.
alias gi       grep -i     #  Grep, case-independent.
alias h        history
alias home     cdd ~       #  Change to the home directory and disk.
alias killp    (kill -x! ^`pss ^!^*^`:0)  # Kill any matching processes.
alias ll       ls -L       #  Long listing of the directory.
alias ld       ls -a +D -. #  List only the subdirectories.
alias ldr      ls -Ldr     #  Long listing, recursive, sorted by date.
alias loadhist source -n ~\history.csh
alias dumphist (history -s &gt;~\history.csh)
alias mi       more -i     #  "More interactive":  Clear screen first for
                           #     speed.  Don't exit if less than a screenful.
alias po       popd        #  Pop the directory stack.
alias pss      (ps -s | fi ^!^*)          #  List any matching processes 
alias pu       pushd       #  Push a new directory onto the stack.
alias q        exit
alias ro       rotd        #  Rotate the directory stack.
alias rot13    tr 'n-za-mN-ZA-M' 'a-zA-Z'    #  Encoder/Decoder for off-
                                             #  color jokes on Internet.
alias su       env -D LAYER= su.exe    # Don't pass the prompt LAYER variable
                                       # to su to avoid it showing up in the
                                       # elevated prompt in the new window.
alias sudo     su -.
alias uud      uudecode
alias uue      uuencode -c #  uuencode using cp-style syntax.
alias w        ((wait;beep))  #  Wait for background processes and beep.

#  Set f1 to open the user guide.
setkey   f1    open ^$shell:h:h\UserGuide\index.htm


#  Count the nesting level of this invocation of csh.exe
#  and put it into the prompt of nested invocations.

if ($?LAYER) then
   @        LAYER++
   set      prompt1 = '[$LAYER] $@ $CDISK% '
   set      prompt2 = '[$LAYER] $@ $CDISK? '
else
   setenv   LAYER = 1
end

#  Ensure that each level sets its own title.
unsetenv CshTitle

set   history  2000        #  Bump up the size of the history list.
</tt></pre>
</td>
</tr>
</table>

<h4>
<a name="OverridingTheDefault"></a>Overriding the default
</h4>

<p>
The C shell runs the default <tt>startup.csh</tt> only if you don't have one in your
<a href="40-EnvironmentVariables.htm#HOME"><tt>HOME</tt></a> directory.  So the easiest
way to easiest way to override the default is to create a <tt>startup.csh</tt> in that
directory and put whatever you like in it, including copying and pasting only just
those parts of the default <tt>startup.csh</tt> you like.
</p>

<p>
If you mostly like the default <tt>startup.csh</tt> but would add or change only
a few things, <a href="24-MiscStatements.htm#source"><tt>source</tt></a> the default
<tt>startup.csh</tt>, then add your changes.  For example, if you like some but not
all of the <a href="52-PredefinedAliases.htm">predefined aliases</a> and procedures
it contains, you could <a href="21-Aliases.htm"><tt>unalias</tt></a> or <tt>unproc</tt>
the ones you don't like. 
</p>

<p>
Here's how to source the default <tt>startup.csh</tt> file without having to know
where it is.
</p>

<div class="codesample">source $shell:h:h\startup.csh
</div>

<p>
The <tt>$shell</tt> variable returns the filename of the C shell executable that's
running, e.g., <tt>C:\Program Files\Hamilton C shell 2012 x64\Bin\csh.exe</tt>.  The
<tt>:h</tt> editing operator returns the parent directory. <tt>$shell:h:h</tt> is
the root of C shell's install directory, <tt>C:\Program Files\Hamilton C shell 2012 x64</tt>.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="46-LoginCsh.htm">Login.csh</a><br/>
<a href="48-CustomizingTheShell.htm">Customizing the shell</a><br/>
<a href="Utilities/csh.htm">C shell command line options</a><br/>
<a href="21-Aliases.htm">Aliases</a><br/>
<a href="52-PredefinedAliases.htm">Predefined aliases</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="14-Aliases.htm"><i>Tutorial:</i> Aliases</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i>Procedures</a><br/>
</p>

<h3>
<small><a href="46-LoginCsh.htm">Previous</a> |
<a href="48-CustomizingTheShell.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Customizing the shell
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Customizing the shell
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm"><b>Language reference</b></a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm"><b>Customizing<br/>the C shell</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Customizing the shell<br/>
<small><a href="47-StartupCsh.htm">Previous</a> |
<a href="49-BuiltinProcedures.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#InstallDirectory">Install directory</a><br/>
<a href="#DistributionLayout">Distribution layout</a><br/>
<a href="#StartMenu">Start menu and shortcuts</a><br/>
<a href="#LoginCsh">Login.csh</a><br/>
<a href="#StartupCsh">Startup.csh</a><br/>
<a href="#EnvironmentVariables">Environment variables</a><br/>
<a href="#PromptStrings">Prompt strings and title bar</a><br/>
<a href="#Colors">Colors</a><br/>
<a href="#InitialDirectory">Initial current directories</a><br/>
<a href="#ChangeDirectory">Change directory behavior</a><br/>
<a href="#BerkelyHistoryAndEscapes">Berkeley-style history and escapes</a><br/>
<a href="#BerkeleyCompatibilityMode">Berkeley compatibility mode</a><br/>
<a href="#ErrorHandling">Error handling</a><br/>
<a href="#COMSPEC">Calling the C shell from other applications</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>


<h4>
<a name="InstallDirectory"></a>Install directory
</h4>

<p>
You can choose to install Hamilton C shell anywhere you like.  Here are the defaults.
</p>

<table>
<tr>
<th style="padding-right: 8px">
Windows
</th>
<th style="padding-right: 16px">
C shell
</th>
<th>
Default installation directory
</th>
</tr>


<tr>
<td>
64-bit
</td>
<td>
64-bit
</td>
<td>
<tt>C:\Program&nbsp;Files\Hamilton&nbsp;C&nbsp;shell&nbsp;2012&nbsp;x64</tt>
</td>
</tr>


<tr>
<td>
32-bit
</td>
<td>
32-bit
</td>
<td>
<tt>C:\Program&nbsp;Files\Hamilton&nbsp;C&nbsp;shell&nbsp;2012</tt>
</td>
</tr>


<tr>
<td>
64-bit
</td>
<td>
32-bit
</td>
<td>
<tt>C:\Program&nbsp;Files&nbsp;(x86)\Hamilton&nbsp;C&nbsp;shell&nbsp;2012</tt>
</td>
</tr>

</table>

<h4>
<a name="Layout"></a>Distribution layout
</h4>

<p>
These are the directories and files that make up the distribution for Hamilton C shell.
</p>

<a href="Images/Screenshots/HamiltonCshellDistributionDirectory.png">
	<img src="Images/Screenshots/HamiltonCshellDistributionDirectory.png"
		alt="Hamilton C shell distribution directory contents" class="shadow"/>
</a>

<table>

<tr>
<th style="width: 135px">
Directories
</th>
</tr>

<tr>
<td>
<b><tt>Bin</tt></b>
</td>
<td>
The binary executable files for the C shell and all the <a href="51-ExternalUtilities.htm">external utilities</a>.
</td>
</tr>

<tr>
<td>
<b><tt>Samples</tt></b>
</td>
<td>
A directory containing various <a href="53-Samples.htm">sample scripts</a> and simple C programs.
</td>
</tr>

<tr>
<td>
<b><tt>Setup</tt></b>
</td>
<td>
Scripts used during <a href="03-Installation.htm">install</a> or uninstall and a log of the installation.
</td>
</tr>

<tr>
<td>
<b><tt>UserGuide</tt></b>
</td>
<td>
The HTML files comprising this user guide.
</td>
</tr>

<tr>
<th style="padding-top:20px">
Files
</th>
</tr>

<tr>
<td>
<tt>License.rtf</tt>
</td>
<td>
The Hamilton C shell <a href="60-License.htm">license agreement</a>.
</td>
</tr>

<tr>
<td>
<tt>Login.csh</tt>
</td>
<td>
The default <a href="46-LoginCsh.htm"><tt>login.csh</tt></a> file.
</td>
</tr>

<tr>
<td>
<tt>ReleaseNotes.txt</tt>
</td>
<td>
<a href="59-ReleaseNotes.htm">Release notes</a> detailing changes from one build to the next.
</td>
</tr>

<tr>
<td>
<tt>Startup.csh</tt>
</td>
<td>
The default <a href="47-StartupCsh.htm"><tt>startup.csh</tt></a> file.
</td>
</tr>

</table>

<h4>
<a name="StartMenu"></a>Start menu and shortcuts
</h4>

<p>
During installation, you&rsquo;ll be asked whether it&rsquo;s for everyone or just for yourself.
If you choose everyone, the Hamilton C shell group will be created in the everyone's Start menu.
If you choose just yourself, it will only appear in your own Start menu.  Another shortcut to
the C shell is created on either your desktop or the desktop shared by all users.
</p>

<p>
The shortcuts open the C shell in a 25 line x 80 character window of white characters
on a blue background as a "login" shell, causing it to look for a <a href="46-LoginCsh.htm">
<tt>login.csh</tt></a> file.  To change those selections, right-click on shortcut and
select Properties.
</p>


<h4>
<a name="LoginCsh"></a>Login.csh
</h4>

<p>
<tt>login.csh</tt> is read only by copies of <tt>csh.exe</tt> started with the <tt>-L</tt> option to make them login or root shells.  Typically, this is a new window.  <tt>startup.csh</tt> is read by each new copy of the shell, even if it&rsquo;s invoked as a child of the C shell.
</p>

<p>
The main objective of the <tt>login.csh</tt> file is to let you set up those characteristics that are inheritable from parent to child process but which might not be set up if you&rsquo;re starting from the desktop.  In addition, it lets you do a little special customization of these highest-level shells.
</p>

<p>
The important inheritable characteristics are the environmental variables together with the current directories and current disk settings.
</p>

<h4>
<a name="StartupCsh"></a>Startup.csh
</h4>

<p>
The <tt>startup.csh</tt> file is read by all copies of the C shell, not just login or root level copies.  If you don&rsquo;t want the startup file read, you have to specifically tell it with the <tt>-F</tt> (Faster startup) option.  <tt>startup.csh</tt> is read after <tt>login.csh</tt> whenever both are being read.  This means you can depend on the environmental variables being set up already when the startup file runs.
</p>

<p>
<tt>startup.csh</tt> is a good place to define any aliases or function key definitions you use, since you&rsquo;d probably always want them available but can&rsquo;t pass them in the environment to any child copies of <tt>csh.exe</tt>.  The <tt>startup.csh</tt> file that comes with the shell defines a number of popular aliases including some for getting at some of <tt>cmd.exe</tt>&rsquo;s internal functions; most people add a few of their own.
</p>

<p>
The other thing you may want to add to your <tt>startup.csh</tt> file are settings for some of the set variables that customize how the shell runs.  These aren&rsquo;t passed in the environment.  Look through the lists in the Language Reference section.  Some you may want to set differently than the defaults are <tt>bsdhistory</tt>, <tt>cdhome</tt>, <tt>chgdisk</tt>, <tt>escapesym</tt>, <tt>histchars</tt>, <tt>ignoreerrors</tt>, <tt>ignorestatus</tt>, <tt>noclobber</tt>, <tt>nonomatch</tt>, <tt>nullwords</tt> and <tt>tailstatus</tt>.  A lot of what you choose will depend on whether you&rsquo;re coming from a Windows or a Unix background.
</p>

<h4>
<a name="EnvironmentVariables"></a>Environment variables
</h4>

<p>
It's convenient to set up environmental variables used only by the C shell in <tt>login.csh</tt> rather than via the Control Panel.  It means just one copy of the definitions in one place, so it&rsquo;s easier to make changes and know they won&rsquo;t affect other installed applications.
</p>

<p>
In addition to <tt>PATH</tt>, the environmental variables used by Hamilton C shell include <tt>HOME</tt>, <tt>PROMPT1</tt> and <tt>PROMPT2</tt>, <tt>CSHTITLE</tt>, <tt>TABS</tt>, <tt>CDPATH</tt>, <tt>DRIVEMASK</tt>, <tt>MIXEDCASEDRIVES</tt>, <tt>SWITCHCHARS</tt> and a number of screen color configuration variables.
</p>

<p>
<tt>PROMPT1</tt> or <tt>PROMPT2</tt> or their aliases <tt>prompt1</tt> and <tt>prompt2</tt> control the prompt strings you&rsquo;ll see for a new command or a continuation line.  <tt>CSHTITLE</tt> or its alias, <tt>cshtitle</tt>, give you similar control over the text in the title bar.
</p>

<p>
<tt>TABS</tt> is used by <tt>more</tt>, <tt>head</tt>, <tt>tail</tt> and other utilities to expand out any tab characters it sees into space characters on the screen.   For example, setting <tt>TABS</tt> = 3 means tabstops every 3 character cells.
</p>

<p>
<tt>CDPATH</tt> is used by <tt>cd</tt> and <tt>pushd</tt> to specify other directories in addition to the current directory in which to search for a subdirectory you&rsquo;re trying to change to.  Its format is the same as that as <tt>PATH</tt>:  a list of directories separated by semicolons, but there&rsquo;s no need to list the current directory.
</p>

<p>
<tt>DRIVEMASK</tt> lets you confine the default list of drives you want searched when you wildcard a driveletter, e.g., <tt>*:\hamilton</tt> or reported on by the <tt>du</tt>, <tt>pwd</tt> and <tt>vol</tt> utilities.  The value should be a list of upper- or lower-case alphabetic characters or ranges of characters representing the drives you&rsquo;re interested in.  For example, setting <tt>DRIVEMASK&nbsp;=&nbsp;cf-h</tt> means you want drives <tt>C:</tt>, <tt>F:</tt>, <tt>G:</tt> and <tt>H:</tt> reported, assuming they exist.
</p>

<p>
<tt>MIXEDCASEDRIVES</tt> is used by <tt>ls</tt>, by the shell&rsquo;s <tt>fullname</tt> and wildcarding functions (including filename completion), by the current directory functions (<tt>cd</tt>, <tt>pushd</tt>, <tt>popd</tt> and <tt>dirs</tt>) and by <tt>pwd</tt> to tell which drives you want reported in the actual upper or lower case characters returned by the Windows kernel.  You set <tt>MIXEDCASEDRIVES</tt> just like <tt>DRIVEMASK</tt>, giving it a list of drives.  It&rsquo;s also possible to list UNC names that should be considered mixed case.  For example, typing
</p>

<div class="codesample">setenv MIXEDCASEDRIVES = a-z,\\
</div>

<p>sets all drive <tt>a:</tt> through <tt>z:</tt> and all UNC names on all networked machines as mixed case, which happens to be the default if  is <tt>MIXEDCASEDRIVES</tt> undefined.  Or for example, typing
</p>

<div class="codesample">setenv MIXEDCASEDRIVES = \\alpha,\\beta\d$
</div>

<p>
sets all the drives on the <tt>alpha</tt> machine and only the <tt>d:</tt> drive on <tt>beta</tt> as mixed case.  You can list as many entries in <tt>MIXEDCASEDRIVES</tt>, separated by commas, semicolons or spaces, as you wish.
</p>

<p>
<tt>SWITCHCHARS</tt> is used by the shell and all the utilities supplied with it to indicate what characters you intend as introducing one of the option switches.  By default, the C shell tries to satisfy users coming from both Windows and UNIX backgrounds and will accept either <tt>-</tt> (Windows-style) or <tt>/</tt> (UNIX-style) as introducing an option.  Folks coming from a straight UNIX background may find that inconvenient, particularly if they&rsquo;re used to typing filenames using the forward slash;  <tt>cd&nbsp;/foo</tt> will certainly not do what they want, for example.  The solution is to <tt>setenv SWITCHCHARS = -</tt>, causing only those words that start with <tt>-</tt> to be recognized as options.
</p>

<h4>
<a name="PromptStrings"></a>Prompt strings and title bar
</h4>

<p>
Prompt strings and title bars are fairly personal matters.  This really is beauty in the eye of the beholder only!
</p>

<p>
For the prompt, there are two situations:
</p>

<ol>
<li>
<p>
The main prompt, when the shell expects a new command.  Set this with <tt>PROMPT1</tt>.
</p>
</li>

<li>
<p>
Continuation lines, where the shell is collecting more text before running something.  An example would be whatever commands you type inside a foreach loop.  Set this with <tt>PROMPT2</tt>.
</p>
</li>
</ol>

<p>
When the shell needs to prompt you, it looks at the appropriate <tt>PROMPT<i>x</i></tt> string and evaluates it as if it were looking at a double quoted string.  Any backquoted strings or variable substitutions it finds there are evaluated and whatever results is printed.  Wildcards are not replaced nor is the spacing affected.  It&rsquo;s quite literally double-quoted:  the shell actually pastes double quote characters around the string before passing it to the parser.
</p>

<p>
If you always wanted the same literal text string displayed, that would be easy but probably not too interesting:
</p>

<div class="codesample">579 D% set PROMPT1 = "Hello from CSH!  "
Hello from CSH!  _
</div>

<p>
The difficult part of setting your prompt is remembering that if you want a substitution re-evaluated each time a new prompt is printed, you have to quote the string when you define it to defer the evaluation.  Here&rsquo;s the wrong, then the right way to create an old MSDOS-style prompt with your current directory upper-cased inside rectangular brackets.
</p>

<div class="codesample">Hello from CSH!  set PROMPT1 = "[$upper(cwd)] " # Wrong way
[D:\NICKI] cdd c:\      # Notice that the prompt won't change
[D:\NICKI] set PROMPT1 '[$upper(cwd)] ' # Right way
[C:\] _
</div>

<p>
Notice how we&rsquo;re using the builtin <tt>upper</tt> procedure as if it were a variable substitution with the <tt>$</tt> in front.  When the shell sees it&rsquo;s really a procedure reference, what&rsquo;s inside the parentheses is evaluated as an expression list.  That&rsquo;s why the cwd variable didn&rsquo;t need its own <tt>$</tt>.
</p>

<p>
There&rsquo;s really no limit to what you can put inside a prompt string.  You can have command substitution and special characters. It can even stretch over multiple lines if you put in carriage return/newline character combinations:
</p>

<div class="codesample">[C:\] set PROMPT1 = '`date`^r^n$cwd '
Fri Jul 22 2011 8:57:22.03
c:\ _
</div>

<p>
The title bar environmental variable, <tt>CSHTITLE</tt>, and its shell variable alias, <tt>cshtitle</tt>, work pretty much the same way as the prompt variables.  The title bar is recomputed every time the shell prompts for a new command.  If <tt>CSHTITLE</tt> is null, &ldquo;Hamilton C shell&rdquo; is displayed.  If <tt>CSHTITLE</tt> is explicitly unset, the title bar text inherited at startup is displayed.  Otherwise the <tt>CSHTITLE</tt> string is evaluated as if it were a double-quoted string.
</p>

<p>
The tradeoff to remember in creating a prompt or title string is that whatever you put there is going to be run every time you need a new prompt.  If you make it too complex, it&rsquo;ll still run, but it could be annoyingly slow.  Remember that it takes longer to run external programs than to use shell variables or procedures.  If you want something really unusual, try writing a procedure that calculates and returns the string you want.
</p>

<h4>
<a name="Colors"></a>Colors
</h4>

<p>
All of the screen colors used by the C shell and any of the utilities are completely under your control.  Here are the variables that control the color settings and default values:
</p>

<table>
<tr>
<th>
Name
</th>

<th>
Use
</th>

<th>
Default
</th>
</tr>

<tr>
<td class="langref" style="width:120px">
<tt>
ADDITIONS
</tt>
</td>

<td style="margin-right: 6px">
<p>
Lines added found by <tt>diff</tt>.
</p>
</td>

<td style="width:170px">
<tt>
Bright White on Green
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
COLORS
</tt>
</td>

<td>
<p>
Normal screen colors.
</p>
</td>

<td>
<i>null string</i>
</td>
</tr>

<tr>
<td class="langref">
<tt>
DELETIONS
</tt>
</td>

<td>
<p style="margin-right: 10px">
Lines deleted found by <tt>diff</tt>.
</p>
</td>

<td>
<tt>
Bright White on Red
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
DIRECTORIES
</tt>
</td>

<td>
<p style="margin-right: 10px">
Directories listed by <tt>ls</tt>.
</p>
</td>

<td>
<tt>
Bright
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
DUPLICATES
</tt>
</td>

<td>
<p style="margin-right: 10px">
When filename completion matches more than one name.
</p>
</td>

<td>
<tt>
Green
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
FOREIGNFILES
</tt>
</td>

<td>
<p style="margin-right: 10px">
Filetypes in a <tt>tar</tt> file that have no counterpart on Windows.
</p>
</td>

<td>
<tt>
Bright Red
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
HIGHLIGHT
</tt>
</td>

<td>
<p style="margin-right: 10px">
Current disk or directory.
</p>
</td>

<td>
<tt>
Bright
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
MATCHFAIL
</tt>
</td>

<td>
<p style="margin-right: 10px">
When filename or command completion doesn&rsquo;t match anything.
</p>
</td>

<td>
<tt>
Bright Red
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
MOREEOF
</tt>
</td>

<td>
<p style="margin-right: 10px">
End or Top of File in <tt>more</tt>.
</p>
</td>

<td>
<tt>
Green
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
MOREERROR
</tt>
</td>

<td>
<p style="margin-right: 10px">
Unrecognizable command to <tt>more</tt>.
</p>
</td>

<td>
<tt>
Bright White on Red
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
MOREFILLIN
</tt>
</td>

<td>
<p style="margin-right: 10px">
User response to <tt>more</tt> prompt.
</p>
</td>

<td>
<tt>
Black
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
MOREPROMPT
</tt>
</td>

<td>
<p style="margin-right: 10px">
Prompt line in <tt>more</tt>.
</p>
</td>

<td>
<tt>
Red on White
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
MORETOPMEM
</tt>
</td>

<td>
<p style="margin-right: 10px">
Top of Memory message from <tt>more</tt>.
</p>
</td>

<td>
<tt>
Bright Yellow
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
READONLYDIRS
</tt>
</td>

<td>
<p style="margin-right: 10px">
Directories marked read-only.
</p>
</td>

<td>
<p>
Same as <tt>DIRECTORIES</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>
READONLYFILES
</tt>
</td>

<td>
<p>
Files marked read-only.
</p>
</td>

<td>
<p>
Same as <tt>COLORS</tt>
</p>
</td>
</tr>

<tr>
<td class="langref">
<tt>
SYSTEMDIRS
</tt>
</td>

<td>
<p style="margin-right: 10px">
Directories with the System bit on.
</p>
</td>

<td>
<tt>
Bright Green
</tt>
</td>
</tr>

<tr>
<td class="langref">
<tt>
SYSTEMFILES
</tt>
</td>

<td>
<p style="margin-right: 10px">
Files with the System bit on.
</p>
</td>

<td>
<tt>
Green
</tt>
</td>
</tr>
</table>

<p>
You can choose any color combinations you like from the following set:  <tt>black</tt>, <tt>red</tt>, <tt>green</tt>, <tt>yellow</tt>, <tt>blue</tt>, <tt>magenta</tt> (or <tt>blue red</tt>), <tt>cyan</tt> (or <tt>blue green</tt>) and <tt>white</tt>.
</p>

<p>
Foreground or background colors may also be <tt>bright</tt>, <tt>dim</tt> (meaning simply, &ldquo;not bright&rdquo;) or <tt>reverse</tt>.  The keyword <tt>on</tt> introduces background colors.  <tt>Yellow</tt> is a true yellow only if it&rsquo;s <tt>bright</tt>.  (This is a system limitation not related to the C shell.)
</p>

<p>
The names of the colors and the keywords <tt>bright</tt>, <tt>dim</tt>, <tt>reverse</tt> and <tt>on</tt> are not case sensitive and may be typed in any combination of upper or lower case characters.  The names of the environmental variables themselves may also be mixed case.
</p>

<p>
If a foreground or background color is left unspecified, that plane is considered transparent and inherits the color underneath it.  If <tt>COLORS</tt> is null, the C shell and the utilities use the screen colors they find at startup.  Setting <tt>COLORS=none</tt> turns off all use of colors except in <tt>diff</tt> and <tt>more</tt>, which have modes that aren&rsquo;t sensible without colors.
</p>

<p>
You can set the colors either from within the C shell itself by simply typing the appropriate setenv statements or by including them in your <tt>login.csh</tt> or <tt>startup.csh</tt> file.
</p>

<p>
These settings can also be made through the Control Panel&rsquo;s System applet.
</p>

<h4>
<a name="InitialDirectory"></a>Initial current directories
</h4>

<p>
The <tt>login.csh</tt> file is also a convenient place to set up all you initial current directories.  The Start Programs menu lets you specify a particular current disk and directory but not what your current directories are on the other disks when you start up; the current directories on those other disks are always <tt>\</tt>.  Generally, people find it convenient to be able to choose something else and they do this by putting the appropriate <tt>cd</tt> statements in <tt>login.csh.</tt>
</p>

<p>
The final use for <tt>login.csh</tt> is in setting up certain local variables that you want different in the login shell.  For example, a login shell normally dumps a history list when it exits; you may want to turn this off by setting <tt>savehist&nbsp;=&nbsp;0</tt>.  Also, you may not want an end-of-file (from accidentally hitting  <kbd>Ctrl</kbd>-<kbd>Z</kbd> too many times) to cause the shell to exit; you can tell to insist on an exit statement by setting <tt>ignoreeof&nbsp;=&nbsp;1</tt>.
</p>

<h4>
<a name="ChangeDirectory"></a>Change directory behavior
</h4>

<p>
If your background is Windows, you&rsquo;ll probably want cd to just report the current directory if you don&rsquo;t give it an argument.  Those with a UNIX background may want it to mean &ldquo;change to the home disk and directory.&rdquo;  That&rsquo;s determined with the <tt>cdhome</tt> variable; the default is a Windows-style reporting only.
</p>

<p>
Another customization you may to do is to intercept <tt>cd</tt> so that you can capture your last current directory whenever you change directories:
</p>

<div class="codesample">proc cd(dest)
   # Capture the last working directory
   @ lwd = cwd
   if ($dest == "") then
      chdir
   else
      chdir $dest
   end
end
</div>

<h4>
<a name="BerkelyHistoryAndEscapes"></a>Berkeley-style history and escapes
</h4>

<p>
Also, if your fingers learned to use the <tt>!-n</tt> style of history references on a Berkeley UNIX system, you&rsquo;ll want to set  <tt>bsdhistory&nbsp;=&nbsp;1</tt>.  True die-hard (and perhaps daring) former UNIX users may want try setting the <tt>escapesym</tt> back to a backslash; it&rsquo;ll work with the C shell but you&rsquo;re on your own with other applications or tools.
</p>

<h4>
<a name="BerkeleyCompatibilityMode"></a>Berkeley compatibility mode
</h4>

<p>
Hamilton C shell does implement a substantial number of significant improvements over the original Berkeley C shell.  By and large, we expect most users to find these changes welcome.  But if you&rsquo;re trying to run a script developed using the Berkeley C shell or if you simply want get a more precise &ldquo;Berkeley mode&rdquo; interactively, you can do that.
</p>

<p>
Following a common convention on Unix that the first line of a script can identify the language processor to be used with it, if the C shell encounters a script that starts with either of the following lines:
</p>

<div class="codesample">#!/bin/csh
#!/usr/bin/csh
</div>

<p>
it will shift to a fairly precise emulation of the original Berkeley C shell.
</p>

<p>
To enter this mode for interactive work, start the C shell with the <tt>-B</tt> (Berkeley compatibility) option.
</p>

<p>
For more details on differences between the Hamilton and Berkeley C shells and on Berkeley compatibility mode, please refer to the <a href="55-Compatibility.htm">Compatibility</a> section.
</p>

<h4>
<a name="ErrorHandling"></a>Error handling
</h4>

<p>
<tt>ignoreerrors</tt>, <tt>ignorestatus</tt>, <tt>noclobber</tt>, <tt>nonomatch</tt> and <tt>nullwords</tt> let you tailor how the shell responds to various exception situations.  They let you determine whether you think certain things are errors.  For example, should a child process that returns a non-zero return code but otherwise seems to run okay be considered an error?  If you set <tt>ignorestatus</tt> = 0, it will be.  Similarly, <tt>noclobber</tt> lets you intercept accidental attempts to overwrite an existing file with i/o redirection.  <tt>nonomatch</tt> tells what should happen if wildcarding doesn&rsquo;t match anything.  <tt>nullwords</tt> tells whether you think it&rsquo;s an error to use a subscript that&rsquo;s off the end of an array.
</p>

<h4>
<a name="COMSPEC"></a>Calling the C shell from other applications
</h4>

<p>
Many applications, e.g., editors, make utilities and so on, depend on being able to call up the command processor.  For example, make uses <tt>cmd.exe</tt> to actually process each command in the make file that it determines should be run.  Most editors (and many other applications) provide a way of temporarily suspending themselves and invoking <tt>cmd.exe</tt> so you can run a few  commands and then exit to return back to the editor.
</p>

<p>
Usually, these applications look at the <tt>COMSPEC</tt> environmental variable to determine the full pathname for <tt>cmd.exe</tt> (or <tt>command.com</tt> under Windows 9x).  If, like <tt>nmake</tt>, they&rsquo;re just calling it with a single command on the command line, they&rsquo;ll probably use the  <tt>cmd.exe&nbsp;/C</tt> option.
</p>

<p>
If you&rsquo;d like to use the C shell instead of <tt>cmd.exe</tt> with these applications, set <tt>COMSPEC</tt> to point to the C shell instead and use the <tt>CSHOPTIONS</tt> environmental variable to tell the C shell to interpret the <tt>/C</tt> option flag in a way that&rsquo;s compatible with the meaning <tt>cmd.exe</tt> would attach to it:
</p>

<div class="codesample">setenv COMSPEC = D:\Program Files\Hamilton C shell 2012 x64\Bin\csh.exe
setenv CSHOPTIONS = -X
</div>

<p>
When the C shell starts up, if it discovers that <tt>COMSPEC</tt> points to itself, it will look through the search path to find the real <tt>cmd.exe</tt>.  This is to make sure it will still be able to run <tt>.cmd</tt> files.  Since the <tt>-X</tt> option is a toggling option, you can still get at the original meaning of the <tt>-C</tt> option by typing <tt>-XC</tt> to toggle back.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="46-LoginCsh.htm">Login.csh</a><br/>
<a href="48-CustomizingTheShell.htm">Customizing the shell</a><br/>
<a href="Utilities/csh.htm">C shell command line options</a><br/>
<a href="21-Aliases.htm">Aliases</a><br/>
<a href="52-PredefinedAliases.htm">Predefined aliases</a><br/>
<a href="20-Procedures.htm">Procedures</a><br/>
<a href="14-Aliases.htm"><i>Tutorial:</i> Aliases</a><br/>
<a href="15.3-Procedures.htm"><i>Tutorial:</i>Procedures</a><br/>
</p>

<h3>
<small><a href="47-StartupCsh.htm">Previous</a> |
<a href="49-BuiltinProcedures.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/Installer-installation-folder.png">
				<img src="Images/Screenshots/Installer-installation-folder.png"
					alt="Installation folder" class="shadow"/>
			</a>
			<p>
			You can choose where the C shell is installed and whether it's for everyone, meaning
			it'll appear in the Start menus for all users, or just for yourself.
			</p>
			
			<a href="Images/Screenshots/HamiltonCshellStartMenuGroup.png">
				<img src="Images/Screenshots/HamiltonCshellStartMenuGroup.png"
					alt="Hamilton C shell distribution directory contents" class="shadow"/>
			</a>
			<p>
			During installation, a Hamilton C shell group is created in the Start menu
			with shortcuts to open a local copy of this User Guide and for starting
			the C shell.  Another shortcut to the C shell is created on the desktop.
			Notice that multiple versions can be installed side-by-side.
			</p>

			<a href="Images/Screenshots/HamiltonCshellIconShortcut.png">
				<img src="Images/Screenshots/HamiltonCshellShortcut.png"
					alt="Hamilton C shell shortcut properties" class="shadow"/>
			</a>
			<p>
			The shortcuts invoke the C shell as <a href="Utilities/csh.htm"><tt>csh&nbsp;-L</tt></a>.
			The <tt>-L</tt> option starts the C shell as a "login" shell, causing it to look for
			a <a href="46-LoginCsh.htm"><tt>login.csh</tt></a> file.  That in turn causes
			the C shell set up its <a href="40-EnvironmentVariables.htm#PATH">
			<tt>PATH</tt></a> variable so it can find its <a href="51-ExternalUtilities.htm">
			<tt>Bin</tt></a> and <a href="53-Samples.htm"><tt>Samples</tt></a> directories.
			</p>

			<a href="Images/Screenshots/HamiltonCshellIconShortcutLayout.png">
				<img src="Images/Screenshots/HamiltonCshellShortcutLayout.png"
					alt="Hamilton C shell shortcut properties layout tab" class="shadow"/>
			</a>
			<p>
			The C shell opens in in a 25 lines x 80 characters window into
			a 1000 lines x 80 characters buffer.  This can be changed to
			anything you like.
			</p>

			<a href="Images/Screenshots/HamiltonCshellIconShortcutColors.png">
				<img src="Images/Screenshots/HamiltonCshellShortcutColors.png"
					alt="Hamilton C shell shortcut properties colors tab" class="shadow"/>
			</a>
			<p>
			The window opens with white characters on a blue background.  This
			also can be changed to anything you like.
			</p>

		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Builtin procedures
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Builtin procedures
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm"><b>Builtin procedures</b></a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Builtin procedures<br/>
<small><a href="48-CustomizingTheShell.htm">Previous</a> |
<a href="50-BuiltinUtilities.htm">Next</a></small>
</h3>

<p></p>

<table>

<tr>
<th style="width: 190px">
Name
</th>
<th>
Function
</th>
</tr>

<tr>
<td colspan="2" class="span">
Filename Functions
</td>
</tr>

<tr>
<td class="langref">
<a name="childpath"></a><tt>childpath(<var>p</var>,
<var>c</var>)</tt>
</td>
<td>
<p>
Test whether filename <tt><var>c</var></tt> could be in a subdirectory of <tt><var>p</var></tt>.
 (Does not test for actual existence of either <tt><var>c</var></tt> or <tt><var>p</var></tt>.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="driveno"></a><tt>driveno(<var>p</var>)</tt>
</td>
<td>
<p>
Drive number implied by pathname <tt><var>p</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="fullpath"></a><tt>fullpath(<var>p</var>)</tt>
</td>
<td>
<p>
Fully resolve pathname <tt><var>p</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="fullmixedpathpath"></a><tt>fullmixedpath(<var>p</var>)</tt>
</td>
<td>
<p>
Fully resolve pathname <tt><var>p</var></tt> and set it into the mixed-case
representation actually stored in the filesystem.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="longname"></a><tt>longname(<var>p</var>)</tt>
</td>
<td>
<p>
Return the long filename corresponding to the path <tt><var>p</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="mixedpath"></a><tt>mixedpath(<var>p</var>)</tt>
</td>
<td>
<p>
Resolve pathname <tt><var>p</var></tt> into the precise mixed-case representation
actually stored in the filesystem.  Any shortname segments will be expanded
into the long form.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="samepath"></a><tt>samepath(<var>a</var>, <var>b</var>)</tt>
</td>
<td>
<p>
Test whether two filenames, <tt><var>a</var></tt> and <tt><var>b</var></tt>, point to the
same file.  The calculation is done by fully resolving the two
names and comparing them but can be mistaken if the two paths
are based on different UNC names which refer to the same directories.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="shortnamepath"></a><tt>shortname(<var>p</var>)</tt>
</td>
<td>
<p>
Return the 8.3 short filename corresponding to the path <tt><var>p</var></tt>,
assuming there is one.
</p>
</td>
</tr>




<tr>
<td colspan="2" class="span">
Math Functions
</td>
</tr>

<tr>
<td class="langref">
<a name="abs"></a><tt>abs(<var>x</var>)</tt>
</td>
<td>
<p>
Absolute value
</p>
</td>
</tr>

<tr>
<td class="langref" style="text-align: left">
<a name="asin"></a>
<a name="atan"></a>
<a name="cos"></a>
<a name="sin"></a>
<a name="tan"></a>
<tt>acos(<var>x</var>)
asin(<var>x</var>)
atan(<var>x</var>)
cos(<var>x</var>)
sin(<var>x</var>)
tan(<var>x</var>)</tt>
</td>
<td>
<p>
Trigonometric functions
</p>
</td>
</tr>

<tr>
<td class="langref" style="text-align: left">
<a name="cosh"></a>
<a name="sinh"></a>
<a name="tanh"></a>
<tt>cosh(<var>x</var>)
sinh(<var>x</var>)
tanh(<var>x</var>)</tt>
</td>
<td>
<p>
Hyperbolic functions
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ceil"></a>
<tt>ceil(<var>x</var>)</tt>
</td>
<td>
<p>
Ceiling (lowest integer &gt;= <tt><var>x</var></tt>)
</p>
</td>
</tr>

<tr>
<td class="langref" style="text-align: left">
<a name="exp"></a>
<tt>exp(<var>x</var>)
log(<var>x</var>)
log2(<var>x</var>)
log10(<var>x</var>)</tt>
</td>
<td>
<p>
Exponential and logarithmic functions
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="floor"></a>
<tt>floor(<var>x</var>)</tt>
</td>
<td>
<p>
Floor (highest integer &lt;= <tt><var>x</var></tt>)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="round"></a>
<tt>round(<var>x</var>)</tt>
</td>
<td>
<p>
floor(<tt><var>x</var></tt> + 0.5)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="sqrt"></a>
<tt>sqrt(<var>x</var>)</tt>
</td>
<td>
<p>
Square root
</p>
</td>
</tr>

<tr>
<td colspan="2" class="span">
String Functions
</td>
</tr>

<tr>
<td class="langref">
<a name="ansi"></a><tt>ansi(<var>color</var>)</tt>
</td>
<td>
<p>
Return an ANSI escape sequence which will
produce the specified screen colors.  If the argument is ambiguous,
e.g., simply &quot;bright,&quot; it's taken as a modification
of the default colors specified by the <tt>COLORS</tt> variable.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="char"></a>
<tt>char(<var>i</var>)</tt>
</td>
<td>
<p>
Return the character corresponding to the numeric value <tt><var>i</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="code"></a>
<tt>code(<var>c</var>)</tt>
</td>
<td>
<p>
Return the numeric encoding of the character <tt><var>c</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref" style="text-align: left">
<a name="concat"></a>
<tt>concat(<var>a</var>, <var>b</var>, </tt>...<tt>)</tt>
</td>
<td>
<p>
Concatenation of a series of strings.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="isinteger"></a>
<tt>isinteger(<var>x</var>)</tt>
</td>
<td>
<p>
Test whether <tt><var>x</var></tt> is an integer.  (Remember that null strings
and strings consisting only of white space are considered equal
to 0.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="isnumber"></a>
<tt>isnumber(<var>x</var>)</tt>
</td>
<td>
<p>
Test whether <tt><var>x</var></tt> is a number.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="printf"></a>
<tt>printf(<var>fmt</var>, </tt>...<tt> )</tt>
</td>
<td>
<p>
Perform C language-style print formatting,
returning the result as a string.

	<h5>
	Argument formats
	</h5>
	
	<table class="plain">
	<tr>
	<td style="width: 50px">
	<tt>%c</tt>
	</td>
	<td>
	<p>
	Single character.
	</p>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%d</tt>
	</td>
	<td>
	<p>
	Decimal number.
	</p>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%e</tt>
	</td>
	<td>
	<tt>[-]<var>d</var>.<var>dddddd</var>e[+-]<var>ddd</var></tt>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%f</tt>
	</td>
	<td>
	<tt>[-]<var>ddd</var>.<var>dddddd</var></tt>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%g</tt>
	</td>
	<td>
	<p>
	<tt>%e</tt> or <tt>%f</tt> formatting, whichever is shorter.
	</p>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%o</tt>
	</td>
	<td>
	<p>
	Unsigned octal number.
	</p>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%s</tt>
	</td>
	<td>
	<p>
	String.
	</p>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%x</tt>
	</td>
	<td>
	<p>
	Unsigned hexadecimal number.
	</p>
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>%%</tt>
	</td>
	<td>
	<p>
	Literal <tt>%</tt> character.
	</p>
	</td>
	</tr>
	</table>
	
	<h5>
	Options after the <tt>%</tt>
	</h5>
	
	<table class="plain">
	<tr>
	<td style="width: 50px">
	<tt>-</tt>
	</td>
	<td>
	Left-justify expression in its field.
	</td>
	</tr>
	
	<tr>
	<td>
	<var>width</var>
	</td>
	<td>
	Pad field to this width as needed; leading 0 pads with zeros.
	</td>
	</tr>
	
	<tr>
	<td>
	<tt>.</tt><var>prec</var>
	</td>
	<td>
	Maximum string width or digits to right of decimal point.
	</td>
	</tr>
	</table>

</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="reverse"></a>
<tt>reverse(<var>s</var>)</tt>
</td>
<td>
<p>
Reverse the order of characters in <tt><var>s</var></tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="strindex"></a>
<tt>strindex(<var>a</var>, <var>b</var>)</tt>
</td>
<td>
<p>
Return the position in <tt><var>a</var></tt> of the first occurrence of <tt><var>b</var></tt>.
(<tt>0</tt> means <tt><var>b</var></tt> was not found.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="strlen"></a>
<tt>strlen(<var>s</var>)</tt>
</td>
<td>
<p>
Number of characters in <tt><var>s</var></tt>, represented as a string.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="substr"></a>
<tt>substr(<var>s</var>, <var>b</var>, <var>i</var>)</tt>
</td>
<td>
<p>
Substring of length <tt><var>i</var></tt> beginning at <tt><var>b</var></tt>th character
of <tt><var>s</var></tt>.  <tt><var>i</var> = 0</tt> means &quot;rest of <tt><var>s</var></tt>&quot;)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="upper"></a>
<tt>upper(<var>s</var>)
lower(<var>s</var>)</tt>
</td>
<td>
<p>
Translate a string to all upper- or all lower-case.
</p>
</td>
</tr>

<tr>
<td colspan="2" class="span">
<a name="safe"></a>Defined in <a href="47-StartupCsh.htm">Startup.csh</a>
</td>
</tr>

<tr>
<td class="langref">
<a name="help"></a>
<tt>help(<var>errno</var>)</tt>
</td>
<td>
<p>
Provides a help mechanism that gives the Win32 error message corresponding
to an error code or runs the Windows <tt>help.exe</tt> command for
anything else.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="safecopy"></a>
<tt>safecopy(<var>files</var>)</tt>
</td>
<td>
<p>
Wrapper used by the <a href="52-PredefinedAliases.htm#copy"><tt>copy</tt></a> alias
to run the Windows <tt>copy</tt> command with wildcarding turned off.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="safedel"></a>
<tt>safedel(<var>files</var>)</tt>
</td>
<td>
<p>
Wrapper used by the <a href="52-PredefinedAliases.htm#del"><tt>del</tt></a> alias
to run the Windows <tt>del</tt> command with wildcarding turned off.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="saferename"></a>
<tt>saferename(<var>files</var>)</tt>
</td>
<td>
<p>
Wrapper used by the <a href="52-PredefinedAliases.htm#ren"><tt>ren</tt></a> alias
to run the Windows <tt>rename</tt> command with wildcarding turned off.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="safexcopy"></a>
<tt>safexcopy(<var>files</var>)</tt>
</td>
<td>
<p>
Wrapper used by the <a href="52-PredefinedAliases.htm#xcopy"><tt>xcopy</tt></a> alias
to run the Windows <tt>xcopy</tt> command with wildcarding turned off.
</p>
</td>
</tr>



</table>

<h3>
<small><a href="48-CustomizingTheShell.htm">Previous</a> |
<a href="50-BuiltinUtilities.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Builtin utilities
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Builtin utilities
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">


<h3>
Builtin utilities<br/>
<small><a href="49-BuiltinProcedures.htm">Previous</a> |
<a href="51-ExternalUtilities.htm">Next</a></small>
</h3>

<p>
All builtin utilities self-document with the <tt>-h</tt> option.
</p>

<table>

<tr>
<th style="width: 120px">
Command
</th>
<th>
Function
</th>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cd.htm"><tt>cd</tt></a>
</td>
<td>
Change working directory.  Optionally, change disk.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/chcp.htm"><tt>chcp</tt></a>
</td>
<td>
Change code page.  (Not implemented.)
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/chdir.htm"><tt>chdir</tt></a>
</td>
<td>
<p>
A synonym for <tt>cd</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cls.htm"><tt>cls</tt></a>
</td>
<td>
Clear the screen.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/dirs.htm"><tt>dirs</tt></a>
</td>
<td>
Print the directory stack.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/echo.htm"><tt>echo</tt></a>
</td>
<td>
Echo arguments to stdout.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/eval.htm"><tt>eval</tt></a>
</td>
<td>
Defer parsing of the word list until the evaluation phase.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/hashstat.htm"><tt>hashstat</tt></a>
</td>
<td>
Print path hash statistics.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/heapstat.htm"><tt>heapstat</tt></a>
</td>
<td>
Print heap usage statistics.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/history.htm"><tt>history</tt></a>
</td>
<td>
Display the history list.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/kill.htm"><tt>kill</tt></a>
</td>
<td>
Kill background activity.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/popd.htm"><tt>popd</tt></a>
</td>
<td>
Pop directory stack.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/ps.htm"><tt>ps</tt></a>
</td>
<td>
List process and thread status.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/pushd.htm"><tt>pushd</tt></a>
</td>
<td>
Push a new current directory on the directory
stack or exchange the top two items.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/rehash.htm"><tt>rehash</tt></a>
</td>
<td>
Rehash the path directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/rotd.htm"><tt>rotd</tt></a>
</td>
<td>
Rotate the directory stack.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/sleep.htm"><tt>sleep</tt></a>
</td>
<td>
Sleep for a specified period.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/source.htm"><tt>source</tt></a>
</td>
<td>
Read commands from a file.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/unhash.htm"><tt>unhash</tt></a>
</td>
<td>
Turn off path list hashing.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/verify.htm"><tt>verify</tt></a>
</td>
<td>
Turn on write verification mode.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/wait.htm"><tt>wait</tt></a>
</td>
<td>
Wait for children to complete.
</td>
</tr>
</table>

<h3>
<small><a href="49-BuiltinProcedures.htm">Previous</a> |
<a href="51-ExternalUtilities.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		External utilities
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				External utilities
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
External utilities<br/>
<small><a href="50-BuiltinUtilities.htm">Previous</a> |
<a href="52-PredefinedAliases.htm">Next</a></small>
</h3>

<p></p>
<table>

<tr>
<th style="width: 120px">
Command
</th>
<th>
Function
</th>
</tr>

<tr>
<td class="langref">
<a href="Utilities/binedit.htm"><tt>binedit</tt></a>
</td>
<td>
Binary edit.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cat.htm"><tt>cat</tt></a>
</td>
<td>
Concatenate files.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/chgrp.htm"><tt>chgrp</tt></a>
</td>
<td>
Change the group for files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/chmod.htm"><tt>chmod</tt></a>
</td>
<td>
Change mode bits of file.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/chown.htm"><tt>chown</tt></a>
</td>
<td>
Change the ownership of files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cmp.htm"><tt>cmp</tt></a>
</td>
<td>
Binary compare two files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cp.htm"><tt>cp</tt></a>
</td>
<td>
Copy files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cron.htm"><tt>cron</tt></a>
</td>
<td>
Run commands at specified times.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/csh.htm"><tt>csh</tt></a>
</td>
<td>
The C shell itself.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/cut.htm"><tt>cut</tt></a>
</td>
<td>
Cut out selected fields of each line of text.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/des.htm"><tt>des</tt></a>
</td>
<td>
Encrypt or decrypt data using the Data
Encryption Standard (DES).
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/date.htm"><tt>date</tt></a>
</td>
<td>
Display the date and time.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/diff.htm"><tt>diff</tt></a>
</td>
<td>
Compare files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/dim.htm"><tt>dim</tt></a>
</td>
<td>
Discard any ansi escape sequences in the input stream.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/dirbox.htm"><tt>dirbox</tt></a>
</td>
<td>
Directory selection dialog box.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/directory.htm"><tt>directory</tt></a>
</td>
<td>
Find a special folder location.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/dskread.htm"><tt>dskread</tt></a>
</td>
<td>
Read raw sectors from a disk.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/dskwrite.htm"><tt>dskwrite</tt></a>
</td>
<td>
Write raw sectors to a disk.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/du.htm"><tt>du</tt></a>
</td>
<td>
Display disk usage.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/env.htm"><tt>env</tt></a>
</td>
<td>
Execute a command with a new environment.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/exec.htm"><tt>exec</tt></a>
</td>
<td>
Run an arbitrary command as a separate process.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/fgrep.htm"><tt>fgrep</tt></a>
</td>
<td>
<p>
Fast string search (fast <tt>grep</tt>) of text files.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/filebox.htm"><tt>filebox</tt></a>
</td>
<td>
File selection dialog box.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/getopt.htm"><tt>getopt</tt></a>
</td>
<td>
Parse command-line options.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/grep.htm"><tt>grep</tt></a>
</td>
<td>
Regular expression pattern search of text files.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/head.htm"><tt>head</tt></a>
</td>
<td>
Copy the first few lines or bytes of a file to stdout.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/label.htm"><tt>label</tt></a>
</td>
<td>
Read/Write the volume label.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/ln.htm"><tt>ln</tt></a>
</td>
<td>
Hard link a file to a new name.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/ls.htm"><tt>ls</tt></a>
</td>
<td>
List directory contents.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/mkdir.htm"><tt>mkdir</tt></a>
</td>
<td>
Make a new directory.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/more.htm"><tt>more</tt></a>
</td>
<td>
<p>
A better <tt>more</tt> utility.  (Able to search forward or
backward or to a specific line.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/mt.htm"><tt>mt</tt></a>
</td>
<td>
Manipulate the tape device.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/mv.htm"><tt>mv</tt></a>
</td>
<td>
Move files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/newer.htm"><tt>newer</tt></a>
</td>
<td>
Test whether first file is newer than the others.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/older.htm"><tt>older</tt></a>
</td>
<td>
Test whether first file is older than the others.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/open.htm"><tt>open</tt></a>
</td>
<td>
Open a file using the associated application.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/paste.htm"><tt>paste</tt></a>
</td>
<td>
Merge corresponding or subsequent lines.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/pwd.htm"><tt>pwd</tt></a>
</td>
<td>
Print the working directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/random.htm"><tt>random</tt></a>
</td>
<td>
Generate cryptographically secure pseudorandom numbers.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/rm.htm"><tt>rm</tt></a>
</td>
<td>
Remove files or directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/rmdir.htm"><tt>rmdir</tt></a>
</td>
<td>
Remove directories.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/sed.htm"><tt>sed</tt></a>
</td>
<td>
Stream editor.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/setrows.htm"><tt>setrows</tt></a>
</td>
<td>
Set or report the number of rows in the display window.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/setwin.htm"><tt>setwin</tt></a>
</td>
<td>
Set or report the current window's show state.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/shortcut.htm"><tt>shortcut</tt></a>
</td>
<td>
Create or report a shortcut.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/showdesk.htm"><tt>showdesk</tt></a>
</td>
<td>
Show the desktop.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/sort.htm"><tt>sort</tt></a>
</td>
<td>
Sort and/or merge files.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/split.htm"><tt>split</tt></a>
</td>
<td>
Split a large file into equal-sized chunks.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/strings.htm"><tt>strings</tt></a>
</td>
<td>
Extract ASCII strings from a file.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/su.htm"><tt>su</tt></a>
</td>
<td>
Run a command as another user.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/sum.htm"><tt>sum</tt></a>
</td>
<td>
Checksum the contents of a file.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/tabs.htm"><tt>tabs</tt></a>
</td>
<td>
Expand or unexpand tabs.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/tail.htm"><tt>tail</tt></a>
</td>
<td>
Copy the last few lines or bytes of a file to stdout.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/tar.htm"><tt>tar</tt></a>
</td>
<td>
Read/Write UNIX TAR and CPIO
format files and tapes.  (Tapes not supported under Windows 9x.)
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/tee.htm"><tt>tee</tt></a>
</td>
<td>
Pipe fitting.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/touch.htm"><tt>touch</tt></a>
</td>
<td>
Update the time-stamp on a file.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/tr.htm"><tt>tr</tt></a>
</td>
<td>
Translate characters.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/uniq.htm"><tt>uniq</tt></a>
</td>
<td>
Report unique lines in text files.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/uudecode.htm"><tt>uudecode</tt></a>
</td>
<td>
<p>
<tt>uudecode</tt> binary data.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/uuencode.htm"><tt>uuencode</tt></a>
</td>
<td>
<p>
<tt>uuencode</tt> binary data for email transmission.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/ver.htm"><tt>ver</tt></a>
</td>
<td>
Display the current system and Hamilton C shell version numbers.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/vol.htm"><tt>vol</tt></a>
</td>
<td>
Display the disk volume label.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/wc.htm"><tt>wc</tt></a>
</td>
<td>
Count lines, words and characters.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/whereis.htm"><tt>whereis</tt></a>
</td>
<td>
<p>
Tell which <tt>PATH</tt> directory a given executable is in.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/whoami.htm"><tt>whoami</tt></a>
</td>
<td>
Print the current domain and user names.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/xargs.htm"><tt>xargs</tt></a>
</td>
<td>
Construct argument list(s) and invoke utility.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/xd.htm"><tt>xd</tt></a>
</td>
<td>
Hex dump a file to stdout.
</td>
</tr>

<tr>
<td class="langref">
<a href="Utilities/xor.htm"><tt>xor</tt></a>
</td>
<td>
XOR files to stdout.
</td>
</tr>

</table>

<p>
All external utilities except <tt>whereis</tt> self-document with
the <tt>-h</tt> option.  Any external utility may be renamed simply
by renaming the executable file.
</p>

<h3>
<small><a href="50-BuiltinUtilities.htm">Previous</a> |
<a href="52-PredefinedAliases.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Predefined aliases
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Predefined aliases
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm"><b>Predefined aliases</b></a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Predefined aliases<br/>
<small><a href="51-ExternalUtilities.htm">Previous</a> |
<a href="53-Samples.htm">Next</a></small>
</h3>

<p>
These aliases are predefined in the default <a href="47-StartupCsh.htm">
<tt>startup.csh</tt></a>.
</p>

<table>

<tr>
<th style="width: 70px">
Alias
</th>
<th style="width: 190px">
Definition
</th>
<th>
Function
</th>
</tr>

<tr>
<td class="langref">
<a name="app"></a>
<tt>app</tt>
</td>
<td class="langref">
<tt>cat &gt;&gt;</tt>
</td>
<td>
<p>
Append to a file.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="assoc"></a>
<tt>assoc</tt>
</td>
<td class="langref">
<tt>cmd /c '"assoc ^!^*"'</tt>
</td>
<td>
<p>
List file associations.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="beep"></a>
<tt>beep</tt>
</td>
<td class="langref">
<tt>eval echo -n ^a</tt>
</td>
<td>
<p>
Beep sound.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="breaksw"></a>
<tt>breaksw</tt>
</td>
<td class="langref">
<tt>break</tt>
</td>
<td>
<p>
Older BSD 4.3 name for a break statement inside a <tt>switch</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="cdd"></a>
<tt>cdd</tt>
</td>
<td class="langref">
<tt>cd +c</tt>
</td>
<td>
<p>
Change the directory and disk in one command.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="copy"></a>
<tt>copy</tt>
</td>
<td class="langref">
<tt>local s; @&nbsp;s&nbsp;=&nbsp;$nowild; @&nbsp;nowild&nbsp;=&nbsp;1; <a href="49-BuiltinProcedures.htm#safe">safecopy</a></tt>
</td>
<td>
<p>
Invoke the standard Windows <tt>copy</tt> command with shell
wildcarding turned off so <tt>copy</tt> will work sensibly.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="date"></a>
<tt>date</tt>
</td>
<td class="langref">
<tt>dt</tt>
</td>
<td>
<p>
Display the current time and date using the <a href="Utilities/date.htm">date</a> utility, stored as <tt>dt.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="del"></a>
<tt>del</tt>
</td>
<td class="langref">
<tt>local s; @&nbsp;s&nbsp;=&nbsp;$nowild; @&nbsp;nowild&nbsp;=&nbsp;1; <a href="49-BuiltinProcedures.htm#safe">safedel</a></tt>
</td>
<td>
<p>
Invoke the Windows <tt>del</tt> command with shell wildcarding turned
off so <tt>del&nbsp;*.*</tt> will still produce
the &ldquo;Are you sure?&rdquo; message.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="di"></a>
<tt>di</tt>
</td>
<td class="langref">
<tt>diff -b!</tt>
</td>
<td>
<p>
Run the <a href="Utilities/diff.htm"><tt>diff</tt></a> command, ignoring white space differences
and using color to highlight the changes.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="dir"></a>
<tt>dir</tt>
</td>
<td class="langref">
<tt>cmd /c dir</tt>
</td>
<td>
<p>
Invoke the <tt>cmd.exe</tt> <tt>dir</tt> command processor.
(Alternately, you may wish to intercept <tt>dir</tt>
the same way <tt>copy</tt> or <tt>del</tt> are done,
turning off shell wildcarding before running the command.)
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="duc"></a>
<tt>duc</tt>
</td>
<td class="langref">
<tt>du -c</tt>
</td>
<td>
<p>
Disk usage for the current disk only.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="dumphist"></a>
<tt>dumphist</tt>
</td>
<td class="langref">
<tt>history -s &gt; ~\history.csh</tt>
</td>
<td>
<p>
Dump out the history list.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="endif"></a>
<tt>endif</tt>
</td>
<td class="langref">
<tt>end</tt>
</td>
<td>
<p>
Older BSD 4.3 name for the end of an <tt>if</tt> statement.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="endsw"></a>
<tt>endsw</tt>
</td>
<td class="langref">
<tt>end</tt>
</td>
<td>
<p>
Older BSD 4.3 name for the end of <tt>switch</tt> statement.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="erase"></a>
<tt>erase</tt>
</td>
<td class="langref">
<tt>del</tt>
</td>
<td>
<p>
Alternate name for <tt>del</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="f"></a>
<tt>f</tt>
</td>
<td class="langref">
<tt>fgrep</tt>
</td>
<td>
<p>
Quicker name for <tt>fgrep</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="fi"></a>
<tt>fi</tt>
</td>
<td class="langref">
<tt>fgrep -i</tt>
</td>
<td>
<p>
<tt>fgrep</tt> case-independent.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="fn"></a>
<tt>fn</tt>
</td>
<td class="langref">
<tt>fgrep -n</tt>
</td>
<td>
<p>
<tt>fgrep</tt> and print line numbers.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ftype"></a>
<tt>ftype</tt>
</td>
<td class="langref">
<tt>cmd /c '"ftype ^!^*"'</tt>
</td>
<td>
<p>
List file associations.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="g"></a>
<tt>g</tt>
</td>
<td class="langref">
<tt>grep</tt>
</td>
<td>
<p>
Quicker name for <tt>grep</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="gi"></a>
<tt>gi</tt>
</td>
<td class="langref">
<tt>grep -i</tt>
</td>
<td>
<p>
<tt>grep</tt> case-independent.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="gvim"></a>
<tt>gvim</tt>
</td>
<td class="langref">
<tt>env -D SHELL= gvim.exe</tt>
</td>
<td>
<p>
Delete the <a href="40-EnvironmentVariables.htm#SHELL"><tt>SHELL</tt></a> variable from the
environment passed to the graphical version of the <a href="54-AwkPerlAndVi.htm#vi">Vim editor</a>
editor.  Vim only knows how to pass commands to <tt>cmd.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="h"></a>
<tt>h</tt>
</td>
<td class="langref">
<tt>history</tt>
</td>
<td>
<p>
Quicker name for <tt>history</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="help"></a>
<tt>help</tt>
</td>
<td>
</td>
<td>
<p>
A procedure using <tt>winerror</tt> (in the <tt>samples</tt> directory)
to print the message corresponding to the return code from
the last command.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="home"></a>
<tt>home</tt>
</td>
<td class="langref">
<tt>cdd ~</tt>
</td>
<td>
<p>
Change to the home disk and directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="killp"></a>
<tt>killp</tt>
</td>
<td class="langref">
<tt>kill -x! ^`pss ^!^*^`:0</tt>
</td>
<td>
<p>
kill any matching processes.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="label"></a>
<tt>label</tt>
</td>
<td class="langref">
<tt>hlabel</tt>
</td>
<td>
<p>
Read/write the volume label.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ld"></a>
<tt>ld</tt>
</td>
<td class="langref">
<tt>ls -a +D -.</tt>
</td>
<td>
<p>
List only the subdirectories.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ldr"></a>
<tt>ldr</tt>
</td>
<td class="langref">
<tt>ls -Ldr</tt>
</td>
<td>
<p>
List recursively by date
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ll"></a>
<tt>ll</tt>
</td>
<td class="langref">
<tt>ls -L</tt>
</td>
<td>
<p>
List directories, long format.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="loadhist"></a>
<tt>loadhist</tt>
</td>
<td class="langref">
<tt>source -n ~\history.csh</tt>
</td>
<td>
<p>
Load the history list without executing any of it.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="md"></a>
<tt>md</tt>
</td>
<td class="langref">
<tt>mkdir</tt>
</td>
<td>
<p>
Make directories.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="mi"></a>
<tt>mi</tt>
</td>
<td class="langref">
<tt>more -i</tt>
</td>
<td>
<p>
Quick interactive startup of your favorite version <tt>more</tt>.
Clears the screen when it starts up and doesn't just exit if
there's less than a screenful.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="more"></a>
<tt>more</tt>
</td>
<td class="langref">
<tt>hmore</tt>
</td>
<td>
<p>
Hamilton <a href="Utilities/more.htm"><tt>more</tt></a> utility, stored in <tt>hmore.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="pause"></a>
<tt>pause</tt>
</td>
<td class="langref">
<tt>echo -n Press any key when ready ...; @&nbsp;getchar; echo</tt>
</td>
<td>
<p>
Pause, waiting for any keystroke or character from
stdin.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="po"></a>
<tt>po</tt>
</td>
<td class="langref">
<tt>popd</tt>
</td>
<td>
<p>
Pop the directory stack.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="pss"></a>
<tt>pss</tt>
</td>
<td class="langref">
<tt>ps -s | fi ^!^*</tt>
</td>
<td>
<p>
List any matching processes.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="pu"></a>
<tt>pu</tt>
</td>
<td class="langref">
<tt>popd</tt>
</td>
<td>
<p>
Push the directory stack.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="q"></a>
<tt>q</tt>
</td>
<td class="langref">
<tt>exit</tt>
</td>
<td>
<p>
Exit the C shell
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="rd"></a>
<tt>rd</tt>
</td>
<td class="langref">
<tt>rmdir</tt>
</td>
<td>
<p>
Remove empty directories.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ren"></a>
<tt>ren</tt>
</td>
<td class="langref">
<tt>rename</tt>
</td>
<td>
<p>
Another name for the <tt>rename</tt> alias.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="rename"></a>
<tt>rename</tt>
</td>
<td class="langref">
<tt>local s; @&nbsp;s&nbsp;=&nbsp;nowild; @&nbsp;nowild&nbsp;=&nbsp;1; <a href="49-BuiltinProcedures.htm#safe">saferename</a></tt>
</td>
<td>
<p>
Invoke the standard Windows <tt>rename</tt> command with shell
wildcarding turned off so the rename will work sensibly.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="rm"></a>
<tt>rm</tt>
</td>
<td class="langref">
<tt>hrm</tt>
</td>
<td>
<p>
Hamilton <a href="Utilities/rm.htm"><tt>rm</tt></a> utility, stored as <tt>hrm.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="ro"></a>
<tt>ro</tt>
</td>
<td class="langref">
<tt>rotd</tt>
</td>
<td>
<p>
Rotate the directory stack.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="rot13"></a>
<tt>rot13</tt>
</td>
<td class="langref">
<tt>tr 'n-za-mN-ZA-M'<br/>'a-zA-Z'</tt>
</td>
<td>
<p>
Encoder/Decoder for off-color jokes on Internet.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="sort"></a>
<tt>sort</tt>
</td>
<td class="langref">
<tt>hsort</tt>
</td>
<td>
<p>
Hamilton <a href="Utilities/sort.htm"><tt>sort</tt></a> utility, stored as <tt>hsort.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="start"></a>
<tt>start</tt>
</td>
<td class="langref">
<tt>env -N</tt>
</td>
<td>
<p>
Start a command in a new window.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="su"></a><tt>su</tt>
</td>
<td class="langref">
<tt>env -D LAYER= su.exe</tt>
</td>
<td>
<p>
Delete the <a href="40-EnvironmentVariables.htm#LAYER">LAYER</a> variable from the environment passed
to <a href="Utilities/su.htm"><tt>su</tt></a> so the prompt doesn't look like a subshell with a layer number.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="sudo"></a><tt>sudo</tt>
</td>
<td class="langref">
<tt>su -.</tt>
</td>
<td>
<p>
<tt>sudo</tt> wrapper to <a href="Utilities/su.htm"><tt>su</tt></a>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="type"></a>
<tt>type</tt>
</td>
<td class="langref">
<tt>cat</tt>
</td>
<td>
<p>
Copy files to stdout.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="uud"></a>
<tt>uud</tt>
</td>
<td class="langref">
<tt>uudecode</tt>
</td>
<td>
<p>
<tt>uudecode</tt> binary data.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="uue"></a>
<tt>uue</tt>
</td>
<td class="langref">
<tt>uuencode -c</tt>
</td>
<td>
<p>
<tt>uuencode</tt> using <tt>cp</tt>-style syntax.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="vim"></a>
<tt>vim</tt>
</td>
<td class="langref">
<tt>env -D SHELL= vim.exe</tt>
</td>
<td>
<p>
Delete the <a href="40-EnvironmentVariables.htm#SHELL"><tt>SHELL</tt></a> variable from the
environment passed to the <a href="54-AwkPerlAndVi.htm#vi">Vim editor</a>.  Vim only knows how to pass
commands to <tt>cmd.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="vol"></a>
<tt>vol</tt>
</td>
<td class="langref">
<tt>vl</tt>
</td>
<td>
<p>
List volume labels.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="w"></a>
<tt>w</tt>
</td>
<td class="langref">
<tt>(wait; beep)</tt>
</td>
<td>
<p>
Wait for background processes and beep.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a name="xcopy"></a>
<tt>xcopy</tt>
</td>
<td class="langref">
<tt>local s; @&nbsp;s&nbsp;=&nbsp;nowild; @&nbsp;nowild&nbsp;=&nbsp;1; <a href="49-BuiltinProcedures.htm#safe">safexcopy</a></tt>
</td>
<td>
<p>
Invoke the standard Windows <tt>xcopy</tt> command with shell
wildcarding turned off so <tt>xcopy</tt> will work sensibly.
</p>
</td>
</tr>
</table>


<h3>
<small><a href="51-ExternalUtilities.htm">Previous</a> |
<a href="53-Samples.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Samples
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="17-LanguageReference.htm">Language reference</a>
			</h4>
			<h2>
				Samples
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Language reference</p></li>
				<li><a href="17-LanguageReference.htm">Basic statements</a></li>
				<li><a href="18-ConditionTesting.htm">if and switch</a></li>
				<li><a href="19-Iteration.htm">foreach, for, while and repeat</a></li>
				<li><a href="20-Procedures.htm">Procedures</a></li>
				<li><a href="21-Aliases.htm">Aliases</a></li>
				<li><a href="22-Variables.htm">@, calc, set, setenv and local</a></li>
				<li><a href="23-FunctionKeys.htm">Function keys</a></li>
				<li><a href="24-MiscStatements.htm">Miscellaneous statements</a></li>
				<li><a href="25-StatementRelationships.htm">Statement relationships</a></li>
				<li><a href="26-IORedirection.htm">I/O redirection</a></li>
				<li><a href="27-ExpressionOperators.htm">Expression operators</a></li>
				<li><a href="28-FileSystemTests.htm">File system tests</a></li>
				<li><a href="29-SpecialDevices.htm">Special devices</a></li>
				<li><a href="30-AnsiEscapeSequences.htm">ANSI escape sequences</a></li>
				<li><a href="31-Wildcarding.htm">Wildcarding</a></li>
				<li><a href="32-FilenameCompletion.htm">Filename completion</a></li>
				<li><a href="33-CommandLineEditing.htm">Command line editing</a></li>
				<li><a href="34-HistoryRecall.htm">History recall</a></li>
				<li><a href="35-CommandCompletion.htm">Command completion</a></li>
				<li><a href="36-Quoting.htm">Quoting</a></li>
				<li><a href="37-VariableSubstitution.htm">Variable substitution</a></li>
				<li><a href="38-SubstitutionModifiers.htm">Substitution modifers</a></li>
				<li><a href="39-PathnameEditing.htm">Pathname editing</a></li>
				<li><a href="40-EnvironmentVariables.htm">Environment variables</a></li>
				<li><a href="41-ProcessWideVariables.htm">Shared variables</a></li>
				<li><a href="42-PerThreadVariables.htm">Inherited variables</a></li>
				<li><a href="43-PerThreadVariables.htm">Initialized variables</a></li>
				<li><a href="44-VariablesSortedByName.htm">All variables</a></li>
				<li><a href="45-OrderOfEvaluation.htm">Order of evaluation</a></li>
				<li><a href="46-LoginCsh.htm">Login.csh</a></li>
				<li><a href="47-StartupCsh.htm">Startup.csh</a></li>
				<li><a href="48-CustomizingTheShell.htm">Customizing<br/>the C shell</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Samples<br/>
<small><a href="52-PredefinedAliases.htm">Previous</a> |
<a href="54-AwkPerlAndVi.htm">Next</a></small>
</h3>

<p>
The sample C programs and C shell scripts in the samples directory are
meant to help you install or experiment with Hamilton C shell.
Deliberately, they're relatively trivial.  All were created assuming
<tt>TABS=3</tt>.
</p>

<table>

<tr>
<td class="langref"><a href="Samples/a2e.htm"><tt>a2e.csh</tt></a>
</td>
<td>
<p>
Convert ASCII to EBCDIC using the <tt>tr</tt> utility.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/args.htm"><tt>args.c</tt></a>
</td>
<td>
<p>
A simple C program that prints out the <tt>*argv[]</tt> (argument) and
<tt>*envp[]</tt> (environmental variable) arrays.  Notice that wildcarding,
variable substitutions, quoting and command substitutions are done
before the C program is started.  If you do a lot of wildcarding, you
can create and pass <i><b>very</b></i> long parameter lists (up to
32K characters.) Try some of these commands:
</p>

<pre class="margined last"><tt>% args "ho"w 'no'w
% args "$cwd" '$cwd'
% args * "*" '*'
% args `whereis more`
% args '`whereis more`'
% args * *\* *\*\* | more
</tt></pre>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/average.htm"><tt>average.csh</tt></a>
</td>
<td>
<p>
Find the average numeric values in a list.  If none of the elements
are numeric, return 0.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/basename.htm"><tt>basename.csh</tt></a>
</td>
<td>
<p>
Emulate the POSIX <tt>basename</tt> command to extract just the last
component of a pathname, deleting any suffix, if specified.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/bits.htm"><tt>bits.csh </tt></a>
</td>
<td>
<p>
A simple self-loading procedure that calculates the minimum bits
required to represent the argument it's passed as a binary integer.
</p>
</td></tr>

<tr>
<td class="langref"><a href="Samples/blksize.htm"><tt>blksize.c</tt></a>
</td>
<td>
<p>
A simple C program that reads from Stdin, copying to Stdout, using
the specified blocksize.  This program can be useful to read or
write tape devices that only support certain blocksizes.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/bumpdate.htm"><tt>bumpdate.csh</tt></a>
</td>
<td>
<p>
Print the date <tt>n</tt> number of days forward or backward from
a given date.  If only the bump value is given, today's date is
bumped.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/c2f.htm"><tt>c2f.csh</tt></a>
</td>
<td>
<p>
A simple C shell script for converting between Celsius and Fahrenheit.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/caldate.htm"><tt>caldate.csh</tt></a>
</td>
<td>
<p>
Print the date corresponding to a given Julian
day.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/calendar.htm"><tt>calendar.csh</tt></a>
</td>
<td>
<p>
A C shell script for printing out the calendar for any given month,
highlighting the current date.  If no date is given, this month's
calendar is printed.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/colors.htm"><tt>colors.csh</tt></a>
</td>
<td>
<p>
Instructions and examples on customizing the screen colors.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/decimal.htm"><tt>decimal.csh</tt></a>
</td>
<td>
<p>
Force numeric strings with leading zeros to be treated as decimal
numbers rather than as octal.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/deltaday.htm"><tt>deltaday.csh</tt></a>
</td>
<td>
<p>
Print the number of days separating two dates.  If only one date
is given, the difference between it and today's date is returned.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/deltahrs.htm"><tt>deltahrs.csh</tt></a>
</td>
<td>
<p>
Calculate the difference in hours and fractions of an hour between
two times, given in hours and minutes.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/dirname.htm"><tt>dirname.csh</tt></a>
</td>
<td>
<p>
Emulate the POSIX <tt>basename</tt> command to extract all but the
last level of a pathname.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/dumpenv.htm"><tt>dumpenv.c</tt></a>
</td>
<td>
<p>
This C program writes out the environment it's passed in the form of
<tt>setenv</tt> commands.  If you're installing Hamilton C shell for
the first time, <tt>dumpenv</tt> is a convenient way to snapshot the
environmental variables you've been using with <tt>cmd.exe</tt> in a
form you can append to your <tt>login.csh</tt> file.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/duplicat.htm"><tt>duplicat.csh</tt></a>
</td>
<td>
<p>
Look for duplicate files anywhere in a directory tree.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/e2a.htm"><tt>e2a.csh</tt></a>
</td>
<td>
<p>
Convert EBCDIC to ASCII using the <tt>tr</tt> utility.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/easter.htm"><tt>easter.csh</tt></a>
</td>
<td>
<p>
A C shell script that calculates when Easter will occur in any
given year.  If no year is given, the current year is assumed.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/f2c.htm"><tt>f2c.csh</tt></a>
</td>
<td>
<p>
A simple C shell script for converting between Fahrenheit to Celsius.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/factor.htm"><tt>factor.csh</tt></a>
</td>
<td>
<p>
The simple factor C shell script shown in the User Guide.  It's intended
to show to show the use of recursion, expressions, and a self-loading
procedure.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/finance.htm"><tt>finance.csh</tt></a>
</td>
<td>
<p>
Another C shell script showing expression evaluation.  This defines a
number of routines for calculating financial conversion factors, e.g.,
from present to future value.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Samples/findinclude.htm"><tt>findinclude.csh</tt></a>
</td>
<td>
<p>
Search the <tt>INCLUDE</tt> directories for the specified header file.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/fixup.htm"><tt>fixup.csh</tt></a>
</td>
<td>
<p>
Fixup source files to discard any extraneous tabs or spaces at
the end of the lines, to ensure that all lines end properly with
<tt>\r\n</tt> and to ensure that the timestamps can be exactly
represented on a FAT or HPFS partition.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/julian.htm"><tt>julian.csh</tt></a>
</td>
<td>
<p>
Calculate the Julian day number (number of days since January 1, 4713
B.C.) for any given date.  If you don't give a date, it uses today's date.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/laptop.htm"><tt>laptop.csh</tt></a>
</td>
<td>
<p>
Customize the screen colors for a laptop computer.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/makecpgm.htm"><tt>makecpgm.csh</tt></a>
</td>
<td>
<p>
A simple C shell script showing how a "make" function
might be written in the C shell language.  This one rebuilds any
<tt>.exe</tt> files in the current directory that are older than the
corresponding <tt>.c</tt> file or any of the <tt>.h</tt> files.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/max.htm"><tt>max.csh</tt></a>
</td>
<td>
<p>
Find the maximum numeric value out of a list.  If none of the
elements are numeric, return 0.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/mcvisa.htm"><tt>mcvisa.csh</tt></a>
</td>
<td>
<p>
A simple C shell script that constructs a special checksum of a
credit card number to tell if the card number is plausible or
not.  The checksum used is designed to catch transposed or incorrect
digits.  Try it on the cards in your wallet.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/member.htm"><tt>member.csh</tt></a>
</td>
<td>
<p>
Test whether the first argument word appears somewhere in the
list given by the second argument.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/memberi.htm"><tt>memberi.csh</tt></a>
</td>
<td>
<p>
Test by case-insensitive comparison whether the first argument
word appears somewhere in the list given by the second argument.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/min.htm"><tt>min.csh</tt></a>
</td>
<td>
<p>
Find the minimum numeric value out of a list.  If none of the
elements are numeric, return 0.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/myecho.htm"><tt>myecho.c</tt></a>
</td>
<td>
<p>
A variation on the builtin <tt>echo</tt> command that prints its
<tt>*argv[]</tt> (argument) list with quotes around each word it's
passed and tells the total character count.  Try these examples:
</p>
<pre class="margined last"><tt>% myecho now     is the
% myecho "now     is" the
% myecho `ls`
% myecho `echo`
% myecho `echo hello`
% myecho * *\* *\*\* | more 
</tt></pre>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/newfiles.htm"><tt>newfiles.csh</tt></a>
</td>
<td>
<p>
List all the files or directories in the current directory that do
not occur in the specified directory.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Samples/percentchg.htm"><tt>percentchg.csh</tt></a>
</td>
<td>
<p>
Calculate the percentage change between an old value and a new value.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/postage.htm"><tt>postage.csh</tt></a>
</td>
<td>
<p>
Calculate the U.S. first class postage required for a given weight
in ounces.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/posxpath.htm"><tt>posxpath.csh</tt></a>
</td>
<td>
<p>
Convert ordinary filenames to POSIX format.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/rcode.htm"><tt>rcode.c</tt></a>
</td>
<td>
<p>
A trivial C program that just prints, then exits with the return
code value you pass it.  You can use this routine to see how the
<tt>status</tt> variable is set and also, how the <tt>;</tt>,
<tt>||</tt> and <tt>&amp;&amp;</tt> statement connectors work.
Try these examples:
</p>

<pre class="margined"><tt>% rcode
% calc status
% rcode 1
% calc status
% echo $status
% echo status
% rcode 2
% calc status
% rcode 0 || rcode 1
% rcode 1 || rcode 2
% rcode 0 &amp;&amp; rcode 1
% rcode 1 &amp;&amp; rcode 2
% rcode 0;  rcode 1
% rcode 1;  rcode 2
</tt></pre>

<p>
<tt>rcode</tt> also illustrates another aspect of return codes to
consider: if you use C library stdio (as <tt>rcode.c</tt> does) and
you exit with a non-zero return code, stdio thinks it was an error
and discards anything in the stdio buffers.  In the following example,
stdio writes to the screen are unbuffered so it works; but pipes are
buffered, so nothing gets written to it:
</p>

<pre class="margined"><tt>% rcode 1
1
% rcode 1 | more
<i>--- End of file ---</i>
%
</tt></pre>

<p>
If you're writing an application that uses return codes, you should
remember to explicitly flush the buffers with stdio <tt>fflush()</tt>
or use the kernel calls directly.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/read.htm"><tt>read.csh</tt></a>
</td>
<td>
<p>
Emulate the Bourne Shell's read command, which reads a line of
input, breaking it into words, which are then assigned, one-by-one,
to the variables whose names are passed as arguments.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/renet.htm"><tt>renet.csh</tt></a>
</td>
<td>
<p>
A script for attempting to reconnect any unavailable network
resources.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/sh2csh.htm"><tt>sh2csh.csh</tt></a>
</td>
<td>
<p>
A script for converting Bourne or Korn shell scripts into Hamilton C
shell scripts using a set of <tt>sed</tt> scripts contained in the
<tt>sh2csh</tt> directory.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/sizeof.htm"><tt>sizeof.csh</tt></a>
</td>
<td>
<p>
A short C shell script that calculates and prints the cumulative
size of any number of files or directories.
</p>
</td>
</tr>

<tr>
<td class="langref">
<a href="Samples/splitstring.htm"><tt>splitstring.csh</tt></a>
</td>
<td>
<p>
Split up a string into multiple lines, replacing each occurrence of
the separator text with a line break, writing them to stdout.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/timestmp.htm"><tt>timestmp.csh</tt></a>
</td>
<td>
<p>
Extract a timestamp from a file or directory in the format needed
by <tt>touch.exe</tt>.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/trapz.htm"><tt>trapz.csh</tt></a>
</td>
<td>
<p>
A C shell script that does numeric integration using the trapezoidal
rule.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/ts.htm"><tt>ts.csh</tt></a>
</td>
<td>
<p>
A C shell script that searches for occurrences of a simple string
in all the files with a given extension anywhere in a directory
tree.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/update.htm"><tt>update.csh</tt></a>
</td>
<td>
<p>
Compare the <tt>frompath</tt> and <tt>topath</tt> directories, looking for
differences, updating the <tt>topath</tt> directory as needed to make it an
up-to-date copy.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/uptime.htm"><tt>uptime.csh</tt></a>
</td>
<td>
<p>
Print the elapsed time the system has been up.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/vectormath.htm"><tt>vectormath.csh</tt></a>
</td>
<td>
<p>
A simple set of functions for doing vector math in both rectangualar and polar
coordinates.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/weekday.htm"><tt>weekday.csh</tt></a>
</td>
<td>
<p>
Print the day of the week corresponding to any given date.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/which.htm"><tt>which.csh</tt></a>
</td>
<td>
<p>
Figure out what will be run if a command is typed.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/white.htm"><tt>white.csh</tt></a>
</td>
<td>
<p>
Customize the screen colors for a bright white window.
</p>
</td>
</tr>

<tr>
<td class="langref"><a href="Samples/winerror.htm"><tt>winerror.c</tt></a>
</td>
<td>
<p>
Print the Win32 message corresponding to a given error code.
</p>
</td>
</tr>

</table>


<h3>
<small><a href="52-PredefinedAliases.htm">Previous</a> |
<a href="54-AwkPerlAndVi.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Awk, perl and vi
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Awk, perl and vi
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm"><b>Awk, perl and vi</b></a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Awk, perl and vi<br/>
<small><a href="53-Samples.htm">Previous</a> |
<a href="54.1-UsingWithCygwin.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#FreeImplementations">Free implementations on the web</a>
<a href="#awk">awk</a><br/>
<a href="#perl">perl</a><br/>
<a href="#vi">vi</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="FreeImplementations"></a>Free implementations on the web
</h4>

<p>
Hamilton C shell does not include awk, perl or vi for the simple reason
that there are authoritative, free implementations already available on the
net.  Here are my recommendations:
</p>

<h4>
<a name="awk"></a>awk
</h4>

<p>
Brian Kernighan is the &ldquo;K&rdquo; in awk.  From his
<a href="http://cm.bell-labs.com/who/bwk/">home page at Bell Labs</a>, you'll
find a link to <a href="http://cm.bell-labs.com/cm/cs/awkbook/index.html">The Awk
Programming Language page</a>.  The latest version of the
<a href="http://www.cs.princeton.edu/~bwk/btl.mirror/">One True Awk</a> can
be downloaded from Brian's mirror at Princeton.
</p>

<p>
When Brian says this The One, I trust his judgment.
</p>

<h4>
<a name="perl"></a>perl
</h4>

<p>
There is still only one root codebase for perl, the one created by Larry Wall.
My choice for the best page from which to download the latest source or
Windows executable is <a href="http://www.perl.com/pub/a/language/info/software.html">
the O'Reilly page</a> maintained by Tom Christiansen.
</p>

<h4>
<a name="vi"></a>vi
</h4>

<p>
Hands down, the best vi ever written is Vim, short for Vi-Improved, by Bram
Moolenar.  From <a href="http://www.vim.org/">the Vim home page</a> is a link
to the <a href="http://www.vim.org/download.php">downloads page</a> from which
you can download both source and a Windows executable.
</p>

<p>
Bram hopes that if you find Vim useful, that you&rsquo;ll make a donation to help
needy children in Uganda.
</p>

<p>
To use Vim under the C shell, it's helpful to invoke it via these aliases, predefined
in the default <a href="47-StartupCsh.htm">Startup.csh</a>:
</p>

<div class="codesample">alias vim      env -D SHELL= vim.exe
alias gvim     env -D SHELL= gvim.exe
</div>

<p>
Vim can run external commands, e.g., <tt>:!csh</tt> to "shell out" to the C shell, or
<tt>:%!tr&nbsp;a-z&nbsp;A-Z</tt> to uppercase everything in the buffer by filtering it
through the <a href="Utilities/tr.htm"><tt>tr</tt></a> utility.  Vim does this by
passing the command to <tt>cmd.exe</tt>.
</p>

<p>
Unfortunately, if the <a href="40-EnvironmentVariables.htm#SHELL"><tt>SHELL</tt></a>
environment variable is defined, Vim gets confused.  It will use it, but it still expects
that it points at <tt>cmd.exe</tt> and it constructs a command line accordingly, which
doesn't work with the C shell.  Since you can't delete the <tt>SHELL</tt> variable
from the C shell's environment, these aliases use the <a href="Utilities/env.htm">
<tt>env</tt></a> utility as an interlude to delete the <tt>SHELL</tt> variable from the
environment passed to Vim.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="47-StartupCsh.htm">Startup.csh</a><br/>
<a href="52-PredefinedAliases.htm">Predefined aliases</a><br/>
<a href="40-EnvironmentVariables.htm#SHELL"><tt>SHELL</tt> environment variable</a><br/>
<a href="Utilities/env.htm"><tt>env</tt> utility</a><br/>
<a href="09-Variables.htm#EnvironmentVariables"><i>Tutorial:</i> Environment variables</a><br/>
<a href="14-Aliases.htm"><i>Tutorial:</i> Aliases</a></p>

<h3>
<small><a href="53-Samples.htm">Previous</a> |
<a href="54.1-UsingWithCygwin.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">

		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Using with Cygwin
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Using with Cygwin
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
<h3>
Using with Cygwin<br/>
<small><a href="54-AwkPerlAndVi.htm">Previous</a> |
<a href="55-Compatibility.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#DoesItWork">Does it work?</a><br/>
<a href="#LoginCsh">Login.csh</a><br/>
<a href="#StartupCsh">Startup.csh</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<h4>
<a name="DoesItWork"></a>Does it work?</h4>
<p>
Of course it does.  Cygwin includes a lot of helpful GNU utilities that nicely complement the
set provided with Hamilton C shell, so of course you should be able to use them with the C shell
and of course you can.  You can even run <tt>bash</tt> scripts from the C shell if they start
with <tt>#!/bin/bash</tt>.
</p>

<p>
To use the Cygwin tools with Hamilton C shell only requires that the Cygwin <tt>bin</tt> directory
be listed on the search path and that the GNU utilities know to expect Windows-format filenames with
drive letters and backslashes.  In addition, since some GNU utilities have the same names as the Hamilton
versions the C shell would normally run, it's helpful to have a way specify GNU version if that's
what you want.  The easy way to do this via the C shell's <tt>login.csh</tt> and <tt>startup.csh</tt> scripts.
</p>

<h4>
<a name="LoginCsh"></a>Login.csh
</h4>

<p>
Here's a sample <tt>login.csh</tt> file you might add to your home directory.  It inherits anything
that might normally be set up in the default <tt>login.csh</tt> script by source'ing it, then adds
the Cygwin <tt>bin</tt> directory to the <a href="41-ProcessWideVariables.htm#path"><tt>path</tt></a>
variable and sets an environment variable to tell the GNU utilies to expect Windows filenames.
</p>

<div class="codesample"># Source the default login.csh
source $shell:h:h\login.csh

# Add Cygwin to the search path
set      path     =  $path C:\Cygwin64\bin

# Tell the GNU utilities not to complain about Windows filenames
# with drive letters and backslashes
setenv   CYGWIN   =  nodosfilewarning
</div>

<p>
The 32-bit version of Cygwin is normally installed at <tt>C:\Cygwin</tt>.  The 64-bit version is normally installed
at <tt>C:\Cygwin64</tt>.  Here I've assumed the 64-bit version and that it's been installed in the usual location.
Setting the <tt>CYGWIN</tt> environment variable to <tt>nodosfilewarning</tt> tells the GNU utilities to expect
Windows filenames.
</p>

<h4>
<a name="StartupCsh"></a>Startup.csh
</h4>

<p>
Some of the GNU utilities, like <tt>ls</tt> and <tt>grep</tt> and others provide similar functions as the
Hamilton versions of the same name, but sometimes a little differently.  Whichever version comes first in the
search path is the one that will be run.  If you've added Cygwin to the path as suggested above, you'll
get the Hamilton version.  That might not always be what you want.
</p>

<p>
Here's a sample <tt>startup.csh</tt> file you might add to your home directory.  It inherits from the
from the default <tt>startup.csh</tt> script, then defines an alias to let you specify you want the
GNU version of something.  Again, note that I'm assuming the 64-bit version of Cygwin, installed in
the usual place.
</p>

<div class="codesample"># Source the default startup.csh
source $shell:h:h\startup.csh

# Alias to run the GNU utilities that come with Cygwin
alias gnu      c:\Cygwin64\bin\^!^*
</div>

<p>
To run the GNU version of something, simply prepend <tt>gnu</tt> onto the front of the command, e.g.,
<tt>gnu&nbsp;ls</tt> to run the GNU version of <tt>ls</tt>.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="45-OrderOfEvaluation.htm#SearchOrder">Order of evaluation:  Search order</a><br/>
<a href="41-ProcessWideVariables.htm#path"><tt>path</tt> variable</a><br/>
<a href="46-LoginCsh.htm">Login.csh</a><br/>
<a href="47-StartupCsh.htm">Startup.csh</a><br/>
<a href="21-Aliases.htm">Aliases</a><br/>
<a href="24-MiscStatements.htm#source">source statement</a><br/>
<a href="15.4-Scripts.htm#sourceStatement"><i>Tutorial:</i> source statement</a><br/>
<a href="09-Variables.htm#EnvironmentVariables"><i>Tutorial:</i> Environment variables</a><br/>
<a href="14-Aliases.htm"><i>Tutorial:</i> Aliases</a>
</p>

<h3>
<small><a href="54-AwkPerlAndVi.htm">Previous</a> |
<a href="55-Compatibility.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/RunningWithCygwin.png">
				<img src="Images/Screenshots/RunningWithCygwin.gif"
					alt="Running Cygwin utilities from Hamilton C shell" class="shadow"/>
			</a>
			<p>
			This screenshot shows the Cygwin <tt>bash</tt>, <tt>tcsh</tt> and <tt>ls</tt> utilities
			and even a <tt>bash</tt> script being invoked from Hamilton C shell.  It all works just fine.
			</p>

		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Compatibility
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Compatibility
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm"><b>Compatibility</b></a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Compatibility<br/>
<small><a href="54.1-UsingWithCygwin.htm">Previous</a> |
<a href="56-CommonProblems.htm">Next</a></small>
</h3>

<h4>Topics</h4>

<p>
<a href="#BuglistFixed">Berkeley 4.3 Buglist problems have been fixed.</a><br/>
<a href="#EaseOfUser">The language is more consistent and easier to use.</a><br/>
<a href="#Compiler">Modern compiler technology has been employed.</a><br/>
<a href="#Extensions">Extensions</a><br/>
<a href="#Restrictions">Restrictions and unimplemented features</a><br/>
<a href="#Adaptation">Adaptation for Windows</a><br/>
<a href="#BSDMode">Berkeley Compatibility Mode</a><br/>
<a href="#SeeAlso">See also</a><br/>
</p>

<p>
This section details the specific differences between the Hamilton
C shell and the original UNIX C shell.  It also describes the Hamilton
C shell's <a href="#BSDMode">Berkeley compatibility mode</a>, used
for running Berkeley C shell scripts.
</p>

<h4>
<a name="BuglistFixed"></a>Berkeley 4.3 Buglist problems have been fixed.
</h4>

<ol>
<li>
<p>
Shell procedures have been provided as a more powerful alternative
to the clumsy argument mechanism for aliases.
</p>
</li>

<li>
<p
>Commands typed within loops or other control
structures are properly added to the history list.
</p>
</li>

<li>
<p>
Control structures are recursively parsed, allowing
piping between them.  For example:
</p>

<div class="codesample" style="font-size: 0.9em">1 C% foreach i (a b c) echo $i; end | wc
        3        3        9
</div>
</li>


<li>
<p>
Any of the <tt>:</tt> editing modifiers can be used on any
substitution.  Also, a space inside the search string in a
<tt>:s/<var>...</var>/<var>...</var>/</tt> command will match the
space between two words.  In the UNIX C shell, only certain modifiers
could be used on a given type of substitution and it is not possible
to perform a search/replace that crossed word boundaries.
</p>
</li>

</ol>

<h4>
<a name="EaseOfUse"></a>The language is more consistent and easier to use.
</h4>

<ol>

<li>
<p>
The <tt>set</tt>, <tt>setenv</tt> and <tt>alias</tt>
commands will now accept the same basic syntax.  The UNIX C shell
had a number of anomalies:  an <tt>=</tt> sign was required for a <tt>set</tt>
but not for <tt>setenv</tt> and <tt>alias</tt>; parenthesis were
required around a word list for a <tt>set</tt> but not for
<tt>setenv</tt> and <tt>alias</tt>; the <tt>set</tt> statement
ignored all but the first argument word but <tt>alias</tt>
would not, etc.
</p>
</li>

<li>
<p>
Variables or word lists are always indexed counting
the first word as element zero.  The UNIX C shell counted from
zero when indexing with <tt>:<var>n</var></tt> notation but from
one when using <tt>[<var>n</var>]</tt> notation.
<tt>argv[0]</tt> is the first argument word, not the name of the
shell script being executed.  The name of the script is kept in
the local variable <tt>$scriptname</tt>.  This can be overridden
by setting the inheritable per-thread variable <tt>bsdargv&nbsp;=&nbsp;1</tt>,
causing <tt>argv[0]</tt> to be the name of the script.
</p>
</li>

<li>
<p>
In keeping with the desire to consistently index
from zero, the last command entered into the history
list, <tt>!!</tt>, is considered the 0-th element; <tt>!-1</tt>
is the line before it.  The UNIX C shell considered these to be
the same.  A builtin variable, <tt>bsdhistory</tt>,
is provided for those whose fingers prefer the Berkeley numbering
convention:  if you set <tt>bsdhistory = 1</tt>, <tt>!!</tt>
and <tt>!-1</tt> are the same.
</p>
</li>

<li>
<p>
Where an expression is expected, conventional high level
language syntax is now acceptable.  The UNIX C shell required
spaces around any expression operators, a variable reference
required a <tt>$</tt> to introduce it, parenthesis were required
to avoid confusing "less than" with  i/o redirection, etc.
What had to be typed as
</p>

<div class="codesample" style="font-size: 0.9em">@ i = ($j + 3 * $k &lt; 10)
</div>

<p>
under the UNIX C shell can now be typed (for example) as
</p>

<div class="codesample" style="font-size: 0.9em">@ i = j+3*k &lt; 10
</div>

<p>
(The original UNIX C shell expression syntax is still
entirely acceptable and will still produce correct results.)
</p>
</li>

<li>
<p>
Inside a <tt>[<var>...</var>]</tt>
array index, the shell always looks for an expression, never an
editing-style word select.  Syntax and keying rules are the same
as with any expression.
</p>
</li>

<li>
<p>
The  <tt>case</tt> statement now accepts an expression to be
matched rather than only a pattern.  (To specify a static pattern,
enclose it in quotes.)  To determine a match against a <tt>case</tt>
clause, the <tt>case</tt> expression is evaluated, converted to a
string and then used as a pattern to compare against the <tt>switch</tt>
value.
</p>
</li>

<li>
<p>
The various different end statements used by the UNIX C shell,
<tt>end</tt>, <tt>endif</tt> and <tt>endsw</tt>, have been replaced
by a single <tt>end</tt> statement.  Similarly, the two break
statements, <tt>break</tt> and <tt>breaksw</tt>, have been replaced
with a single <tt>break</tt> statement.  For compatibility with
existing scripts, the obsolete keywords are implemented as aliases in
the default <tt>startup.csh</tt> script supplied with the product.
</p>
</li>

<li>
<p>
Since Hamilton C shell is free format (i.e., new statements need
not begin on a new line), the UNIX C shell convention of chaining
<tt>if</tt> statements with a single <tt>end</tt> if the <tt>else</tt>
and <tt>if</tt> are on the same line isn't sensible (though it is
supported in <a href="#BSDMode">Berkeley Compatibility Mode</a> explicitly
for compatibility).  Instead, an <tt>elif</tt> keyword has been added.
</p>
</li>

<li>
<p>
The obscure use of several <tt>break</tt> statements in a row
on a single line to break out of several levels of control statements
at once has been eliminated.  In its place, a label may be specified
as an operand to indicate the control structure  out of which it
should break.
</p>
</li>

</ol>

<h4>
<a name="Compiler"></a>Modern compiler technology has been employed.
</h4>

<p>
Statements are parsed and compiled into an internal form before
any substitutions or other evaluation is attempted.  This offers
an enormous performance improvement, particularly when iteration
is involved.  (The UNIX C shell would actually reparse each statement
inside a <tt>foreach</tt> loop each time through the loop.)
</p>

<p>
If command- or variable-substitution creates any of the following
reserved words or tokens, the special semantic meaning will be lost
since substitution is done after parsing of statement structure.
Instead, they will simply be treated as character strings.  These
reserved words are:
</p>

<p>
<i>Introducing a clause in a structured statement:</i>
</p>

<div class="codesample">alias          elif           if             setkey         unproc
break          else           local          source         unset
by             end            onintr         switch         unsetenv
calc           eval           proc           then           unsetkey
case           exit           repeat         time           until
continue       for            return         to             while
default        foreach        set            unalias        @
do             goto           setenv         unlocal
</div>

<p>
<i>Anywhere:</i>
</p>

<div class="codesample">(     )     &lt;     &gt;     &amp;=    |     ;
</div>

<p>
<i>In an expression:</i>
</p>

<div class="codesample">+     -     *     /     %     =
</div>

<p>
Similarly, labels cannot be run-time evaluated to see what the label on
a statement is; it must be evaluated when the statement is first parsed.
</p>

<h4>
<a name="Extensions"></a>Extensions
</h4>

<ol>

<li>
<p>
Command line editing with the arrow keys, etc., and the <tt>setkey</tt>
statements are new.
</p>
</li>

<li>
<p>
The procedure mechanism, the <tt>proc</tt>, <tt>unproc</tt>
and <tt>return</tt> statements and the various builtin procedures
are new.
</p>
</li>

<li>
<p>
Local variables and the <tt>local</tt> and <tt>unlocal</tt>
statements are new.
</p>
</li>

<li>
<p>
The use of color highlighting to indicate exception situations
in filename or command completion is new.
</p>
</li>

<li>
<p>
The <tt>for</tt> statement, providing numeric iteration, and the
<tt>calc</tt> statement, which writes the result of expression
evaluation to stdout, are new.
</p>
</li>

<li>
<p>
The <tt>**</tt> and <tt>**=</tt> exponentiation operators are new.
</p>
</li>

<li>
<p>
Floating point arithmetic is new.
</p>
</li>

<li>
<p>
The path hashing mechanism is substantially less sensitive to
blindspots caused by creating a new executable in one of the
<tt>path</tt> directories and not manually specifying <tt>rehash</tt>.
The UNIX C shell would not be able to find the new file; this
shell makes a second pass through the <tt>path</tt> directories
whenever hashing fails, looking for this sort of problem before it
reports failure.  If it finds a blindspot, it automatically
rehashes that directory.
</p>
</li>

<li>
<p>
History references are allowed in the inline text supplied with
the <tt>&lt;&lt;</tt> i/o redirection mechanism.  Also, the inline
text is remembered in the history list, each line as a single word.
This avoids the user having to remember and retype the inline text
any time one of these statements is recalled from the history list
or if the history list is dumped for use in a script file.
</p>
</li>

<li>
<p>Exclusion ranges, e.g., <tt>[^a-z]</tt>, can be used in a
wildcard pattern.
</p>
</li>

<li>
<p>
Escape sequences to encode special characters
(e.g., "<tt>^a</tt> for audible bell or "<tt>^b</tt>
for backspace) are recognized in the arguments to any command,
not just echo.  Because this processing is internal to the shell,
it is not necessary to type two escapes in a row to access this
feature.  (Refer to the <tt>echo</tt> command help screen for a
complete list.)
</p>
</li>

<li>
<p>
Argument lists passed to a child process can
be much larger than are allowed under UNIX.  The UNIX C shell
allows only roughly 6K characters to be passed, depending on the
revision level; this shell allows up to 32K to be passed to a child
process, the kernel limit on Windows.  There is no command line limit to an internal
command such as <tt>echo</tt>.  This is of particular importance
when wildcarding is used heavily.
</p>
</li>

<li>
<p>
Quoted strings are shown in the history list exactly as they
would have to be typed.  (The Berkeley UNIX C shell marked a character
as quoted by setting its high-order bit; setting aside portability
issues, it had the side-effect of not being visible in the history list.)
</p>
</li>

<li>
<p>
Parentheses in an argument list to an executable statement need
not be escaped, so long as they are matched.  Semicolons, i/o
redirection symbols, etc., inside these parentheses are treated simply
as text and are passed straight through to the application.
</p>
</li>

<li>
<p>
The <tt>:b</tt> (base), <tt>:#</tt> (count), <tt>:A</tt>
(alternate shortname) <tt>:L</tt> (longname), <tt>:m</tt>
(mixedpath) and <tt>:M</tt> (mixedcase fullpath) editing operators
are new.
</p>
</li>

<li>
<p>
The indefinite directory wildcard construct,
<tt>...</tt>, is new.
</p>
</li>

<li>
<p>
The <tt>##</tt>&nbsp;...&nbsp;<tt>##</tt> embedded comment
construct is new.
</p>
</li>

</ol>

<h4>
<a name="Restrictions"></a>Restrictions and unimplemented features
</h4>

<ol>

<li>
<p>
Job control is not supported.  Job control is not feasible
under Windows because once one thread from any
process within a window has started to read the keyboard, the read can
not be interrupted.  (Fortunately, one can always open more windows.)
</p>
</li>

<li>
<p>
The use of <tt>\!</tt> inside a prompt string to get the statement
number is not supported.  Use <tt>$@</tt> or <tt>$stmtnumber</tt>
instead.
</p>
</li>

<li>
<p>
The following statements, all fairly specific to UNIX, are not
supported:  <tt>alloc</tt>, <tt>glob</tt>, <tt>limit</tt>,
<tt>notify</tt>, <tt>stop</tt>.
</p>
</li>

</ol>

<h4>
<a name="Adaptation"></a>Adaptation for Windows
</h4>

<ol>

<li>
<p>
Win32 does not provide a <tt>fork()</tt>
call for inexpensively cloning an independent copy of a running
process, complete with its own separate memory image.  Instead,
Win32 provides a faster alternative called threads,
which creates an separately scheduled flow of control through
the memory space of a single process.
</p>

<p class="continue">
In general, Hamilton C shell spawns a new thread anywhere the
Berkeley UNIX C shell would have used a process.  Using a new thread
instead of a new invocation of Hamilton C shell saves over a second
each time.  Individual threads manage their own notions of current
directories and current disk and certain per-thread variables but
the dictionary of aliases, procedures and most variables is shared
among all threads.
</p>

<p class="continue">
The result is that background activities and C shell scripts can change
variables, define procedures, etc., for use by the other threads.
For example, procedures can be written as self-loading scripts.
(See the <tt>whereis.csh</tt> file for an example.)
</p>
</li>

<li>
<p>
Windows conventions are followed:  either the <tt>\</tt>
or the <tt>/</tt> characters can be used in a filename; the "<tt>^</tt>
character is normally the escape character; directories in the <tt>PATH</tt>
environment variable are separated by semicolons, etc.
</p>
</li>

<li>
<p>
Labels cannot be a single letter.  (This is to avoid confusing
the drive letter in the pathname of an executable file as a label.)
</p>
</li>

<li>
<p>
Executable files are recognized by their extension.  The following
extensions are recognized (in this order):  <tt>.csh</tt>, <tt>.exe</tt>,
.<tt>com</tt>, <tt>.cmd</tt>, <tt>.bat</tt>.  <tt>.csh</tt> files are
interpreted as C shell scripts by a new thread, <tt>.exe</tt> and
<tt>.com</tt> files are executed with the
CreateProcess kernel function under Windows.
<tt>.Cmd</tt> files are interpreted by a child process running
<tt>cmd.exe</tt>.  <tt>.Bat</tt> files are passed to <tt>cmd.exe</tt>.
</p>
</li>

<li>
<p>
<tt>PROMPT1</tt> and <tt>PROMPT2</tt> variables are used to set
the primary and secondary prompt strings.  Using the UNIX C shell
variable <tt>PROMPT</tt> would have conflicted with <tt>cmd.exe</tt>'s
use of the same name and would have meant a nonsense prompt string
any time either command processor was invoked by other.
</p>
</li>

<li>
<p>
The following startup or other files have been renamed to be more
consistent with Windows filename conventions: <tt>~/.cshrc</tt>
as <tt>~\startup.csh</tt>; <tt>~/.login</tt> as <tt>~\login.csh</tt>;
<tt>~/.logout</tt> as <tt>~\logout.csh</tt>; and <tt>~/.history</tt>
as <tt>~\history.csh</tt>.  The <tt>~\login.csh</tt> file is read
before, rather than after the <tt>~\startup.csh</tt> file.  When
starting the shell as a new session, very little environmental
information may be passed; the <tt>login.csh</tt> is more usefully
the first file read in this situation.  When starting a subshell,
either from <tt>csh.exe</tt> or <tt>cmd.exe</tt>, the environment
is presumably already set up.
</p>
</li>

<li>
<p>
The comment character, <tt>#</tt>, must be followed by some
white space to be considered the start of a valid comment (except in
<a href="#BSDMode">Berkeley Compatibility Mode</a>).  (That's because
<tt>#</tt> is a legal character in a filename under Windows.)
</p>
</li>

</ol>

<h4>
<a name="BSDMode"></a>Berkeley Compatibility Mode
</h4>

<p>
Berkeley Compatibility Mode provides fairly strict compatibility with the
original BSD C shell.  Triggered by a script that starts with
<tt>#!/bin/csh</tt> or interactively if the shell is invoked
with the <tt>-B</tt> option, it causes the C shell to process statements
in a more fully Berkeley-compatible fashion.  (Scripts that do not start
with <tt>#!/bin/csh</tt> will still be processed according to Hamilton
C shell rules, even if the <tt>-B</tt> option is used to request Berkeley
compatibility interactively.) In compatibility mode:
</p>

<ol>

<li>
<p>
The <tt>status</tt> variable will reflect the return code from
the rightmost stage of a pipeline returning a non-zero code.  The
<tt>tailstatus</tt> variable will be ignored.
</p>
</li>

<li>
<p>
All the shell variables will be snapshotted and
all new variables made local to the thread.
</p>
</li>

<li>
<p>
Berkeley-style <tt>$<var>var</var>[<var>...</var>]</tt>
indexing notation will be used, where the indexing is by word
selection operators (like the <tt>:</tt>-editing operators) rather
than by expression.
</p>
</li>

<li>
<p>
All variable arrays (except <tt>argv</tt>)
will start with element 1.  Accessing element 0 will give a null.
</p>
</li>

<li>
<p>
<tt>$0</tt> or <tt>$argv[0]</tt> will be the scriptname.
<tt>$argv</tt> will be the rest of the argument vector.  The
<tt>bsdargv</tt> variable will be ignored.
</p>
</li>

<li>
<p>
The <tt>#</tt> character will not need to be followed by white
space to be considered the start of a comment.
</p>
</li>

<li>
<p>
The patterns in a <tt>case</tt> test (inside a <tt>switch</tt>)
will be strings and need not be quoted, rather than arbitrary
expressions.  Also, the <tt>switch</tt> value is evaluated as a
wordlist which may contain variable or command substitutions and
wildcards and then rendered as a string.
</p>
</li>

<li>
<p>
<tt>endif</tt> and <tt>endsw</tt> will be predefined aliases
for <tt>end</tt> (but only when closing an <tt>if</tt> or <tt>switch</tt>,
respectively).  <tt>break</tt> will only break out of an enclosing
loop (<tt>foreach</tt> or <tt>while</tt>).  <tt>breaksw</tt> will only
break out of a <tt>switch</tt> statement.
</p>
</li>

<li>
<p>
The special-case use of <tt>else&nbsp;if</tt> on a single line
is recognized as a way to chain several <tt>if</tt> statements together
with a single <tt>endif</tt> at the end.
</p>
</li>

<li>
<p>
<tt>set <var>var</var></tt> and <tt>setenv <var>var</var></tt> will set <tt><var>var</var></tt>
to a null string (considered to be the "set" state), not dump its value.
Also, <tt>set</tt> accepts a list of variables and sets each of them
to the null string.
</p>
</li>

<li>
<p>
When the <tt>$?<var>var</var></tt> (existence) construct is used
with a predefined variable, it tests whether the variable is in the
"set" state, not just whether it exists.
</p>
</li>

<li>
<p
><tt>/</tt> and <tt>/=</tt> will perform integer division.
</p>
</li>

<li>
<p>
The right operand of the <tt>=~</tt> and <tt>!~</tt> pattern
matching operators will be taken as a word which may contain
wildcards.
</p>
</li>

<li>
<p>
In an expression, a variable name must be preceded by <tt>$</tt>.
If it isn't, it'll be taken as a literal string.  Also, the right-hand
side of a <tt>==</tt> comparison is taken as a string, not an expression.
</p>
</li>

<li>
<p>
<tt>:</tt>-style editing operators will not be recognized after
a command substitution.
</p>
</li>

<li>
<p>
<tt>onintr</tt> expects a <tt>goto </tt>label, not a statement
following.  Also, <tt>onintr</tt> and <tt>onintr&nbsp;-</tt>
are now recognized as enabling or disabling interrupts, respectively.
</p>
</li>

<li>
<p>
<tt>$</tt><i>var</i><tt>[</tt><i>n</i><tt>-]</tt>
is recognized as referring to elements <i>n</i> through last.
</p>
</li>

<li>
<p>
Escape sequences are preserved, not interpreted,
inside single and double quotes except when escaping escapes or
newlines. In those cases where escapes are recognized, the Hamilton
C shell enhancements for sequences such as <tt>^r</tt>,
<tt>^n</tt>, etc., are disabled.  Inside quotes, the Berkeley
C shell required two escape characters to escape a newline.  Hamilton
C shell's Berkeley mode accepts either one or two escape characters
inside quotes as a way of escaping a newline.  Also, embedding a
newline into a quoted string has different results (as it does in
the Berkeley C shell) depending on whether the C shell is running
a script or not.  Inside a script, the newline turns into 2 spaces;
otherwise, it's preserved as a literal newline.
</p>
</li>

<li>
<p>
When quotes are used in the eof-string for a here document,
they must appear exactly as used in the original <tt>&lt;&lt;</tt>
statement.
</p>
</li>

<li>
<p>
Comments in the middle of a multi-line statement
end at the end of that physical line.  They do not run all the
way to the end of the entire statement.  This was a trick in the
Berkeley C shell to embed comments into the middle of a statement.
 This feature is implemented by rewriting the comments as they're
read by the C shell into embedded comments wherever they occur.
</p>
</li>

</ol>

<p>
These changes should allow most scripts to run without
problems.  However, there will still be a few differences:
</p>

<ol>

<li>
<p>
The escape character will still be controlled by the
<tt>escapesym</tt> variable (shared across all threads), which
defaults to <tt>^</tt>, not <tt>\</tt>.
</p>
</li>

<li>
<p>
Environmental variables will still be shared.  Changing them
in a script will change them as seen by the parent.
</p>
</li>

<li>
<p>
The special meaning of several <tt>break</tt> statements on
one line will not be supported.
</p>
</li>

<li>
<p>
The following commands are not supported: <tt>bg</tt>,
<tt>exec</tt>, <tt>fg</tt>, <tt>glob</tt>, <tt>jobs</tt>, <tt>limit</tt>,
<tt>nice</tt> (but <tt>eval</tt> gives similar functionality),
<tt>nohup</tt>, <tt>notify</tt>, <tt>stop</tt>, <tt>suspend</tt>,
<tt>unlimit</tt> and <tt>%<var>job</var></tt>.
</p>
</li>

<li>
<p>
No attempt is made to process any command-line arguments
following the <tt>#!/bin/csh</tt> at the start of a script, nor is
any attempt made to implement the generalized UNIX convention to
allow other shells or language processors to be invoked based on the
contents of that first line.
</p>
</li>

</ol>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="45-OrderOfEvaluation.htm">Order of evaluation</a><br/>
</p>

<h3>
<small><a href="54.1-UsingWithCygwin.htm">Previous</a> |
<a href="56-CommonProblems.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Common problems
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Common problems
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Problems</p></li>
				<li><a href="56-CommonProblems.htm"><b>Common problems</b></a></li>
				<li><a href="57-ProblemsWithTar.htm">Problems reading or writing tar tapes</a></li>
				<li><a href="58-Win9xProblems.htm">Windows 9x problems</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Common problems<br/>
<small><a href="55-Compatibility.htm">Previous</a> |
<a href="57-ProblemsWithTar.htm">Next</a></small>
</h3>

<h4>
When I try to start the C shell from a shortcut, it dies and goes away before I can read its messages.
</h4>
<p>
Your shortcut probably has an error in the Target field.  Right-click the icon for Hamilton C shell and click properties to bring up an edit window.  Check the command line options or re-run setup to repair your installation.
</p>

<h4>
The shell won&rsquo;t run my new program.
</h4>
<p>
Path hashing can sometimes produce surprising results if you create a newer version in your current directory of a command that already exists in another of your path directories.  The shell won&rsquo;t know you&rsquo;ve done this; its hash will still only list the older version.  To overcome this problem, use either the <tt>rehash</tt> or <tt>unhash</tt> commands.
</p>

<h4>
The shell won&rsquo;t execute commands in the current directory.
</h4>
<p>
You need to add the  current directory to the list of directories in the <tt>PATH</tt> variable.  <tt>cmd.exe</tt> always checks the current directory before looking in any of the <tt>PATH</tt> directories; Hamilton C shell checks the current directory only if it&rsquo;s explicitly listed in the search path.  This is why the standard <tt>startup.csh</tt> file includes a few lines at the beginning to add the <tt>.</tt>, <tt>bin</tt> and <tt>samples</tt> directories to the path if they&rsquo;re not already listed.
</p>

<h4>
The shell keeps running the old version my shell procedure.
</h4>
<p>
If you define a shell procedure with <tt>proc</tt> in a <tt>.csh</tt> script file and then execute the script, the procedure is compiled into an internal form that&rsquo;s much faster to run and it&rsquo;s kept around in memory to make it run the next time even faster.  If you change the text in the script file but don&rsquo;t explicitly throw away the old definition using <tt>unproc</tt>, the C shell won&rsquo;t know it&rsquo;s supposed to recompile.
</p>

<h4>
The shell won&rsquo;t run any <tt>cmd.exe</tt> internal commands.
</h4>
<p>
Most probably, the shell is unable to find your <tt>startup.csh</tt> file when it starts up.  This is the file that should hold the aliases the shell uses to intercept <tt>cmd.exe</tt>&rsquo;s builtin commands.  Check to see that your <tt>HOME</tt> variable is set to the directory where you&rsquo;ve placed <tt>startup.csh</tt> and that your <tt>startup.csh</tt> file isn&rsquo;t garbled.
</p>

<h4>
<tt>copy</tt> or <tt>rename *.*</tt> doesn&rsquo;t work right.
</h4>
<p>
<tt>copy</tt>, <tt>xcopy</tt>, <tt>rename</tt> and <tt>del</tt> like to do their own wildcard expansion.  To make them work sensibly, be sure your startup.csh file includes and that you use the aliases and procedure definitions we supply to intercept these commands to turn off shell wildcarding just long enough to run them.  These definitions can also serve as a model if you discover other applications that must do their own wildcarding.  For more information, refer to the discussion at the end of the <a href="10-Wildcarding.htm#XcopyProblem">wildcarding</a> chapter.
</p>

<h4>
The <tt>-!</tt> option doesn&rsquo;t work.
</h4>
<p>
The exclamation point is a special character for the shell.  The shell lets you pick up text out of previous commands using history references that begin with <tt>!</tt> followed by a string that tells what text you&rsquo;re retrieving.  To avoid having an exclamation confused as a history reference, be sure the exclamation is at the end of a word, so the next character is a space or a tab.
</p>

<h4>
<tt>grep '^foo'</tt> doesn&rsquo;t work.
</h4>
<p>
The circumflex has special meaning as the escape character to the C shell, even inside quotes.  If you want to pass a literal <tt>^</tt> to <tt>grep</tt> (or anything else) from the command line, you must type <tt>^^</tt> unless the immediately preceding character was <tt>[</tt>.
</p>

<h4>
<tt>du</tt>, <tt>pwd</tt> and <tt>vol</tt> waste time sitting and spinning when they hit a removable drive that&rsquo;s empty.
</h4>
<p>
If you have a removable media device other than <tt>A:</tt> or <tt>B:</tt>, these utilities will normally try to report them.  That&rsquo;s probably not you want, at least not usually; you can specify just the set of drives you do want reported using the <tt>DRIVEMASK</tt> environmental variable.
</p>

<h4>
<tt>cd /foo</tt> doesn&rsquo;t work.
</h4>
<p>
Hamilton C shell tries to serve users coming both UNIX and MS-DOS backgrounds.  To do this, the C shell and all the utilities accept command line options starting with either <tt>-</tt> (UNIX-style) or <tt>/</tt> (DOS-style).  They also recognize filenames typed with either forward or backward slashes.  When you type <tt>cd&nbsp;/foo</tt>, the C shell guesses wrong and thinks you&rsquo;re trying to give it a command line option that it can&rsquo;t recognize.
</p>

<p>
If this is really not what you intend, set the <tt>SWITCHCHARS</tt> environmental variable to just the specific characters you want recognized.  E.g., you might include this in your <tt>startup.csh</tt> file to cause only <tt>-</tt> to be recognized:
<tt>setenv SWITCHCHARS = -</tt>.
</p>

<h4>
I can&rsquo;t set my own screen colors.
</h4>
<p>
Yes, you can.  But you cannot do it just by embedding ANSI escape sequences into your prompt since the C shell will immediately reset the colors back to what it thinks they should be.  To set your own preferences for screen colors, you must use the <tt>COLORS</tt> environmental variable.  See the chapter on customizing the shell or the <tt>colors.csh</tt> script in the <tt>Samples</tt> directory for more information.
</p>

<h4>
<kbd>Alt</kbd>-<kbd>Enter</kbd> doesn&rsquo;t work to grab commands from the history list.
</h4>
<p>
<kbd>Alt</kbd>-<kbd>Enter</kbd> is gobbled up by the system as a keystroke combination used to signal that an application should be toggled back and forth between the desktop and a full-screen session.  Under the these systems, you&rsquo;ll have to type <kbd>Ctrl</kbd>-<kbd>Shift</kbd>-<kbd>Enter</kbd> instead.
</p>

<h4>
I can&rsquo;t wildcard filenames with <tt>$</tt>'s, spaces or quotes in them.
</h4>
<p>
Yes, you can.  To do so, just quote or escape the special characters.  E.g., to get all the files that begin with <tt>$</tt>, you might type <tt>^$*</tt> or <tt>'$'*</tt>.
</p>



<h3>
<small><a href="55-Compatibility.htm">Previous</a> |
<a href="57-ProblemsWithTar.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Problems with tar
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="56-CommonProblems.htm">Common problems</a>
			</h4>
			<h2>
				Problems with tar
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Problems</p></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="57-ProblemsWithTar.htm"><b>Problems reading or writing tar tapes</b></a></li>
				<li><a href="58-Win9xProblems.htm">Windows 9x problems</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Problems reading or writing tar tapes<br/>
<small><a href="56-CommonProblems.htm">Previous</a> |
<a href="58-Win9xProblems.htm">Next</a></small>
</h3>

<h4>
I know there&rsquo;s data on my tape, but tar acts like it&rsquo;s blank.
</h4>
<p>
There are two possibilities.  If it&rsquo;s a DAT tape you wrote yourself on this same machine, (or if you can recreate the problem using a tape you create yourself), it&rsquo;s likely your drive has a firmware bug in its variable block support.  (Variable block i/o allows tar to read a tape without knowing what blocksize was used to write the tape.)  The workaround is to read the tape using the <tt>-V</tt> option to tell tar not to use variable block i/o.  If the tape wasn&rsquo;t written with a standard blocksize, it may take a while longer for tar to figure out what blocksize was used (without variable blocksize support, it has to try all the possibilities), but at least it will work.
</p>
<p>
The second possibility is that the tape was written with hardware compression turned on, but your drive doesn&rsquo;t support compression.  You can find out if your drive supports compression using the <tt>mt status</tt> command.  There isn&rsquo;t any workaround for reading a tape written with compression on a drive that doesn&rsquo;t support it; you&rsquo;ll have to rewrite the tape .
</p>

<h4>
When I read or write a tape, what does it mean if some of the files are listed in yellow?
</h4>
<p>
It means those appear to be ASCII text files and that tar has tried to convert the line endings between the PC convention of a CarriageReturn-LineFeed combination at the end of each line and the UNIX convention of just a single LineFeed character.  (The assumption is that since the tar format is basically a UNIX standard, files in a tar archive should follow the UNIX convention but be stored in the PC convention on your hard disk.)
</p>
<p>
You can suppress this automatic conversion by using <tt>tar -r</tt>.
</p>

<h4>
I can read the tapes I create, but they can&rsquo;t read them on their machine.
</h4>
<p>
There are a couple possibilities.  One is that you&rsquo;ve written the tape in the wrong bytesex for the other machine and the other is that you&rsquo;ve written the tape using compression and that the drive on the other machine doesn&rsquo;t support compression.
</p>
<p>
By default tar creates tapes in little-endian format, meaning that when it writes a 16-bit binary number on the tape, it writes the byte with the least significant byes (the little end) first.  Some UNIX or Linux workstations follow the opposite convention.  The solution is to write tapes in big-endian format using <tt>tar -bB</tt>.  But if that&rsquo;s not convenient, the workaround on the UNIX machine is to read the tape using the following command line, where tapedevice refers to the name of tape unit on that UNIX machine:
</p>
<tt>dd conv=swab &lt; /dev/<var>tapedevice</var> | tar xf -</tt>

<h4>
Tar complains about &ldquo;garbled headers.&rdquo;
</h4>
<p>
There are two possibilities.  One is that your tape has a bad spot.  The other is that your archive isn&rsquo;t really a tar archive at all.
</p>
<p>
When reading an archive, tar expects the data to fit a standard layout defined by the POSIX standard.  Each file in the archive is expected to be preceded by a 512-byte header telling the filename, the timestamp, etc.  Each header has a checksum so tar can verify the data really is good.  If it encounters a header that doesn&rsquo;t fit the standard, tar assumes it has it a bad spot in the archive.  But rather than just give up, tar scans down through the rest of the archive, byte-by-byte, looking for a new header that actually is valid.
</p>
<p>
Tapes do occasionally develop bad spots, and this ability to scan forward can be invaluable in retrieving data that otherwise would be completely lost.  But if the data really isn&rsquo;t a tar file at all, then scanning ahead is not going to achieve anything.
</p>

<h4>
Why can&rsquo;t I read or write a tape under Windows 9x?
</h4>
<p>
Windows 9x doesn&rsquo;t support the tape backup API used by tar.  As a consequence, tar has no way of talking to the tape drive under Windows 9x.  The only solution, if you need tape support, is to upgrade from Windows 9x to Windows NT/2000/XP/Server.
</p>

<h4>
When I try to read a tar tape, tar says it was written with a different blocksize or that the blocksize is larger than my hardware can support.
</h4>
<p>
Very likely, you&rsquo;re trying to read a DAT tape created on a Silicon Graphics machine.  A lot of SGI machines were set up to write tapes with a default blocksize of 256K.  That&rsquo;s much larger than most PC&rsquo;s can support.  Most PC&rsquo;s will only support a maximum blocksize of about 64K; PC&rsquo;s using a PCI bus will go to about 102K, but still far short of what SGI uses.  The workaround is to rewrite the tape on the SGI using a more reasonable blocksize.  You can do this using the UNIX <tt>tar b</tt> option to specify a smaller &ldquo;blocking factor.&rdquo;  (You multiply the UNIX blocking factor by 512 to get the number of bytes/block.)  A good choice is a blocking factor of 20, meaning a 10,240-byte blocksize, which corresponds to the POSIX standard for tar tapes.  The complete command line on the SGI will look something like this:
</p>
<tt>tar cvb 20 <var>files-to-be-added-to-the-tape</var></tt>



<h3>
<small><a href="56-CommonProblems.htm">Previous</a> |
<a href="58-Win9xProblems.htm">Next</a></small>
</h3>
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Windows 9x problems
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a> &#9655;
				<a href="56-CommonProblems.htm">Common problems</a>
			</h4>
			<h2>
				Windows 9x problems
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm">User guide</a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Problems</p></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="57-ProblemsWithTar.htm">Problems reading or writing tar tapes</a></li>
				<li><a href="58-Win9xProblems.htm"><b>Windows 9x problems</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
Windows 9x problems<br/>
<small><a href="57-ProblemsWithTar.htm">Previous</a> |
<a href="59-ReleaseNotes.htm">Next</a></small>
</h3>

<p>
Yes, really.  If you can still find a copy of Windows 9x, our latest build for Windows 7
should still run on it.  We just don't recommend it.
</p>


<h4>
The close button doesn&rsquo;t work on the C shell under Windows 9x.
</h4>
<p>
Microsoft has acknowledged that this is a bug in Windows 9x.  When you click the close button or shutdown the system, all console applications are supposed to get a signal telling them to exit.  Windows NT implements this correctly, but Windows 9x does not.
</p>

<h4>
The whole C shell window fills with all sorts of random colored trash.
</h4>
<p>
This is a known Windows 9x bug.  Not all possible size console windows work right.  In general, only 25, 43 and 50-line windows actually work.  If you try to set an arbitrary size window (e.g., using the setrows utility), chances are it&rsquo;s not going to work.  One of the failure modes is having the whole window fill with random colored trash characters.  There is no known workaround except to set the window size back to a setting that works. 
</p>

<h4>
The C shell doesn&rsquo;t work right with a scroll bar under Windows 9x.
</h4>
<p>
This is a known Windows 9x bug.  If you try to set the buffer size larger than the window size  so you can have a scroll bar on the C shell&rsquo;s window, chances are you&rsquo;ll encounter problems such as not having the line with the cursor pop into the window when you type, etc.  There is no known workaround except to set the buffer size back to a setting that works.
</p>

<h4>
When I write to <tt>lpt1:</tt> under Windows 9x, it doesn&rsquo;t work.
</h4>
<p>
This appears to be a bug in Windows 9x that prevents Win32 console applications from writing to the printer.  The only workaround we&rsquo;ve found is to write the data to a file on disk, then use the DOS <tt>copy</tt> command to copy that file to <tt>lpt1:</tt>.
</p>

<h4>
When I run PKZip from the C shell under Windows 9x, I don&rsquo;t see the output.
</h4>
<p>
This appears to be a bug in Windows 9x that affects some 16-bit applications.  The workaround we&rsquo;ve found is to use an alias to invoke pkzip (or pkunzip) via <tt>command.com</tt>:
</p>
<tt>alias pkzip   command /c pkzip</tt>



<h3>
<small><a href="57-ProblemsWithTar.htm">Previous</a> |
<a href="59-ReleaseNotes.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>

			<a href="Images/Screenshots/GettingStarted.png">
				<img src="Images/Screenshots/GettingStarted.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			A first few commands.
			</p>

			<a href="Images/Screenshots/ChangingColors.png">
				<img src="Images/Screenshots/ChangingColors.gif"
					alt="You can set the screen colors to your taste." class="shadow"/>
			</a>
			<p>
			You can set the screen colors to your taste.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		Release notes
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Release notes
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm"><b>Release notes</b></a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
		
<h3>
Release notes<br/>
<small><a href="58-Win9xProblems.htm">Previous</a> |
<a href="60-License.htm">Next</a></small>
</h3>

		<p>
		These are the complete release notes for the latest build, starting with the very first
		release 2.0 on Windows in July 1992.
		</p>
		
<table>
<tr>
<td>

<pre><tt>Hamilton C shell(tm) for Windows(R)  Release Notes 5.2.g
Copyright (c) 1989-2017 by Hamilton Laboratories.  All rights reserved.


Change Summary

The basic release history for the C shell has been:

   Dec 1988    1.0   First release, running on OS/2 1.0.
   Jan 1989    1.01  Cleanup and final release for OS/2 1.0
   Feb 1989    1.02  First release for OS/2 1.1 (Presentation Manager).
   Mar 1989    1.03  Cleanup and base release for OS/2 1.1.
   Aug 1989    1.04  Command line editing and filename and command
                     completion added.
   Mar 1990    1.05  Support for OS/2 1.2, HPFS and long filenames added
                     along with many important utilities including grep,
                     diff, head, tail, sed, etc.
   Feb 1991    1.06  Support for user-defined screen colors, inheritable
                     local variables, higher performance, etc.

   Jul 1992    2.0   First release from a unified codebase supporting
                     OS/2 and Windows NT.
   Apr 1993    2.1   Support for Berkeley mode scripts, better error
                     diagnostics, support for Windows NT March beta.
   Sep 1993    2.2   Complete rebuild for Windows NT final release.
                     Support for starting Win3.x apps seamlessly from
                     the command line under OS/2 2.x.  Addition of the
                     cron utility.
   Aug 1998    2.3   Full support for #! syntax.

   Jun 2003    3.0   New build for Windows XP and Windows Server 2003
                     using Microsoft Visual Studio .Net 2003 that adds
                     automatic install and uninstall, on-line hypertext
                     documentation and PowerPoint tutorials.  Support
                     for OS/2 and RISC versions of NT is dropped.

   Jun 2009    4.0   New 32-bit and 64-bit builds for Windows 7, Vista
                     and earlier versions of Windows using Microsoft
                     Visual Studio 2008.  New ``...`` line-at-a-time
                     command substitution.

   Jul 2010    4.1   Full Unicode / UTF-8 versions of many of the
                     utilities, an improved su, support for Windows 7
                     elevation and code-signing of the .msi install
                     file and all the .exe files.

   Oct 2011    5.0   Better support for Windows conventions regarding
                     ACLs in mv, cp and chmod.  New splitstring and
                     findinclude samples added.  Much improved su
                     (superuser) utility for Windows 7.

   Aug 2012    5.1   Brand new documentation.

   Sep 2014    5.2   Improved documentation with better navigation,
                     additional topics, including using with Cygwin,
                     and a new random utility.


Along the way, Hamilton C shell has grown from about 35,000 lines of C
to more than 250,000 lines.  All of it has been created from scratch by
Hamilton Laboratories.  Not one line was ported from or written on anything
but OS/2 or Windows.

This document will contain a detailed summary of all the changes made
along the way from one release to another, beginning with the initial 2.0
release for NT.  Changes which only affect certain builds (e.g., OS/2) are
so indicated.

Changes are presented chronologically, so if you're updating from a previous
release, you'll want to jump in somewhere in the middle to start reading.

At the very end of this document is a short list of the known bugs and
limitations.  You'll also find contact information in case you encounter a
problem or have a suggestion.


Fix Level 2.0 Changes:

1.  First release from a new unified codebase from which both OS/2
    and Windows NT versions can be built.

2.  The shell and all the utilities have been fixed so they no longer
    routinely translate a filename to lower case before trying to open it.
    That didn't work in situations with an NFS network connection to a UNIX
    system with case-sensitive filenames.


Fix Level 2.0.a Changes:

3.  [OS/2] The 2.0 version of ls wasn't adding up the allocated sizes of
    directories properly when using the -Lw options.  It does now.


Fix Level 2.0.b Changes:

4.  [OS/2] The C shell can now be run when escaping to the command line from
    the OS/2 1.x and 2.0 installation disks.

5.  [NT/MIPS] Final cleanup on the C shell codebase to make it portable to
    the MIPS RISC processor under NT.

6.  [NT] Trying to run a .bat or .cmd file started cmd.exe, but didn't
    actually run the script.  It does now.

7.  [NT/x86]  A codegen error in the compiler caused :s/.../.../ operations
    to trash the heap, causing the C shell to crash randomly.

8.  [NT] A minor bug in the common routines used to read number pad
    keystrokes was fixed.

9.  [NT] A number of bugs in tar.exe that caused it problems opening new
    tar files and setting or reporting timestamps on files extracted from or
    listed in a tar file were fixed.

10. [NT] More no longer fails with a complaint that it can't scroll or
    fill the console if, e.g., you go to the end of a file, page down and
    then search backward for text that's not found.  The console api's were
    erroneously reporting failures when in fact they worked fine.


Fix Level 2.0.c Changes:

11. [NT] The common screen painting library used by the shell and a number of
    the utilities would sometimes set the cursor incorrectly if scrolling was
    involved.  It should now be correct.

12. [NT] cut.exe couldn't read files specified on the command line.  It can
    now.

13. The di (diff interactive) alias for diff -b! (merged diff using color,
    ignoring white space differences) has been added to startup.csh and the
    definition for the mi (more interactive) alias has been fixed for NT.

14. [NT] ver.csh was added to the bin directory.

15. [NT] The common keyboard routines now recognize ctrl-H as the same as a
    backspace and ctrl-[ as an escape.


Fix Level 2.0.d Changes:

16. A long-standing bug in the shell's command line editing routines that
    could cause the screen to be painted incorrectly has been corrected.

17. [NT] A bug in the common seek logic used in tar, tail, and xd caused them
    to have problems reading files that came in over a pipe on stdin.  That
    problem has been fixed.  binedit, more, sed and tee used the same logic
    and were recompiled even though they were unaffected.

18. A long-standing, but usually benign bug in the more filter's ISAM
    mechanism was fixed.

19. The shell no longer complains under NT nor fails under OS/2 if one tries
    to edit a history reference (e.g., with !!:s/X/Y/) that's &gt; 64K.

20. [OS/2] dskwrite now properly detects and autoformats any unformatted
    disks it's given as disks 2 or following when using dskwrite -ac.

21. The sizeof sample script has been improved to run a bit faster and to
    avoid problems running out of memory in the C shell if a big directory
    is being measured.


Fix Level 2.0.e Changes:

22. [NT] The common keyboard routines have been fixed to silently gobble up
    CapsLock keystrokes.  They were being passed through to the application.
    The shell, mv, cp, rm and more were affected.

23. [NT] The help screens for label, more and tar and for the internal
    commands hashstat, kill and ps have been edited to replace references
    to OS/2 with NT.

24. eval -h now indicates "success" as its return value.  (It no longer
    causes a loop to exit.)

25. [NT] The C shell no longer litters the output generated by the setenv
    command with current directory variables such as "=C:".  Also, it now
    correctly reads all current directories out of the environment at
    startup.

26. [NT] The C shell now properly treats environmental variable names as
    case-insensitive.  (They're still case sensitive under OS/2.)  The set,
    unset and @ statements are case-sensitive (that's so you can still create
    shell variables that differ from environmental variables only by case)
    but the setenv and unsetenv statements and $var and other variable
    references first try case-sensitive, then case-insensitive variable
    lookups.


Fix Level 2.0.f Changes:

27. [NT] The NT version of the C shell can now determine, just as the OS/2
    version can, whether a child will run in the same or a different window.
    If it's a different window, the shell immediately prompts for a new
    command.

28. [NT] hlabel.exe now includes a warning in the help screen that setting the
    volume label is disabled under NT due to a kernel limitation.  Also, it
    properly gives an error message if you type "label a:foo".


Fix Level 2.0.g Changes:

29. [NT/x86] rm -x was broken in the 2.0.e build when we switched to the July
    SDK compiler; the optimizer generated bad code that we didn't spot.
    Rebuilding with optimization turned off with pragmas fixed the problem.


Fix Level 2.0.h Changes:

30. All the utilities have been cleaned up in preparation for the 32-bit
    release for OS/2 2.0.

31. binedit, chmod, dim, fgrep and head no longer routinely translate
    filenames to lower case, thus avoiding any problems with mixed-case
    filesystems.

32. [OS/2] more no longer has problems forward or backward searching across
    more than 32,000 lines.

33. When moreh [OS/2] or hmore [NT] recognizes that it's reading from a
    file, meaning it can use seeks to re-read any data it discards, it
    now buffers only a 100K window into the file.  That reduces swapping
    under OS/2 and dramatically improves heap performance under NT without
    sacrificing functionality.

34. [NT] The C shell now correctly recognizes that it must wait for DOS apps
    to complete before prompting for another command.

35. [NT] The C shell now responds to Close events from the pull-down on its
    window.


Fix Level 2.0.i Changes:

36. [OS/2] markexe now understands how to mark 32-bit 2.0 applications.

37. The ts.csh script was broken when quoting rules inside a backquoted
    string were changed at release 1.06 but went unnoticed until now.
    The fix was to delete the now superfluous escaped single quotes.

38. If filename completion matched a file with a ! in the name, it wouldn't
    always escape it.  Sometimes it'd just single quote it, causing it to
    be mistaken for a history reference.

39. des had a couple bugs.  Under NT, it would often fail with a divide by
    zero due to improper initialization.  And under both NT and OS/2, it
    didn't handle EOF if data was being read from stdin properly.  Both
    problems have been fixed.


Fix Level 2.0.j Changes:

40. [OS/2] Since there's no .. entry in the root of a FAT drive, cd .. there
    wouldn't work.  Instead, the C shell would try cd'ing to one of the CDPATH
    directories.  It now does the right thing.


Fix Level 2.0.k Changes:

41. [OS/2] The change to markexe at 2.0.i broke it, causing markexe to garble
    the .exe header.  It now works as it should.


Fix Level 2.0.L Changes:

42. [NT] Complete rebuild of everything for the October Beta version of NT.

43. [NT] Background children are now protected from ^C in a console window
    using the new CREATE_NEW_PROCESS_GROUP option to the CreateProcess api.
    Also, the kill command now uses, by default, the new GenerateConsole-
    CtrlEvent api call to send a ^Break to a child.  The advantage is that
    if the child is willing to accept it, links to any DLL's are closed
    properly.

44. [NT] Support for the new shutdown and logoff signal events has been
    added, allowing copies of the C shell to automatically exit when
    shutdown or logoff is selected from the Program Manager.

45. [NT] Support for the new LocalTime notion has been added to the date
    and ls utilities.

46. Additional work has been done on all the utilities and the shell in
    particular to prepare for a full 32-bit OS/2 2.0 release from one common
    source base.

47. [NT] The -s option to fgrep and grep didn't work.  It does now.

48. [OS/2] A number of bad semaphore races were inadvertently introduced
    when support for NT was added at release 2.0.  Apparently, they never
    caused problems (none were ever reported) but, in any event, they are
    fixed now.


Fix Level 2.0.m Changes:

49. [NT] The built-in sleep command no longer forgets to close its open
    thread handle.  Previously, after running sleep roughly 5000 times, it'd
    fail, claiming it couldn't start a new thread.

50. [NT] The -i (interactive) option for mv, cp and rm now works.

51. [NT] Minor changes were made to the shell to prepare it for the DEC
    Alpha version of NT.

52. [NT] Support for LocalTime has been added to the touch utility.

53. [NT] The NTVersion (NT Build number) and WinVersion built-in variables
    have been added and used in the ver.csh script.

54. A new -u (unbuffered) option has been added to the C shell to allow
    it to be used over a communications line.

55. First release of a demo version of the shell and all its utilities.


Fix Level 2.0.n Changes:

56. [NT] Split was broken.  It works now.


Fix Level 2.0.o Changes:

57. [NT] If an ordinary foreground child process was started, wait would not
    work; it'd think the child never completed.  It works now.

58. [NT] ^C now properly kills nested C shell scripts.  Previously, ^C only
    worked if it happened to come in while the top-most level was running.

59. [NT] The shell could trap in certain situations, usually involving labels.
    For example, the one-line script, "foo: echo hello", would trap.  It
    works now.

60. [NT] If the current directory on the current drive was changed in a
    script or other thread, the shell wouldn't properly set it back for child
    processes created from other threads.  That's been fixed.

61. The w option to a search/replace operation in sed was broken.  It's now
    working.

62. [NT] The w command to sed didn't know how to open a file that didn't
    already exist.  It does now.

63. [NT/MIPS] The search/replace command to sed often failed due to datatype
    misalignment in the compiled sed script.  That's been fixed.

64. [NT] The shell now issues an error message if an attempt is made to pass
    a command line longer than 32,282 characters (the limit for the NT
    CreateProcess call) to a child.

65. The fullpath function now knows not to let .. segments back up over the
    system or resource names in a UNC (network) name.  Also, the driveno
    function now reports an error if its argument has an invalid drive
    specification or is a UNC name.

66. The shell now runs logout.csh scripts properly.  A primordial bug caused
    it to issue a prompt if it found a logout.csh script (it shouldn't have)
    and run just the first statement.

67. [NT] Erroneous statements like "cat &gt;" (i/o redirection with no filename
    following) no longer cause the shell to crash.  (Actually, this bug has
    been in the OS/2 version all along also but just didn't happen to cause
    problems.)

68. [NT] File sharing or other errors that prevented a file from being copied
    are now reported by cp and mv.  Previously, the copy would fail, but
    there'd be no warning.


Fix Level 2.0.p Changes:

69. Rerunning a statement that set any of the colors variables to a literal
    (e.g., "for i = 1 to 10 do setenv COLORS = black on white; end") used to
    cause a trap.  It works now.

70. Escape characters in a substitution containing command or variable
    substitutions that were edited to produce more than one word were not
    correctly processed.  E.g.,

         echo "`echo a b`:s/a/A/^""

    produced:

         A b^"

    It should have produced (as it does now):

         A b"

71. A long-standing, but only recently reported bug that could cause traps
    and assert failures doing a cd +c to a subdirectory on another drive
    has been found and corrected.

72. unset'ing or unsetenv'ing a non-existent variable is no longer treated
    as an error.

73. [NT/Alpha] First release with support for the DEC Alpha processor.

74. [OS/2 2.0] First build with complete, working, debugged support for
    use of 32-bit code and the 32-bit API's under OS/2 2.0.

75. [NT] The SHELL variable, if wasn't already defined in the inherited
    environment, would be set to the pathname of the C shell, but with the
    last character dropped.  This has been fixed.

76. ls.exe now accepts a -q (quiet) option, telling ls not to complain
    about non-existent files.  Also, it's more consistent when it does
    complain.  (Previously, it would not complain if it was asked to look
    for an "impossible" name, e.g., a long filename on a FAT drive.)  ls
    also now looks for an LSOPTIONS environmental variable.

77. sed will now ignore Ctrl-Z characters between statements in a script.
    This change lets it process scripts created with editors that insist
    on pasting a Ctrl-Z (EOF) character onto the end of the files they
    produce.

78. [NT] The help alias has been deleted from startup.csh.  It really
    applied only to OS/2.

79. [NT] The cl.csh (compile and link) and makecpgm.csh (make all the C
    programs) scripts have been added to the samples directory along with
    a sample skip file containing fragments of lines that should be skipped in
    the compiler/linker output.


Fix Level 2.0.q Changes:

80. [NT &amp; OS/2 2.0] A very minor performance improvement was made, eliminating
    some unnecessary checks for stack overflow.  (The check was superfluous
    because under NT and 2.0, the system grows the stack automatically as
    needed anyway.)

81. The popup that appears if an internal assertion fails in the C shell
    now goes away, showing what was underneath it, when you press a keystroke.


Fix Level 2.0.r Changes:

82. Minor fixups were done to the C shell, patchlnk, dskread, dskwrite,
    markexe and setrows to allow demo versions to be built for OS/2.

83. The cookie passed to demo versions of the utilities now expires
    more slowly.  Previously, the cookie expired too fast to allow the
    utilities demos to be run reliably from a CD-ROM.

84. [NT] A typo in the kill -h help screen was corrected.

85. [NT/x86] A compiler optimization bug in rm, mv, and cp that affected
    recursive operations against directories has been fixed by turning off
    certain optimizations where the problem occurred.

86. [NT] pwd now exits with a correct return code of 0 if it's successful.
    Also, it now reports an error if asked for the current directory on an
    invalid drive.


Fix Level 2.0.s Changes:

87. [NT] ps was incorrectly reporting running threads as zombies and zombies
    (threads that had ended but which hadn't been cleaned up yet) as running.
    That's been fixed.


Fix Level 2.0.t Changes:

88. [NT] touch didn't properly recognize 4-digit year numbers.  It does now.

89. [NT] ls and pwd didn't properly interpret the MIXEDCASEDRIVES variable
    (off-by-one error).  Also, the shell and pwd didn't show current
    directories in the right case on mixed case drives.

90. [NT] The cl.csh script in samples directory didn't work properly with the
    DEC Alpha compiler; it does now.  Also, it's been enhanced to look for the
    skip file in the same directory with the cl.csh script.

91. [NT] If a child of the C shell changed the console mode (e.g., disabling
    processed input, thus turning off Ctrl-C processing) but didn't reset
    things before exiting, it could affect the shell.  That's been fixed; now
    the C shell resets the console mode every time it prompts for a new
    command from the keyboard.


Fix Level 2.0.u Changes:

92. [NT] The C shell now ensures that the drive letters passed to the NT
    kernel for the current directories are always upper case.  Lower case
    drive letters have been found to be a problem when spawning POSIX
    children.


Fix Level 2.0.v Changes:

93. The C shell now supports command and variable substitution in &lt;&lt;-style
    inline i/o ("here" documents).  Quoting (with single, double or back
    quotes) or escaping any part of the word immediately following the &lt;&lt;
    operator suppresses the substitutions.

94. Error reporting is now substantially improved.  Messages will now show
    the line number of the statement that failed, not where it was called
    from even if it was inside a user-defined procedure.  Also, by default,
    the shell will print out a complete trace of the call stack showing
    arguments passed to procedures, scripts, eval statements, etc., all the
    way down the stack.  (To suppress call stack dumps, invoke the C shell
    with the new -t option.)

95. A new mode that provides more strict compatibility with the original
    BSD C shell has been added.  Triggered by trying to run a script that
    starts with #!/bin/csh or if the shell is invoked with the new -B
    option, the C shell will attempt to process statements in a more fully
    Berkeley-compatible fashion.  (Scripts that do not start with #!/bin/csh
    will still be processed according to Hamilton C shell rules, even if
    the -B option is used to request Berkeley compatibility interactively.)
    In BSD compatibility mode:

   a. The status variable will reflect the return code from the rightmost
      stage of a pipeline.  The tailstatus variable will be ignored.
   b. All the shell variables will be snapshotted and all new variables
      made local to the thread.
   c. Berkeley-style $var[...] indexing notation will be used, where the
      indexing is by word selection operators (like the :-editing operators)
      rather than by expression.
   d. All variable arrays (except argv) will start with element 1.
      Accessing element 0 will give a null.
   e. $0 or $argv[0] will be the scriptname.  $argv will be the rest of the
      argument vector.  The bsdargv variable will be ignored.
   f. The # character will not need to be followed by white space to be
      considered the start of a comment.
   g. The patterns in a case test (inside a switch) will be strings and need
      not be quoted, rather than arbitrary expressions.  Also, the switch
      value is evaluated as a wordlist which may contain variable or command
      substitutions and wildcards and then rendered as a string.
   h. endif and endsw will be predefined aliases for end (but only when
      closing an if or switch, respectively).  breaksw will be a predefined
      alias for break.
   i. "set foo" and "setenv foo" will set foo to a null string, not dump
      its value.
   j. / and /= will perform integer division.
   k. The right operand of the =~ and !~ pattern matching operators will be
      taken as a word which may contain wildcards.
   l. In an expression, a variable must be preceded by $.  If it doesn't, it'll
      be taken as a literal string.

    The changes should allow most scripts to run without problems.  However,
    there will still be a few differences:

   a. The escape character will still be controlled by the escapesym
      variable (shared across all threads), which defaults to ^, not \.
   b. Environmental variables will still be shared.  Changing them in a
      script will change them as seen by the parent.
   c. The special meaning of several break statements on one line will
      not be supported.
   d. unset and unsetenv still do not accept patterns.
   e. The following commands are not supported: bg, exec, fg, glob, jobs,
      limit, nice (but eval gives similar functionality), nohup, notify,
      stop, suspend, unlimit and %job.
   f. History references inside alias definitions will still not be
      supported.
   g. The (...) construct will isolate only the current directory, not all
      variables and other state information.

96. Running a statement in the background using the &amp; flag at the end of the
    line will cause a new "job ID" number rather than a thread ID to be
    printed.  Any threads, processes or screens spawned by that thread will
    inherit that same job ID.  The job ID can be passed to the kill command
    to kill everything associated with that background job.  Also, the ps
    command has been enhanced to show job ID numbers.

97. $* is now supported as an alias for $argv.


Fix Level 2.0.w Changes:

98. A number of minor problems associated with supporting substitutions
    inside &lt;&lt;-style inline i/o documents were fixed:  a) If there was a syntax
    error, the prompt would not be properly reset to prompt1.  b) Single and
    double quotes should have been treated as ordinary characters in inline
    i/o.  (To quote something, only the escape character can be used.)
    c) Any line containing a substitution caused a blank line to be added
    to the history list.  d) If a substitution was at the end of a line, an
    extra space was erroneously added.

99. [NT] The sleep command left a thread entry lying around in the threads
    list after it had already exited.  It's now properly cleaned up.

100. Filename completion with ^F did not quote special characters if there was
    only a partial match.  It does now.

101. Doing a "sed '#'" caused a segment fault.  It now works.


Fix Level 2.0.x Changes:

102. [NT] rm didn't work on read-only directories even with -f or -x.  It
    does now.

103. The more -t option for setting tabstops from the command line didn't
    work.  It does now.

104. diff, uniq, cut, fgrep, grep and sed shared a common i/o buffering
    routine that had a bug that could cause them to crash or produce
    erroneous results on files with line ends other than \r\n.  That's
    been fixed.


Fix Level 2.0.y Changes:

105. There was a bug in the Berkeley compatibility mode introduced at 2.0.v
    that would cause the shell to hang if a #!/bin/csh script that contained
    any set statements was run more than once.  That's been fixed.


Fix Level 2.0.z Changes:

106. Calling the abs() built-in function without an argument caused the shell
    to crash.  It now gives an error message as it should.


Fix Level 2.0.27 Changes:

107. The changes made at 2.0.v to provide call stack dumps caused line
    numbers not to be shown in parser error messages when compiling scripts.
    That's been fixed.

108. The -I, +I, -O and +O command line options have been added to the C shell
    to allow insert mode to be customized.  Type "csh -h" for more info.

109. [NT] mv didn't properly move read-only files across disk partitions.  It'd
    make a copy, then complain it didn't have proper access.  It works now.


Fix Level 2.1 Changes:

110. [NT] First complete rebuild for the March beta.

111. [NT] tar now knows that NT keeps track of timezone information.  The TZ
    variable and the -g and -G options are no longer used.

112. [NT] The shell is dramatically faster, especially at inserting into long
    command lines and compiling scripts on the DEC Alpha and MIPS R4x00.

113. The -b option has been added to the C shell to turn off Berkeley mode
    even on scripts that start with #!/bin/csh.

114. Error messages from the C shell should now all be properly displaying line
    numbers where appropriate.

115. A bug that potentially could have (but was never reported to have) caused
    the shell's unproc and unalias commands to crash was fixed.

116. [NT] The cl.csh script in the samples directory has been updated for
    the March NT beta and now knows about the hybrid compilers on the MIPS
    and Alpha machines.  Use -old to get the old compilers.

117. [NT] hlabel.exe can now set the label on a volume.  (There was no Win32
    API to support this under the October Beta.)

118. [NT] The C shell -Z option now works.  (Previously, it was ignored under
    NT because there was no support for it under the October Beta Win32.)

119. [NT] The rm.exe command has been renamed hrm.exe and an "alias rm hrm"
    command added to the default startup.csh script to avoid conflicts with
    the brain-dead Microsoft rm.exe command supplied with the NT SDK.

120. [OS/2 2.0] Inexplicably, DOS VDM applications were being started in
    invisible windows.  Accessing them required typing Ctrl-Esc.  They're
    now properly started in visible windows.


Fix Level 2.1.a Changes:

121. [NT] Touch, mv, cp and tar now know how to set the timestamps on
    directories.

122. csh -XC now looks for a command immediately following the "C".  It no
    longer tries to parse any remaining characters in that word as option
    characters and no longer requires the command to start in the next word.


Fix Level 2.1.b Changes:

123. [NT] Hlabel would only change the label on the current drive.  It works
    properly now.

124. The C shell didn't properly handle $i[$j] and $i[$k[^]] references in
    Berkeley compatibility mode.  That's been fixed.

125. Set variables weren't always inherited by child threads in Berkeley mode.
    For example,

       % set i = 1; echo `echo $i`

    didn't work.  It does now.


Fix Level 2.1.c Changes:

126. In Berkeley mode, double quoted substitutions involving $0 could fail.
    E.g.,

      % echo "$0 a"

    caused the shell to crash.  It works now.

127. The Berkeley C shell would accept case clauses that didn't have colons
    following the test and those with quotes around the pattern.  This wasn't
    the documented behavior but some users did write scripts that depended on
    it so Hamilton C shell now allows that also in Berkeley mode.

128. for i = 1 to 1 by -1; echo $i; end would loop through 1, 0, -1, -2, -3,
    etc., rather than exiting after the first iteration.  That's fixed now.


Fix Level 2.1.d Changes:

129. [NT] Trying to set path[i] garbled the global variables lock.  That
    statement would appear to work, but, e.g., trying then to do a setenv
    would hang and eventually crash.  That's been fixed.

130. In Berkeley mode, other indexed variable references such as @ i[$j]++
    didn't index properly.  They do now.

131. [NT] The cl.csh script in the samples directory didn't properly work
    with -O options.  It does now.


Fix Level 2.1.e Changes:

132. [NT] The dskwrite and dskread utilities have (finally!) been added.

133. [NT/x86] Tar no longer fails when it tries watching for binary files and
    automatically turning off \n to \r\n conversions.  (This was actually a bug
    in all versions of tar; for some reason, it just didn't manifest itself
    except in the NT/x86 version.)


Fix Level 2.1.f Changes:

134. [NT] A bug in NT's DOS subsystem caused DOS apps started from the C shell
    to think they were running in the wrong current directory.  E.g.,

      1 C% cd \tmp
      2 C% dosapp
      3 C% cd ..
      4 C% dosapp &lt;-- Still thought it was in \tmp

    This build contains a workaround for the problem.

135. In Berkeley compatibility mode, the C shell no longer tokenizes #
    separately to recognize comments. Thus, where previously

      echo `echo '#r'`

    produced "# r", it now properly produces "#r".


Fix Level 2.1.g Changes:

136. dskread and dskwrite didn't properly handle missing ordinates, e.g.,
    (35,,) or ranges that weren't closed, e.g., (50,0,0)-.  It works now.

137. [NT] dskwrite didn't work at all writing an entire disk.  It does now.

138. [NT] ls no longer generates a spurious "'*.*' does not exist" message
    when listing a blank formatted diskette.  Also, it now does give a
    message when listing an unformatted diskette.


Fix Level 2.1.h Changes:

139. Changes made to support stack tracing caused the shell to crash if the
    prompt was set to something involving command substitution.  That's fixed.

140. In certain cases, the diagnostics would indicate an error at line 1 when
    it should have said something else.  That's been fixed.

141. The C shell's -I option didn't work.  It does now.

142. [NT/Alpha] Expressions such as i += 1, where i is an integer, were
    incorrectly producing a floating point result due to a compiler
    optimization error.  In this build, optimization has been turned off
    for the relevant module to ensure correct results.

143. [NT/Alpha] du didn't correctly report the total space on a drive.
    This build contains a workaround.

144. [NT] dskwrite -F crashed.  It works now.

145. [NT/Alpha] dskread and dskwrite would frequently fail, complaining they
    couldn't read the drive parameters, if the diskette drive had not
    previously been accessed.  Rerunning dskread or dskwrite would work.
    This has been traced to a bug in the Alpha/NT system; the current build
    contains a workaround to ensure correct results.

146. [NT] It's now possible to redirect stdout to a device such as \\.\a: or
    \\.\tape0.


Fix Level 2.1.i Changes:

147. tar complained about archives created on UNIX SVR4.  The SVR4 tar writes
    all octal fields in the header as null-terminated strings, contrary to
    spec as defined in the BSD 4.3 Programmer's Manual which says that many
    of the fields should be terminated with space + null and others not
    terminated at all.  Hamilton tar now knows to accept this variant format
    without complaint.  Also, when tar extracts files, it now sets the archive
    bit on the newly-extracted files.

148. mv and cp now retain the case of any filenames they move.  Previously,
    if one typed "mv foo ..", the resulting file would be in whatever case
    was typed, not what it had been stored as previously.

149. [NT/Alpha] Expressions like 2**10 resulted in floating point results
    (albeit correct ones) when they should have produced integer results.
    This build contains a workaround.

150. [NT] winerror.c and winerror.exe were added to the samples directory
    and the help proc definition were added to startup.csh.  This gives a
    convenient means of getting the Win32 error message corresponding to a
    return code.

151. [NT] The source command should have tried pasting a .csh extension onto
    the filename if the name as specified didn't exist.  It does now.

152. Command substitution now processes certain unquoted escape sequences in
    the backquoted string before parsing it.  This ensures, e.g., that the
    following will work, producing "1 2 3 4 5":

      echo `for i = 1 to 5 do ^
      echo $i ^
      end`

153. If callstack reporting was turned off with csh -t, there was a possibility
    (never reported) that the shell could crash following stack pops.  That's
    been fixed.

154. The shell now generates callstack reports for scripts read with the
    source command and now reports the correct linenumber if a syntax error
    is encountered inside the sourced script.

155. [NT/Alpha] strings was broken due to a bug in the Alpha compiler.  This
    build contains a workaround.

156. [NT] International keyboard keying conventions (e.g., ALT + 8 to create
    the "[" character on a German keyboard) should now be working.  This
    change affects the C shell, mv, cp, rm, more and des.


Fix Level 2.1.j Changes:

157. [NT/x86] diff had two problems with binary files:  a bug in the code that
    automatically detected binary data could cause diff to crash.  Also, a
    compiler optimization bug caused diff to claim there were differences in
    binary files that were in reality exactly the same.  This build fixes
    both those problems.


Fix Level 2.1.k Changes:

158. [NT] The change made at 2.1.i for international keyboards ended up
    breaking support for Ctrl + other keys such as Enter or [.  That's now
    fixed, affecting the C shell, mv, cp, rm, more and des.

159.  Startup.csh changed to show how users might customize it to have operands
    to dir wildcarded by the C shell or by cmd.exe itself.

160. [NT] The cl.csh script in the samples directory now accepts the CPU
    variable values typed in mixed case.

161. [NT] The C shell no longer hangs if you attempt to kill a child Win3.x
    app and then do a ps.  (But you still can't kill the Win3.x children,
    apparently due to a bug in NT.)

162. [NT] The C shell now places =X:-style current directory variables into
    the environment for all valid drives at startup, even for drives for
    which the current directory is the root.  This is to work around an
    apparent problem in the VDMs under NT on the RISC machines.


Fix Level 2.1.L Changes:

163. The changes made to support the -B (Berkeley compatibility) option
    broke the use of the bsdargv variable and could cause the shell to
    crash.  bsdargv is more-or-less obsolete now, but it certainly shouldn't
    cause a crash; it's been fixed in this build.

164. The startup.csh file has been fixed so that the alias/proc mechanisms
    used to intercept copy, xcopy, etc., will still work if the shell is
    invoked with -B.  (The problem was with the @ s = nowild statements in
    the aliases.   In Berkeley mode, a $ was needed to make a valid
    expression.)


Fix Level 2.1.m Changes:

165. The changes made to support the -B (Berkeley compatibility) option
    introduced a bug in indexed variable evaluations done in the prompt1
    and prompt2 variables.  Also, some never reported but latent bugs in
    iterated statements containing indexed variable references were fixed.


Fix Level 2.1.n Changes:

166. Yet another UNIX tar was discovered that formatted octal fields in
    the headers slightly differently than the spec required, causing our
    tar to reject the file.   This release contains a fix to cause tar to
    accept virtually anything that looks like a plausible octal number.

167. Filename expansion now knows to quote or escape any { or } characters
    in any files it matches.


Fix Level 2.1.o Changes:

168. [NT] The C shell now knows to ignore nonsensical Ctrl-&lt;key&gt; combinations.
    Previously, these keystrokes could cause the C shell to get confused about
    the cursor position.

169. [NT/Alpha] Problems with expressions for which workarounds were added
    at 2.1.h and 2.1.i have finally been tracked down to a legitimate coding
    bug in the long precision math routines for the Alpha.  It's corrected
    in this build.


Fix Level 2.1.p Changes:

170. sed no longer allows "." to match either CarriageReturn or NewLine.  This
    ensures that

         echo abc | sed 's/./&amp; /g'

    sensibly produces "a b c \r\n", not "a b c \r \n ".

171. Typing a few characters onto the command line, pressing Escape and then
    End caused the C shell to put the cursor in the leftmost column in the
    window rather than, as it should have, in the column following the prompt.
    That's been fixed.

172. [NT] The cl.csh script now knows how to handle C++ files with .cpp
    or .cxx extensions, resources in .rc, .res or .rbj files, and create
    either console (default or -console) or graphical (-GUI) applications.

173. [NT/x86] The args.exe, dumpenv.exe, myecho.exe and rcode.exe files in
    the samples directory had never been rebuilt since the October beta.
    They worked on the March beta but not the later builds.  They have
    now been rebuilt.


Fix Level 2.1.q Changes:

174. [OS/2] The startwin.exe utility has been added.  This is a tiny PM
    program that can be used to start Win3.x apps seamlessly on the desktop
    under OS/2 2.x.  It's automatically invoked by the C shell if you type
    the name of a Win3.x app when running under OS/2 2.x.  For more info,
    type "startwin -h".

175. The C shell now intercepts the situation where a PM child under OS/2
    or a non-console app under NT is being run and stdout or stderr is tied
    to the C shell's console window.  Since console handles aren't inheritable
    in these cases, the C shell will instead pass a handle to the input end
    of a pipe and start a new background thread to copy anything written into
    that pipe onto the screen.  This lets ordinary printf's be used in PM
    or Win32 GUI apps without losing the output.

176. In Berkeley mode, the C shell no longer does any history expansion inside
    comments.


Fix Level 2.2 Changes:

177. [NT] A complete rebuild of the whole product on the release versions
    of NT on all three platforms.

178. [OS/2] If a child process ended with a hard error or a trap, the
    C shell didn't dump out the call stack.  It does now.

179. The C shell no longer routinely translates the PATH directory names
    to lower case.

180. Processing of special characters inside single- or double-quoted
    strings has been improved slightly.  It's now possible to type, e.g.,

       set prompt1 = '$ansi("bright yellow")$cwd '

181. ls.exe now gives an error message if a UNC name it's given doesn't
    exist.  Previously, the message was generated only for non-existent
    local names.

182. [NT] cl.csh in the samples directory has been updated for the final
    release of NT, which does not use an ntdll.lib.  It now accepts -O...
    optimization options which override the defaults.  When it finds a
    skip file, it sets the shell variable, skip, to the full pathname; that
    allows the ferr alias to work even if cl is called first from its own
    directory and later from another directory.  Also, cl knows that in
    the final release for the Alpha, acc can (finally!) use the INCLUDE
    environment variable; it's no longer necessary to break it up into
    a series of -I options.  Finally, the _MT symbol is now defined.

183. [NT] cp now knows how to set the timestamps on any read-only directories
    it copies.

184. head, tail and tabs had a bug that caused the [ in an ANSI escape
    sequence to be turned into two ['s if it fell on a buffer boundary
    when expanding tabs.

185. The demo.exe supplied with the demo version of the C shell no longer
    uses the existing HOME variable even if it's defined.  That was causing
    problems when HOME pointed to something with different/missing login.csh
    or startup.csh files.  Also, under NT, it now registers a signal handler
    so it won't exit before its child has exited.

186. It's now possible to wildcard drive letters.  E.g.,

         ls *:\*\bin

    now works.  If an * or ? is specified for the drive letter wildcard,
    then the set specified by the DRIVEMASK environmental variable is used.
    If DRIVEMASK has not been set, the drives c: through z: (as may exist) are
    searched.  To search drives a: and b:, which are usually floppies, you
    must specify them explicitly, e.g., [a-z]:\*\bin.  Also, if the path
    is on one of the MIXEDCASEDRIVES, the entire resulting path will be in
    the correct case.

187. fullpath now puts the resulting pathname into the actual case stored
    in the filesystem if the the path is on one of the MIXEDCASEDRIVES.
    Otherwise, it puts the result into all lower case.

188. ls wouldn't report anything on a UNC drive if invoked with the current
    drive was one of the MIXEDCASEDRIVES.  It works now.  Also, MIXEDCASEDRIVES
    can now accept a list of UNC servers and/or drives following the range
    of drive letters.  For example:

       setenv MIXEDCASEDRIVES = d-f,\\alpha\drive-c,\\beta

    means that drives d: through f:, drive-c on \\alpha, and all drives on
    \\beta are mixed case.  \\ without a machine name means all UNC names
    should be reported in mixed case.  Individual list items should be
    separated by commas, semicolons or white space.

189. du now complains if you ask for it to report on something other than
    a: through z:.

190. cp and mv no longer attempt to set the timestamp of an existing directory
    when merging in another directory (e.g., in doing "mv a: .").

191. [NT] cp and mv no longer give a bogus message about not being able to
    query path info about the root directories on diskettes.

192. [OS/2] newer and older failed to compare the seconds component if two
    timestamps matched down to the minutes.  That's fixed.

193. The cron utility has been added.  For help, type "cron -h".

194. The -Y option to suppress the installation of an interrupt handler
    has been added to the C shell.  Under NT, this option is ignored.

195. fgrep -x didn't match lines that didn't happen to cross buffer
    boundaries.  It should now work in all cases.  Also, a minor change
    in the interface to internal get_line routine was made in fgrep, grep,
    and cut.

196. The C shell now accepts empty statement lists in an if/then/else,
    following a default: case in a switch statement or in (...) or
    {...} groups for better compatibility with the Berkeley C shell.

197. more didn't properly truncate the filename in the prompt at the bottom
    of the window if the filename was too long.  Under NT, that caused it
    to fail completely.  Under OS/2, it ran, but it couldn't display command
    keystrokes.  All that's fixed.

198. [NT] If dskread/dskwrite is unable to open a drive because of a
    sharing violation, it waits 3 seconds and tries again.  This is to
    allow any writes in the system buffers to get flushed to the drive.


Fix Level 2.2.a Changes:

199. [NT] The mt (mag tape) utility has been added.  Type "mt -h" for help.

200. Tar now ensures that it never writes blocks of less than 512 bytes
    at a time.  That was important for writing to the tape device under NT.

201. [NT] dskread and dskwrite will now sleep up 7 seconds in 100 millisecond
    increments, waiting for a slow diskette to free up rather than a flat,
    all-or-nothing 3 seconds.


Fix Level 2.2.b Changes:

202. [NT] Changes (mostly just to the makefiles) to support a port to another
    unannounced RISC processor running Windows NT.

203. [NT] strings -v didn't properly display the filenames associated
    with the strings it found.  It works now.


Fix Level 2.2.c Changes:

204. [NT] If the C shell was started with a title bar longer than 127
    characters, it would crash.  That's fixed.


Fix Level 2.2.d Changes:

205. [NT] More minor changes for yet another port to an unannounced RISC
    processor running Windows NT.

206. [NT] mt.exe didn't format error messages properly.  It does now.

207. [NT] touch.exe had an uninitialized variable that caused it to set
    timestamps off by a random number of milliseconds.  That's fixed.


Fix Level 2.2.e Changes:

208. Changes made at release 2.2 related to better support for mixed case
    drives created a bug in the fullpath built-in function which caused a
    number of problems on a mixed case drive:  (a) fullpath("*.*") returned
    "c:\foo\." rather than "c:\foo\*.*", (c) under NT, fullpath opened a
    FindFirstFile directory handle that it would forget to close, making it
    impossible to delete the directory, (d) the shell would claim it
    couldn't find executable files in the current directory, (e) if nohashing
    was set to 2, then the shell wouldn't be able to delete any directory
    which had been a current directory at a time when any external program
    was run.  All these (seemingly different) problems were the result of
    the same 2-line bug, now fixed.

209. Those same changes at 2.2 to support mixed case also involved turning
    all filenames to all lower case on non-mixed case drives in the fullpath
    function and in the filename editing functions (:b, :e, :f, :t).  That
    caused problems for a large customer and has been backed out.

210. [NT] The C shell now uses _beginthread/_endthread to start or exit any
    threads it creates instead of calling CreateThread directly.  Microsoft
    has advised that the C run-time library (including even basic functions
    like malloc) may cause memory leaks if _beginthread isn't used.

211. [NT/Risc machines] tr -s (squeeze option) didn't work.  It does now.

212. [NT] A bug in the common display routines caused ANSI escape sequences
    to be parsed incorrectly if the escape sequence was broken across a
    buffer boundary.  The failure was a very rare event, but it could
    affect lots of utilities.  It's fixed in this build.

213. [NT] xd -w didn't work properly.  It does now.

214. A set of sed scripts have been added to the samples directory for
    converting Bourne/Korn shell scripts into C shell scripts.  Customers have
    reported these sed scripts eliminate about 85% of the work of converting
    shell scripts.


Fix Level 2.2.f Changes:

215. Statements joined with the &amp;&amp; conditional execution operator were
    viewed as having failed with an error (causing loops to exit, etc.) if
    the leftpart returned a non-zero return code.  It should not have been
    an error and is now fixed.


Fix Level 2.2.g Changes:

216. If there were any command or variable substitutions inside a &lt;&lt;-style
    "here document", the line number was incorrectly incremented a second
    time.  That's been fixed.

217. Cron has been enhanced to treat blank lines and lines beginning with
    # as comments.  It also now give a warning if the values specified in
    any particular field are not monotonically increasing (to help catch
    mistakes forgetting to use 24-hour times).  Finally, a bug in the
    parsing of the day/date specification fields has been fixed.

218. The C shell has been enhanced to support use of Tab and Shift-Tab for
    file completion.  Repeatedly pressing Tab gives the first and following
    matches, one at a time.  Shift-Tab starts at the end and works backward.
    To disable Tab completion, start the C shell with the -T option.  (You
    may wish to use the CSHOPTIONS variable to do this.)

219. Heapstat figures could become garbled if filename completion was used
    and it resulted in a large number matches.  That's corrected.

220. A dollar sign that's not followed by a valid variable reference is now
    treated as literal text rather than as an error.  That makes it more
    convenient, e.g., to type UNC names such as \\alpha\d$; it's no longer
    necessary to remember to escape the $.

221. A bug in processing of the MixedCaseDrives variable has been fixed.


Fix Level 2.2.h Changes:

222. The Tab completion introduced at 2.2.g had a few bugs:  If there were
    no matches found, the shell crashed.  The original wildcard string was
    garbled if one tabbed all the way through the ring back to the original
    wildcard.  There were some minor memory leaks.  Finally, the help
    information was wrong:  -T _disables_ tab completion.  These problems
    have all been fixed.

223. [NT] The blksize utility has been added to the samples directory.  It
    can be useful for reading/writing tape devices that support only certain
    blocksizes.

224. [NT] Under certain cases, cp would fail to recognize attempts to copy
    a file over the top of itself and would actually try to do the copy,
    causing the file contents to be lost.  That's fixed.


Fix Level 2.2.i Changes:

225. More work on tab completion:  when tab completion is enabled, a plain
    tab can be typed as Ctrl-Tab.  When -T is specified, tab completion is
    now still available, but as Ctrl-Tab and Shift-Tab.  Also, if the original
    wildcard contained { or }, cycling back to it didn't work right:  the
    { and } characters were escaped; they should have been left alone.
    That's fixed.

226. Aliases now support arguments using the history reference-style syntax
    used by the Berkeley C shell.  If there are no references, any arguments
    are simply pasted on the end of the expansion as before.  For example:

      1 D% alias test echo ^!^* world
      2 D% alias test
      test        echo !* world
      3 D% test hello
      hello world
      4 D% alias test echo hello
      5 D% test world
      hello world

227. Long-form history references now properly support braces around the
    argument.  E.g., "!{!}" is the same as "!!".

228. [NT] "mt -v status" now continues dumping the tape device status even
    if it cannot determine the block number at which the device is positioned.
    Also, some of the status information was garbled; it's now correct.

229. Editing operators may now be used inside the curly braces in a variable
    reference, e.g., ${cwd:h}.  Also, any number of braces may be nested
    around a variable substitution.

230. A memory leak when aliases were unaliased has been fixed.

231. The member.csh script has been added to the samples directory.

232. (...) statement groups and {...} expressions weren't being evaluated
    correctly.  The status code was being discarded.  (That made {...}
    expressions pretty useless.)  That's fixed now.  Also, {...} expressions
    no longer push &amp; pop the directory stack on entry and exit.


Fix Level 2.2.j Changes:

233. Wildcarding and filename completion didn't work with MixedCaseDrives
    set if the pattern contained a ".." or "." level.  That's fixed.

234. Doing Shift-Tab, then Tab skipped over the step of reposting the
    original wildcard string.  That's fixed.

235. The -Z option has been added to rm.exe (hrm.exe under NT) to allow
    a file to be completely overwritten with binary zeros before deletion,
    thus guaranteeing that no one can "undelete" the file later.

236. [NT] The change made to cp at 2.2.h was too conservative and caused
    it to refuse to do some copies that were legitimate, e.g.,
    "cp foo\bar .".  That now works.

237. tar has been dramatically improved.  Over 30% more code was added,
    to provide these new features and improvements:
    a) It now is able to read/write CPIO ascii and binary files and to
       automatically recognize them when it encounters them.
    b) It now knows how to do \r\n -&gt; \n conversions to an archive even
       when it's writing the archive to a pipe or a tape device where seeking
       back to the header to fixup the size field is impossible.  (It now
       uses a prescan of the data if seeking is not going to be possible.)
    c) A new -ff variation on the fullpath option causes tar to write the
       entire pathname specified on the command line (including any drive
       letter and colon) into the archive.  This isn't really legal for
       restoration on a UNIX machine, but it does let you use tar to back
       up more than one drive at a time.
    d) If \'s were typed in filenames given on the command line, tar would
       not convert those to /'s in the archive.  That caused problems for
       restoration on a UNIX machine.  tar now converts all \'s to /'s.
    e) A lot of work was done to directly support tape drives under NT.
       Tape devices can now be opened as an archive file using the name
       \\.\tape0.  It's now possible to specify a blocksize to be used in
       reading/writing the archive.  Also, if tar discovers the archive
       is on a tape device, tar will try to ensure that it's using a
       blocksize that's compatible with the drive and that the drive has
       been properly initialized.
    f) The -v (verbose) option now causes tar to report the format (TAR vs.
       CPIO binary vs. CPIO ASCII) and byte sex was used in the archive.
    g) The -b (bytesex) option didn't work.  It does now.
    h) If a file being added to an archive is on a drive listed in the
       MixedCaseDrives environment variable, the filename will be stored
       into the archive in mixed case.

238. uniq -u didn't report the last line if it was unique.  It does now.

239. Null argument words weren't being passed to child processes started
    from the C shell.  E.g.,

       1 C% myecho hello "" world
       'myecho' 'hello' 'world'
       arg length = 19 characters.

    It should have (and now, does) produce:

       'myecho' 'hello' '' 'world'
       arg length = 20 characters.

240. The sample startup.csh has been modified so that it can be re-invoked
    by the same copy of the C shell without causing the layer number to be
    incremented.

241. [Demo versions] The maximum number of commands that can be typed before
    the demo exits, forcing the user to start a new copy has been raised from
    5 commands to 10 commands.


Fix Level 2.2.k Changes:

242. If certain wildcarding situations with MixedCaseDrives, the shell would
    forget to close a directory handle, making it impossible to delete the
    directory without exiting the shell.  That's fixed.

243. More work on cp to avoid problems copying files on top of themselves,
    this time treating the case "cp x d:" where x is on d:.


Fix Level 2.2.L Changes:

244. Corrected minor typos in the tar help screens.

245. [NT] Minor support work for unannounced RISC platforms.

246. [NT] A new, more standard makefile has replaced the old samples.mak
    in the samples directory.


Fix Level 2.2.m Changes:

247. A bug in the goto statement implementation that could cause access
    violations in the C shell was fixed.

248. Minor typos in the tar help screens were fixed.


Fix Level 2.2.n Changes:

249. Incrementing or decrementing an indexed built-in variable (e.g.,
    processid[1]++) actually changed argv, not the intended variable.  That's
    fixed.

250. The new tar was incorrectly writing directory names as if the -f option
    was specified, even if it wasn't.  Files themselves were added correctly.
    Now, both should be right.  Also, when listing the contents of a tar
    archive, tar printed the trailing / following directory names, just as
    they appeared in the archive.  That trailing / is no longer shown, making
    the output a little more like that of ls.

251. [NT] Trying to move a directory from one partition to another would fail
    with a sharing violation, claiming the directory was in use by another
    process, if the directory contained subdirectories.  That's fixed.

252. If MixedCaseDrives was used, wildcards like ..\..\* would fail if used
    more than 2 levels down from the root.  That's fixed.

253. Ctrl-C interrupt handling has been improved.  Interrupts now bubble
    up better from interrupted child processes and threads to the threads
    that created them.

254. The C shell no longer arbitrarily sets its exit code to 1 when it
    should be 0.


Fix Level 2.2.o Changes:

255. The new tar was properly reading cpio ASCII files, but wasn't writing
    them correctly.  Support for cpio binary files just didn't work at all.
    Appends to either tar or cpio files also didn't work.  All this should
    be working now.


Fix Level 2.2.p Changes:

256. Environment variables could be properly set to zero words, but if a
    new child copy of the C shell was started, it'd parse the value it was
    passed as a single word consisting of the null string.  That's fixed.

257. If ignoreerors was set to 2 (ignore everything), then continue, break,
    goto, exit, logout and return statements were treated as nops.  That's
    fixed.

258. The -e (execute only, no logging to history) and -L (load history)
    options have been added to the source command.  Also, the -n (no
    execute) option has been changed to do a syntax check, consistent
    with the -n option for the C shell itself.

259. If the C shell was started with the -n (no execute) option, exit didn't
    work.  It does now.


Fix Level 2.2.q Changes:

260. [NT] The mt -f option didn't work.  It does now.

261. source -s could cause the shell to crash if it was trying to read
    from the keyboard.  The bug could apparently (though never reported)
    also cause other failures.  The problem is now fixed.

262. If the new argument notation was used in an alias, then word separator
    characters were incorrectly handled.  Aliases such as the following
    didn't work, but should now:

       alias x  (echo ^!^*; echo hello)

    Also, errors involving unpaired quotes in an alias expansion such as
    the following were overlooked.  They're now caught.

       alias y echo "'"


Fix Level 2.2.r Changes:

263. The demo version of cron were looking for csh.exe; they should have
    been looking for cshdemo.exe.

264. Minor work to support a demo version of the C shell that would expire
    at a future date.


Fix Level 2.2.s Changes:

265. [NT] The work done at release 2.2.e to use _beginthread instead of
    CreateThread has been undone after it was discovered that the thread
    handle returned by _beginthread is unreliable.  The C shell and all the
    utilities and samples now use the single-threaded CRTL, locking each
    use with a critical section.  In general, things are now a bit smaller
    and a bit faster.

266. [NT] Everything has been recompiled on Daytona.  It should, however,
    still be fully compatible with the released NT 3.1 build.

267. [NT] dskread and dskwrite now use paragraph-aligned (16-byte aligned)
    buffers for all I/O to the diskette.  Something changed in Daytona,
    non-paragraph-aligned buffers used to work under NT 3.1, but stopped
    working on the MIPS under Daytona.

268. [NT] The blksize utility in the samples directory now uses a paragraph-
    aligned buffer.

269. Tar didn't work if you tried backing up a root directory.  Under NT,
    it did nothing; under OS/2, it crashed.  That's now fixed.

270. Sed now accepts escape sequences like \r and \n in search and replace
    expressions.  Also, the help information for static text operations
    (a\, c\ and i\) has been made a bit more readable.

271. [NT] The cl.csh sample script has been updated for the Daytona beta.

272. [NT] The tape device always reports an error, ERROR_BUS_RESET, if
    GetTapeParameters is called immediately after a new tape has been
    inserted.  Calling GetTapeParameters again gives useful information.
    The mt and tar utilities have been fixed to do that second attempt.

273. [NT] The eraseshort operation has been added to mt.

274. [NT] Some additional nuisance messages produced by the Daytona compilers
    have been added to the skip file in the samples directory.


Fix Level 2.2.t Changes:

275. Expressions in an elif clause were evaluated in Hamilton C shell mode,
    even inside #!/bin/csh scripts, where clearly Berkeley rules should be
    used.  That's been fixed.

276. [NT] Under Daytona (NT Release 3.5) or later, the C shell now starts
    child processes with error mode set to zero, just as cmd.exe does.
    The C shell itself uses a non-zero error mode to disable popups,
    allowing the shell to intercept any error conditions.  That's important
    to allow unattended scripts to be run.  But error mode was inheritable
    under NT 3.1 and it caused problems with some 3rd party apps that
    just assumed they'd be started with error mode = 0.  Daytona has a
    new option to CreateProcess to allow apps running with a non-zero
    error mode to start children with a zero error mode.


Fix Level 2.2.u Changes:

277. [NT] Changes made at 2.2.s to use CreateThread instead of _beginthread
    and GlobalAlloc instead of malloc introduced a bug into the C shell
    and cron:  their use of GlobalReAlloc was flawed and caused any
    reallocations (e.g., if editing caused the command line to grow beyond
    4 lines) to fail.

278. Dskwrite and cp, rm and mv can now diagnose more clearly those
    failures due to write-protected media.

279. cron now considers a Ctrl-Z character in a crontab as an end-of-file.
    Also, if any of first five fields is garbled, the message is better.

280. The line numbers in any messages resulting from a garbled command
    specified with -C or -c are now correct.  A counter hadn't been
    re-initialized after login.csh and startup.csh were read.

281. Tar's verbose messages now mention the blocksize it's using.


Fix Level 2.2.v Changes:

282. Support for escape sequences such as \r, added to sed at build 2.2.s,
    has been added to grep.  Hex escape sequences, which didn't work right
    in sed, have been fixed and work properly in both sed and grep.

283. Sed and grep now accept span expressions using the \{n,m\} syntax.
    E.g., grep '10\{2,4\}1' will match 1001, 10001 and 100001, but not
    101 or 1000001.

284. The rot13 alias (for decoding off-color jokes on Internet) has been
    added to startup.csh.

285. A number of improvements were made to tar:

      a) [NT] Tar would crash in its error message routine if it was asked
         to copy a file to the archive that was open for writing by another
         process.  That's fixed.
      b) [NT] Tar now normally rewinds the tape device at the start and
         at the finish of the operation.  This can be suppressed with the
         new -N (no rewind) option.
      c) Tar's messages about suppressing \r\n -&gt; \n line end conversions on
         binary files now appear only if the -v (verbose) option is selected.
      d) If it encounters a file that can't be copied to the archive, tar now
         just gives a warning and continues; it used to give a message and
         just quit.
      e) The spurious messages about garbled headers are suppressed for
         empty tar files.
      f) [NT] Failed attempts to set the blocksize on a tape device are now
         treated as cause for a warning message, not a fatal error.

286. The sh_2_csh.csh script had some out-of-date references to an
    sh-2-csh subdirectory.  Because the hyphen isn't a legal character on
    CD-ROM filesystem, that directory was renamed but the change wasn't
    made to the script.  Now it's correct.

287. [NT] The how2tar.txt and how2tar.wri files were added to the distribution
    disks to explain how to get tar to work with a tape drive under NT.

288. The license.txt file was added to each of the .zip files on the demo
    disks.


Fix Level 2.2.w Changes:

289. Dskwrite -FH didn't work at all under OS/2 and not on unformatted
    disks under NT (for different, unrelated reasons under the two systems).
    It works now.

290. Minor typos in the help screens for sed, grep, kill, and the C shell
    itself were corrected.

291. [NT] The how2tar.* files were omitted from the product versions of some
    2.2.v disks.  It should be on all of them now.


Fix Level 2.2.x Changes:

292. [NT] A bad race that could hang the C shell on a multiprocessor system
    was fixed.

293. The mixedpath(...) function and the :m editing operator were added to
    allow the true mixed case filename stored in the filesystem to be
    retrieved.

294. The :h operator didn't work on a filename consisting of only a \.  It
    does now.

295. Dskwrite -FH and -FL still had problems formatting some disks, depending
    on how they were previously formatted.  Hopefully, all cases should now
    be covered.  Also, a -E option was added for Extended Density formatting.

296. Additional work on tar:

     a) The help screen for tar now mentions that -b abcd is little-endian
        and -b badc is big-endian and that if the archive is intended to be
        read on a RISC or Motorola-based UNIX workstation, big-endian should
        be used.  The -bB (Big-Endian) and -bL (Little-Endian) aliases for
        -b badc and -b abcd, respectively, have been added.  Also, the -v
        (verbose) output now specifically identifies abcd and badc formats
        as Little-Endian and Big-Endian, respectively.
     b) [NT] The help screen for tar now mentions that you must manually
        specify a blocksize of 1024 or larger to make a DAT drive work.
     c) The -I option, allowing the list of files to added to/extracted from
        an archive to be specified in an include file on disk or via stdin,
        has been added.
     d) The -A option has been added, meaning reset the Archive bit on any
        files or directories copied to a tar or cpio archive file.  (During
        extraction, -A is ignored and the Archive bit is always set.)
     e) The ReadOnly bit is now preserved properly.

297. The CSHTITLE environmental and cshtitle shell variables have been added,
    allowing control over the text in the title bar.  They work like the
    PROMPTx and promptx variables and are recalculated whenever they're
    displayed.  Unset'ing cshtitle causes "Hamilton C shell" to be used;
    set'ing cshtitle to a null string causes the title bar it inherited
    at entry to be used.

298. Setting prompt2 incorrectly set prompt1.  It now correctly sets prompt2.

299. [NT] The ps command didn't report the thread id's correctly following
    the work done at 2.2.s to switch back to using CreateThread.  ps now
    works properly.

300. [NT] References to environmental variables inside an expression were
    case-sensitive; they should have been case-INsensitive as they are now.

301. [NT] The kill command had an extraneous CloseHandle call that could
    have produced random results.  That's fixed.


Fix Level 2.2.y Changes:

302. The help screen for dskread now mentions that it also accepts the -E
    (extended density) option.

303. The help screen for tar now correctly specifies that when extracting
    files, the -A option is ignored and the Archive bit is always set.  Also,
    a minor typo in the -I option description was fixed.


Fix Level 2.2.z Changes:

304. A new -S (stop) option has been added to tar.  Tar no longer stops if
    it can't extract a file or directory from an archive unless -S is
    specified.  A spurious message about turning off \r\n to \n conversions
    when -vr is specified has been suppressed.  A bug that caused tar to
    fail to extract a directory if one of the levels already existed.

305. When reading stdin, wc no longer pastes a spurious null character
    onto the end of its output.

306. [NT] The posxpath.csh script for converting ordinary filenames to
    POSIX format has been added to the samples directory.


Fix Level 2.2.27 Changes:

307. [NT] Cron had a resource leak that's been fixed.  It wasn't closing
    the thread handle returned by CreateProcess when it spawned a child.


Fix Level 2.2.28 Changes:

308. [NT] Tar can now read tapes using a 512-byte blocksize.  Inserting a
    new tape in the drive no longer causes spurious failures.  Attempting to
    read a tape using the wrong blocksize now results in a message stating
    that fact.  If there's no media in the drive, that also results in a
    specific message.

309. Tar's newline processing during extraction no longer inserts
    CarriageReturns just before any NewLines that are already preceded by
    CarriageReturns.

310. [NT] mt no longer produces spurious -v status results after a tape
    is changed.  Also, it now produces a message if there's no tape in
    the drive.

311. [NT] cl.csh and ferr in the samples directory have been updated for
    the final release of Daytona (NT 3.5).

312. [NT] The C shell now recognizes when it's being run under Windows95
    (Chicago) and knows that the DOS command prompt there is called
    command.com, not cmd.exe as it is under NT.

313. [NT\MIPS] The blksize.exe file was (inexplicably) empty in some
    previous builds.  It now properly contains the actual executable.


Fix Level 2.2.29 Changes:

314. [NT] Cron can now be run as a service, meaning that it can be set
    up to run under a different ID or even when no one is logged in.
    A new -W (window) option has been added to allow cron to start
    up in a new window.

315. Cron now has a -! option which causes it to install an interrupt
    handler so that ^C or ^Break doesn't cause cron to exit.

316. The C shell now writes double quotes around any words in the
    command line it passes to its child processes that contain
    wildcard characters.  This made it possible to relink grep and
    sed with the Microsoft setargv.obj module so they can do
    wildcarding under cmd.exe.  Also, setargv.obj is now linked
    in with xd.exe.  (The fact it wasn't previously was just an
    oversight.)

317. Tar now supports C shell-style wildcarding of the list of files
    to be extracted from an archive.  Wildcarding works on all
    entries in the include file (during both extraction and addition).
    A new -T (total) option has been added to total the sizes of all
    selected files.  A new -D (dim) option has been added to cause
    highlighting NOT to be done on any output.  New environment
    variables, TARBINARY and TARASCII, are now recognized.  Each
    may contain a list (separated by white space) of wildcards
    that describe files which should be assumed to be binary or
    ascii, respectively, regardless of content.  The -R option
    didn't work properly with -s; it does now.

318. The pattern match operators, =~ and !~, didn't properly handle
    the case of matches against strings that contained a drive letter
    and a colon.  That's fixed now.

319. The unixprof (UNIX Profile) scripts have been added to the samples
    directory.  When run against a source tree, it produces a listing
    of total number of calls to each of the various UNIX system and library
    routines.

320. The timestmp.csh and fixup.csh scripts have been added to the
    samples directory.

321. touch now accepts a timestamp that allows granularity down to the
    second.  A new -2 option allows granularity in 2 second increments
    for compatibility with FAT and HPFS partitions.


Fix Level 2.2.30 Changes:

322. A number of fixes were made to tar:
     a) The changes made at release 2.2.29 to tar introduced a bug that
        caused an access violation if tar was invoked without any arguments
        following the last option word.  That's fixed.
     b) A long-standing bug, probably introduced at release 2.2.j, that
        caused problems in certain situations when reading through a pipe
        has been fixed.
     c) A long-standing bug in the heap code suddenly became apparent on
        Intel, totalling crippling tar, when we switched from the SDK
        compiler to VC++ on NT.  The bug was on all platforms but just
        hadn't been visible before and is now fixed. x
     d) Specifying an incorrect bytesex caused tar to go into an infinite
        loop when reading an archive; that's fixed..
     e) Tar now intercepts and ignores (except for a warning message)
        attempts to copy the archive file into itself.
     f) Another bug introduced at 2.2.29 caused the command line
        wildcarding against the filesystem to fail under cmd.exe.
        That's fixed.
     g) The TARBINARY and TARASCII environment variable routines had a
        bug which could cause a crash.  That's fixed.

323. [NT] The demo version of cron now gives an error message and
    refuses to install itself as a service.  (It can't run as a service
    since it must be a child of the demo version of the C shell.)


Fix Level 2.2.31 Changes:

324. Tar now is much more picky about what files it will consider to be
    ASCII.  Previously, if the first 2K bytes of a file was at least
    2/3 ASCII, the whole file was considered ASCII.  Now, tar insists
    that the first 8K cannot contain more than 8 binary characters and
    that, if it's shorter than that, not more than 1/64th of the file may
    be binary.  Also, tar now highlights any files it converts in
    bright yellow, alerting the user to changes it's making.


Fix Level 2.2.32 Changes:

325. A change made at release 2.2.29 to the wildcarding routines broke
    the posxpath.csh sample script and caused pattern matches against
    any drive letter to fail.  That's fixed in both the shell and in
    tar.

326. Tar now recognized UNC names for extraction.

327. A buffering bug that affected cut, sed, fgrep, grep, uniq and diff
    has been fixed.  This bug caused problems reading files that used only
    a \n, not a \r\n end-of-line convention.

328. [NT] Cron didn't work properly as a service installed in the default
    manner.  Also, it wouldn't respond immediately to stop requests.  These
    problems have been fixed.

329. The timestmp.csh sample script didn't properly handle leading zeros
    in minutes and seconds.  Its does now.


Fix Level 2.2.33 Changes:

330. The "fix" made to cut, sed, fgrep, grep, uniq and diff at 2.2.31 was
    worse than before, causing even worse buffering problems.  This build
    should fix the fix.

331. The postage.csh script in the samples directory has been updated to
    reflect the new U.S. domestic postage rates that went into effect on
    January 1, 1995.

332. [NT] dskread and dskwrite produced spurious complaints about the
    boot record even when used with -x.  That's fixed.

333. The changes made to tar at 2.2.29 caused it to skip over the first
    file specification on the command line if the -s option was used.
    That's fixed.  Also, a new -w option, which causes all files being
    copied to the archive to be shared R/W, has been added.


Fix Level 2.2.34 Changes:

334. Cut, sed, fgrep, grep, uniq and diff still had an occasional
    buffering problem when reading files with lines ending only in
    \n (UNIX-style), not \r\n (NT or OS/2-style).  That's fixed.

335. [NT] cron would not start as a service if the C shell wasn't
    on the system (as distinct from the user's) search path.  Beginning
    with this build, the install operation stores the C shell's search
    path into the registry entry describing the cron service.


Fix Level 2.2.35 Changes:

336. [NT] cron would not start as a service if its home directory
    (set either explicitly or implicitly if no there was no setting
    for home) was the root of a FAT partition.  Also, the interactive
    option wasn't being processed quite properly.  That's fixed.

337. Uuencode and uudecode have been added.  Also, the aliases
    uue and uud have been added to startup.csh.

338. The demo versions have been recompiled/relinked to update an
    old phone number embedded in them to our new phone number.

339. Sed had a bug in the \{...\} span logic that's been fixed.


Fix Level 2.2.36 Changes:

340. [NT] The cl.csh script in the samples directory now pipes both stdout and
    stderr through ferr.

341. The comparison algorithm used by diff has been substantially improved
    to give a far more optimized comparison listing.  Also, the -e option
    has been renamed -E, allowing a new POSIX-compatible -e option (which
    produces an ed script) to be added.  A new -N option was added which
    causes differences in line-end conventions to be ignored.

342. Cut, sed, fgrep, grep, uniq, diff and uudecode now expect that lines
    will end with either \r\n (OS/2 or NT-style) or \n (UNIX style) but
    not \n\r (reversed).  Trying to accept the reversed combination caused
    these line-oriented utilities to disagree with more over what constituted
    a line.  Also, in diff, if a single null line ending with \n was inserted
    in a file ahead of another null line ending with \r\n, it caused both
    lines to mismatch.

343. [NT] More now uses only the window size, not the buffer size for
    vertical scrolling.  This makes it reasonable to use more in a window
    with vertical scroll bars (which many users like so they can refer to
    previous commands).

344. Date now accepts POSIX-compatible format strings as options.

345. The cmp utility has been added.  Use cmp -h for help.

346. The binedit -i option didn't work.  It does now.


Fix Level 2.2.37 Changes:

347. [NT] A bug that caused more to scribble trash after the end of its
    window in a larger buffer if the sequence End-PageDown-PageDown-
    PageUp-PageUp was typed has been fixed.


Fix Level 2.2.38 Changes:

348. [NT] The setrows utility has been added for NT.  Use setrows -h
    for help.

349. The renet.csh utility for restoring unavailable LanMgr network
    resources has been added to the samples directory.


Fix Level 2.2.39 Changes:

350. The sh_2_csh.csh script didn't work if it wasn't given an argument,
    i.e., if it was just run against stdin, due to changes in the way
    null arguments were treated at release 2.2.j.  The script has been
    changed to work properly under the new rules.


Fix Level 2.2.40 Changes:

351. The sort utility has been added.  Under NT, it's named hsort.exe
    and aliased in startup.csh to avoid conflicts with the standard
    MS sort.

352. The quicksort routine used in ls.exe has been improved slightly.

353. Trying to extract a directory by name from an archive with tar
    extracted just the directory, not any of its contents.  That's
    fixed.

354. Wildcarded drive letters with nothing following, e.g., *:,
    failed under both the C shell and in the tar wildcarding
    routines.  That's fixed.

355. [NT] The cl.csh script now knows about VC++ on the Alpha.

356. The table for determining if a character was binary data used
    by diff and tar missed a couple characters.  That's fixed.


Fix Level 2.2.41 Changes:

357. Sort didn't properly treat cases where -n or -N was used on
    the whole record.  Under NT, if it was reading from a file on
    disk (where it used a mapped file), -n and -N caused protection
    violations.  Also, the -f option didn't work right.  All that's
    fixed.

358. sum now supports the POSIX CRC-32 cksum algorithm via the new
    -p option.


Fix Level 2.2.42 Changes:

359. uniq now supports the -f and -s options for skipping an initial
    number of fields or characters in its comparisons.

360. The paste utility has been added.

361. A typo in the help screen for sort has been corrected.


Fix Level 2.2.43 Changes:

362. The C shell was incorrectly freeing up a fast mutex (a Critical
    Section under NT; a RAM semaphore under OS/2) that it didn't own
    in two separate instances.  This was innocuous except under a
    checked build of NT (i.e., one that checks parameters to all API
    calls), where it caused the C shell to crash if one attempted to
    run a script or to run a child process in the background.

363. The C shell was backgrounding all GUI apps run interactively,
    even when the context (e.g., "a; b" or "a &amp;&amp; b") suggested there
    might be a serial dependency.  That's fixed.

364. [NT] The ANSI interpretation routines used by the C shell and
    all the utilities now use the visible window, not the whole buffer,
    as the basis for screen clearing, cursor positioning, etc.  The
    major effect is that typing "cls" in a window with a vertical
    scroll bar, clears the window but doesn't discard everything
    else in the buffer.

365. Everything has been recompiled.  The major reasons were to ensure
    that the new ANSI libraries were used everywhere and to take
    advantage of the latest VC++ compilers on Intel and Alpha and
    the new build 944 compiler for PowerPC.  The OS/2 version was
    also rebuilt to so it'd show the same timestamps and version
    numbers.

366. [NT] wtypes.h, objidl.h and oaidl.h have been added to the samples\skip
    file to suppress nuisance warnings generated by compiling with these
    headers.

367. [NT/PPC] The samples\cl.csh script now knows that on PowerPC
    builds after 944, the compiler is called cl.exe, not mcl.exe.

368. A minor bug in word selection was fixed.


Fix Level 2.2.44 Changes:

369. Grep and sed now accept escape sequences inside [...]-style
    ranges.  Also, sed has a new -N (normalize line ends) option
    that makes it easier to use sed scripts ported from UNIX that
    expect text to use the UNIX convention of a single \n character,
    not a \r\n pair, at the end of each line.

370. A minor typo in the help screen for ls was fixed.

371. The sum -p option didn't properly calculate the POSIX CRC.  It
    should now.


Fix Level 2.2.45 Changes:

372. [NT] A minor (actually, never observed) bug due to a typo in the
    semaphoring of the keyboard inside the C shell was fixed.


Fix Level 2.2.46 Changes:

373. A number of improvements were made to tar:
    1. [NT] With some of the newest high-performance scsi controllers,
       tar wasn't properly aligning its buffers, causing it to fail;
       that's now fixed.
    2. [NT] tar can now automatically detect the blocksize of a tape it's
       trying to read.  Under NT 3.5 or earlier, it just iterates over
       the possibilities, ratcheting by 512 bytes/block at a time.
       Under 3.51 or later, it uses a feature called variable block
       i/o to determine the blocksize directly.
    3. The help screen has been improved considerably with the addition
       of examples.
    4. The old -c option has been renamed the -y option so that a new
       -c option, meaning create a new archive, could be defined per
       the Posix standard.
    5. Tar now uses a default blocksize of 10,240 bytes, per the POSIX
       standard.
    6. Tar didn't properly identify and preserve the case of filenames
       passed on the command line when writing to an archive.  It does now.
    7. Tar didn't properly handle cases of collisions during extraction
       due to to files whose names differed only in case.  It does now.
    8. When writing to an archive, unless the archive is on a tape
       device, tar now pads only to the next 512-byte boundary, not
       the next blocksize.

374. [NT] The mt utility has been improved.  Under NT 3.51 or later,
    it uses variable block i/o to determine the media blocksize by
    actually reading the tape.  Also, the status output has been
    improved to give additional basic information without having to
    require the verbose option.

375. The help screens for dskwrite and dskread have been improved in
    the examples that mention tar.

376. [NT] The how2tar.{wri,txt} documents have been improved to reflect
    the use of the latest build of tar.


Fix Level 2.2.47 Changes:

377. Minor typos in the help screens for sum, sort, sed, tar, dskread
    and dskwrite were corrected.


Fix Level 2.2.48 Changes:

378. [NT] Under NT 3.5, if the tape device was set for a zero blocksize
    and tar was needed to determine the actual blocksize used on a tape,
    it would fail.  (The workaround was to set the blocksize to a non-zero
    value, e.g.., by using "mt blksize 512" before running tar.)  This
    new build includes a check for this problem under NT 3.5.


Fix Level 2.2.49 Changes:

379. [OS/2] Setting MIXEDCASEDRIVES and cd'ing to a non-existent
    relative path caused the shell to hang.  That's fixed.

380. The PV_Annuity and FV_Annuity formulas in the finance.csh sample
    script were wrong and have been corrected.

381. The trapz.csh script for numeric integration using the trapezoidal
    rule has been added to the samples directory.


Fix Level 2.2.50 Changes:

382. [OS/2] Wildcarding the drive letters didn't work with root
    directories.  For example, "echo [d-j]:\" would cause a crash.
    That's fixed.

383. [NT] The mixedpath function didn't work if any of the segments
    in the name it was given was a short, 8.3 name.  Those names are
    now properly converted to the long versions in mixed case.

384. The -e option didn't cause all input, including that read from
    scripts, to be echoed.  It does now.  A new per-thread shell
    variable, echoallinput works like echoinput except that echoallinput
    is inherited by child threads.  Also, when echoinput was set, the
    shell would print just the first line of any scripts (during the
    course of looking for a #!/bin/csh line at the start).  Scripts
    should, of course, have been echoed completely or not at all.  That's
    all fixed.

385. A new shell variable, OperatingSystem, has been defined which
    tells the name of the operating system on which the shell is running.

386. [NT] New shortname() and longname() functions have been added to
    allow filenames to be shrunk to 8.3 rules or expanded out (if they're
    not already) to long names for Win32 apps.  Also, new editing operators,
    :A (alternate shortname) and :L (longname) have been added.  These
    functions are useful in preparing arguments to be passed to DOS
    or Win3.x applications.

387. A new fullmixedpath() function and corresponding :M editing operator
    have been added.  These return the fullpath in mixed case of a file.

388. A new -C file test operator has been added which tells if a file
    has been compressed.  (Under OS/2 it always returns False.)

389. [NT and Win95] To be more sensible across both NT and Win95, the
    NTVersion variable has been renamed as WinBuild.  The old name
    still works (to avoid breaking any scripts), but new scripts should
    probably use the new name.  Also, the ver.csh script has been changed
    to use the OperatingSystem and WinVersion variables to report more
    accurately on Win95.


Fix Level 2.2.51 Changes:

390. [Win95] The WinBuild number is now masked to just the low-order
    16-bits returned by GetVersionEx; Win95 was putting a version number
    into the high-order bits that made the build number look funny.  E.g.,
    on build 484, the build number was coming back as 0x40001e4.  Masking
    just the low bits give the value 0x1e4 == 484 as really desired.

391. [NT/PPC] IBM and Motorola made a change in the way FP exceptions
    are handled in the math libraries at NT 3.51 RC 2 and later builds.
    That caused unhandled exceptions in the sqrt and other transcendental
    routines.  Also, they've improved the compiler optimization strategies.
    For these and other reasons, the shell and all the utilities have been
    re-compiled from scratch for the final release of 3.51 using the latest
    libraries.

392. [NT] The prsht.h and imm.h headers have been added to the samples\skip
    file.


Fix Level 2.2.52 Changes:

392. Under Berkeley Compatibility mode, the C shell now recognizes the
   "else if" combination typed on one line with only a single endif to
   close the structure.

393. Under Berkeley Compatibility mode, the C shell wasn't correctly
    recognizing quoted strings and other substitutions in =~ and !~
    patterns.

394. The C shell now correctly recognizes ${...} variable syntax as
    isolated from anything following, including what previously was
    interpreted as :-style editing operators, which are now treated
    as literal text.


Fix Level 2.2.53 Changes:

395. The C shell wasn't encoding argument words to child processes
    correctly in certain cases involving multiple backslashes.  E.g.,

      echo a\b\c | grep "..*\\"

    didn't work properly.  Similarly, the dskread, dskwrite, tar and
    OS/2 startwin utilities were decoding argv incorrectly in these
    same situations.  All these cases are now fixed.

396. [NT/PPC] Tar wasn't properly converting between the timestamp
    formats used in the tar archive and by Windows NT.  It does now.

397. The f2c.csh and c2f.csh scripts have been added to the samples
    directory for Fahrenheit/Celsius conversions


Fix Level 2.2.54 Changes:

398. ls.exe now knows about the compressed attribute supported
    under NT 3.51.  In long format (-L), a "C" in the attributes means
    the file is compressed; "C" can also be used in selecting file
    types just like the other attributes.  But this also forced the
    previously existing -C option for capitalization to be renamed
    as the -T (True mixed case) option.  Also, ls now has a new -F
    option that causes it to add a backslash following the name of
    any directories listed in its output.

399. ls, tar, mv, cp and rm now accept new READONLYFILES and
    READONLYDIRS environment variables for controlling the color
    used when listing files and directories marked read-only.

400. [NT] chmod.exe now knows how to compress or uncompress files
    and directories using +C or -C.

401. chmod, touch and mkdir have a new -w (warnings only) option that causes
    them to continue even if they encounter problems with some of the files.

402. [NT] mv, cp and rm could generate ANSI escape sequences if -l (logging)
    was used, but those sequences weren't getting displayed properly.
    That's fixed.

403. mkdir now has a new -r (recursive) option that causes it to make
    any missing intermediate directory levels that may be required.

404. The boot sector written by dskwrite has a hidden message with
    contact information for Hamilton Laboratories; that's been updated
    with our new address in Sudbury.

405. The "fix" for args ending in \'s done at 2.2.53 introduced a new
    off-by-one error that could corrupt the heap.  That's fixed.


Fix Level 2.2.55 Changes:

406. The allocate/free code for the C shell now has some additional
    checking added to watch for any possible heap corruption.

407. [NT] The shortname and longname functions and their associated
    :A and :L editing operators expanded "." and ".." names, producing
    erroneous results.  That's fixed.

408. [NT] ls could display the compressed attribute but not select
    based on it.  That's fixed.

409. [NT] If the machine was powered up, then a new tape was loaded,
    tar would fail.  Both tar and mt knew to ignore either a bus reset
    (initial power-on) or media changed status condition, but they
    didn't know to expect both in succession.  That's fixed.


Fix Level 2.2.56 Changes:

410. [NT/Alpha] A code generation error in Visual C++ caused alignment
    exceptions in the C shell and many of the utilities if the Alpha
    was run with "axpalign /enable".  Simplifying the code has avoided
    the problem.

411. If the home directory was set to the root of any drive, then any
    attempt to pass arguments to a child of the form "~\foo" caused
    an assertion failure.  That's fixed.

412. The samples\sh_2_csh\readme file has been updated (finally) with
    our new address and phone numbers.


Fix Level 2.2.57 Changes:

413. The shell would crash if it encountered an error inside the evaluation
    of a quoted string if it had already collected part of the result.
    E.g., echo "$@ $@:-$@" would cause the failure.  That's fixed; you
    now get the appropriate error message and the shell continues.


Fix Level 2.2.58 Changes:

414. Tar didn't properly resolve filenames passed on the command line
    if the MIXEDCASEDRIVES environment variable was set.  That's fixed.


Fix Level 2.2.59 Changes:

415. Xd didn't work right with a radix &lt; 8 if byte or word formatting
    was requested.  That's been fixed.

416. The help screen for tar had an error in the description of
    one of the examples that's been fixed.

417. The C shell's :-style pathediting routines weren't rescanning
    the results and could overlook cases where the results contained
    C shell wildcard characters.  Downstream, this could cause the
    C shell to crash when passing arguments to child processes, e.g.,
    in "myecho $x:A".

418. Multi-character word separators, e.g., &gt;&gt;, inside an alias definition
    containing a history reference were treated as ordinary text during
    any expansion.  That's fixed.

419. Passing a null character to a child process (e.g., myecho a ^0 b)
    from the C shell caused the shell to crash.  Passing it to an
    internal command (e.g., echo a ^0 b) produced garbage.  That's
    now fixed.

420. [NT] The dskread and dskwrite utilities and the blksize sample
    now use page-aligned rather than paragraph-aligned buffers.

421. [NT] A new ps -s option has been added to allow ps to list details
    of all the processes system-wide.

422. sunrise.csh has been added to the samples directory.

423. [NT] The C shell and all the utilities and samples have been
    internationalized to support use of languages such as Russian that
    use non-Latin alphabets.  Non-Latin characters can now be used in
    filenames, wildcards, strings, variable names, etc.

424. [NT] The sed -s option for reading a sed script from stdin didn't
    work.  It does now.

425. Dskwrite now puts "Hamilton", not "IBM 10.2" into the system name
    field immediately preceding the Bios Parameter Block, and "FAT12",
    not "FAT" into the reserved field of the BPB in the boot record when
    formatting a diskette.


Fix Level 2.2.60 Changes:

426. Setting the search path to a null list caused the shell to crash.
    It's hard to know why anyone would want to do this, but it should
    have worked.  It does now.

427. "uuencode infile decodename" didn't work; it complained it couldn't
    open Stdin.  That's fixed.


Fix Level 2.2.61 Changes:

428. [NT] mt and tar weren't correctly examining the version number
    for NT and were incorrectly concluding that variable blocksizes
    weren't supported.  This limited their ability to diagnose unknown
    blocksizes.


Fix Level 2.2.62 Changes:

429. The shell could trip an assert and crash while building up the
    command line to be passed to a child process in certain cases, e.g.,
    del '$*.out', where del invokes the alias defined in startup.csh.
    That's fixed.


Fix Level 2.2.63 Changes:

430. [NT] Tar would fail because it couldn't set the blocksize when used
    with an Archive Viper 150 QIC drive.  That's fixed; it now just gives
    a warning and continues, using whatever the drive is already set to.

431. [NT] mt status would give any status information other than an
    error message if there was no media in the drive.  It now gives
    that message, but continues to at least give status on the drive
    itself.  Also, it now accepts "eject" as a synonym for "unload".


Fix Level 2.2.64 Changes:

432. sed's w (write file) command didn't know how to create the file
    if it didn't already exist.  That's fixed.  Also, the changes made
    at 2.2.44 to allow line end normalization caused all output from
    a w command to go to stdout, not the intended file.  That also is
    fixed.

433. The sunrise.csh sample script used the exit command rather than
    return if an error was encountered inside the self-loading procedure.
    If it was run a second time, producing the same error, it caused the
    whole shell to exit.  It now uses return.


Fix Level 2.2.65 Changes:


434. [NT] Tar didn't properly handle blocksizes greater than 64K or so.
    That's fixed.

435. The C shell would crash trying to pass certain kinds of command
    line arguments to a child process.  E.g., myecho '\"' would cause
    it to crash.  That's now fixed.

436. [Win95] The ps -s option now knows how to list all processes system-
    wide under Windows 95.

437. [NT] The C shell and ls now work much better inside a GNU emacs buffer.
    Previously, ls complained about not being able to open the display
    to determine the screen size.  It now just quietly assumes an 80-column
    window.  The C shell would hang if it needed to give an error message
    trying to word-wrap on what it thought was a zero-width screen; it
    also now just assumes an 80-column screen.  Also, the C shell was
    setting the console state to make Ctrl-C an interrupt, which made
    it impossible to type the Ctrl-X Ctrl-C combination used to edit
    emacs.  Now, the csh -Y option tells the C shell not to change the
    keyboard state.

438. [Win95] The installation instructions in the readme file for the
    NT version now describe how to do the installation on Windows 95.

439. [Win95] The C shell now incorporates a workaround for what appears
    to be a Win95 bug that caused console apps run as children of the
    C shell with stdin tied to the keyboard to see a spurious \r\n
    when they started up.  In these cases, the C shell now flushes
    the keyboard buffer as it starts the child.

440. [NT] The shell, all the utilities and all the sample files have been
    completely rebuilt using the new VC++ 4.0 compilers on Intel, MIPS
    and Alpha.

441. [NT] The C shell now has a new brand-new color icon.


Fix Level 2.2.66 Changes:

442. [NT] The help screen for ls erroneously listed the OS/2-only -M
    option.  That's been deleted.

443. [NT] A new -2 option has been added to newer and older that allows
    timestamps which fall into the same two-second interval to compare
    equal.  This is useful when files are moved between NTFS (100 nsec
    granularity) and FAT or HPFS (2 sec granularity).

444. A new -d option has been added to diff.  It works just like -D
    except the #else and #endif directives it generates have a comment
    telling what symbol was tested.

445. The C shell now does a better job of supporting the use of \ as
    the escapesym character.

446. [Win95] The installation instructions for Win95 have been further
    improved with discussion of how to customize the conagent used by
    Win95 to run Win32 console apps like the C shell.   Also, csh.ico
    has been added to the bin directory for Intel to allow Win95
    users to use that as the C shell icon.  (Win95 does not appear
    capable of extracting icon resources from Win32 console apps.)

447. [NT] Tar and mt now support a -V option to turn off use of variable
    I/O if the tape drive firmware has a bug.  Mt now correctly reports
    what blocksize the drive is set for, even if variable block i/o was
    used to determine the media blocksize.  (Previously, it always
    reported blocksize 0 if variable block i/o was supported.)  Also,
    invoking tar with no operand now gives the correct message saying
    you need to specify the archive.

448. The C shell now correctly backs up to the beginning of the previous
   quoted string when doing filename completion.  This is especially
   important under Win95 where many of the system directories have
   spaces in their names.

449. Everything has been rebuilt again to insert copyright 1996 notices
    where appropriate.


Fix Level 2.2.67 Changes:

450. In Berkeley compatibility mode, the endif and breaksw aliases
    weren't properly predefined.  That's fixed.

451. If the escape character is set to \, the C shell now edits the
    results of any variable references or output from commands like
    cd or dirs to replace any \'s with /'s.  Also, pwd and ls now
    report paths using /'s, not \'s, when the escape character is
    the backslash.

452. [NT/Win95] Setrows, tar, dskread and dskwrite now contain warnings
    in their help screens of limitations imposed by Windows 95.  Also,
    dskread and dskwrite (which can't be used at all because the raw
    device can't be opened under Win95) now give an explicit message
    to that effect under Win95.

453. [NT] The how2tar.{txt,wri} documents have been updated to mention
    the tar -V option for overriding a drive's claims to support variable-
    block i/o and the -Hoff option for turning off hardware compression.


Fix Level 2.2.68 Changes:

454. "cp a: \" complained about not being able to create an output
    directory "".  That's fixed.  It now copies everything from a: to
    the root.

455. Editing operations are no longer recognized following command
    substitutions in Berkeley Compatibility Mode.

456. Cron wasn't properly watching for escape characters in the command
    fields in a crontab file, making it impossible to embed % characters
    into a command.  That's fixed.


Fix Level 2.2.69 Changes:

457. Cmp's reporting with the -l (all differences) option has been
    corrected to show the values of the differing characters.  The spurious
    message about differences at end-of-file if there were other differences
    elsewhere has been eliminated.  Options have been added for specifying
    any desired radix for reporting offsets and character values and for
    requesting a Posix-compliant report.


Fix Level 2.2.70 Changes:

458. unset didn't work in Berkeley Compatibility Mode; it does now.  Also,
    unset can now be use to discard a local variable.

459. The :x and :q editing operators now work correctly.  :x breaks up
    a string at word boundaries, then single quotes each section.  :q
    just single quotes its argument.  Previously, :q worked on history
    words, but not on run-time variables.  :x didn't quote the resulting
    words and didn't work on history words containing quotes.

460. In Berkeley Compatibility Mode, break now breaks out of the
    enclosing loop and breaksw breaks out of the enclosing switch, even
    if these enclosing structures are several nesting levels outside
    the present scope.

461. set, setenv, alias, proc, local, unset, unsetenv, unalias, unproc
    and unlocal now all accept wildcards to list out or discard all
    the variables, aliases, etc., whose names match the wildcard.

462. Writing a tape using tar -cff (to include drive letters in the file
    names) worked, but there was no way to restore to the specified drives.
    That's fixed.

463. [NT 4.0] A change in the way process data was reported from the
    registry caused ps -s to go into an infinite loop.  That's fixed.


Fix Level 2.2.71 Changes:

464. The fix at 2.2.70 to better implement breaksw in Berkeley Compatibility
    Mode didn't work.  It should be working now.

465. The installation instructions have been improved.

466. An apparently innocuous uninitialized variable reference in the
    filename completion routines has been fixed.


Fix Level 2.2.72 Changes:

467. If the escapesym was set to \, the :t (tail) operator failed in an
    assertion.  That's fixed.

468. [Win95] Writing 0 characters to the console is acceptable under WinNT
    but fails under Win95, causing more to crash on highlighted lines of
    a full 80 characters.  That's fixed.

469. Lots of minor typos have been fixed in the help screens of many of
    the utilities.  All of them have been rebuilt.

470. The fixup.csh sample script now watches for non-existent files
    passed to it as arguments.

471. Minor improvements have been made to the installation instructions.


Fix Level 2.2.73 Changes:

472. Minor typos in the help screens for date, diff, dskread, dskwrite,
     mt, sed, tar, tee, touch, wc and kill have been fixed.


Fix Level 2.2.74 Changes:

473. [NT/Risc] Inadvertently, the new version of newer introduced at
    release 2.2.66 was omitted from the Risc versions.

474. [NT/Risc] The ps -s command to list all processes system-wide
    encountered an alignment exception on the MIPS and Alpha if alignment
    exceptions were enabled.  Though not documented, apparently the
    ReqQueryValueEx api requires aligned buffers, which the C shell and
    cron now use.

475. ls and tar couldn't read files and directories specified with UNC
    names is MixedCaseDrives was set to \\ (meaning all UNC names are
    mixed case.)  That's fixed.

476. The message cmp generated when it found a mismatch had a couple
    typos that have been fixed.


Fix Level 2.2.75 Changes:

477. [NT] The change to cron at 2.2.74 to align buffers used with
    RegQueryValueEx caused cron to fail to operate properly as a service.
    That's fixed.

478. [NT] A minor change was made to the help screen for tar.


Fix Level 2.2.76 Changes:

479. [OS/2] tar -cs didn't work.  It hung in an infinite loop trying
    to write using a zero-length blocksize.  That's fixed.

480. Dskread and dskwrite had a number of bugs that were fixed.  Under
    NT, the -f option didn't work.  Under OS/2, reading/writing non-standard
    data in the boot record didn't work.  All these problems have been
    fixed.

481. "cp \x foobar", where \x is a single-character filename and foobar
    is a non-existant filename in a non-root current directory didn't
    work.  It created an empty foobar directory rather than copying the
    file.  It now works.

482. In Berkeley Compatibility Mode, an endif or endsw that didn't match
    a preceding if or switch, respectively, caused the shell to hang.
    (The shell should have produced error messages and discarded the
    offending token.  Instead, it entered a stuck state.)  Also, if
    breaksw, endif or endsw aliases existed and Berkeley Compatibility
    Mode scripts were run that used these reserved words (predefined
    in this mode with no need for aliases), the shell would hang if the
    scripts were run more than once.  (The shell was locking a critical
    section but not freeing it properly.)  These problems have been
    fixed.

483. In Berkeley Compatibility Mode, onintr now expects a goto label, not
    a statement as an operand, to be more compatible with the older
    BSD C shell.

484. The sort -u option didn't work.  Also, under NT, sort wasn't ignoring
    differences in line ends (\n vs. \r\n) as it should have when comparing
    data read from a file rather than a pipe.  (Files are special-cased
    using NT's mapped file mechanism for better performance and there
    was a bug in sort's parsing of mapped files.)  These problems have
    been fixed.


Fix Level 2.2.77 Changes:

485. "sed s/^^/x/g" didn't work.  The global flag was overriding the ^
    (beginning of line) anchor.  That's fixed.

486. ls didn't show the right colors for readonly system files or
    directories due to bugs in the way it tried to merge the readonly
    color attributes with the system color attributes.  The problem
    could also affect tar, mv, cp and rm.  That's fixed.  Also, although
    it shouldn't have affected them, the C shell, diff, du, more, pwd
    and vol also used that same library, so they've been rebuilt also.


Fix Level 2.2.78 Changes:

487. The shell could crash during filename completion.  E.g., type "ls \wabc",
    move the cursor to the "a", type Tab, then Backspace + \ + Tab.  The
    problem occurred because the cursor would be pointing one past the
    end of a buffer (legal) but not generally aligned on the first character
    of the next buffer as expected by the completion routines.  That's fixed.


Fix Level 2.2.79 Changes:

488. [NT] Tar would complain and quit if, when trying to determine the
    blocksize using fixed block reads on an HP DAT, it tried to back up
    to try again and got an error code indicating it was already at the
    beginning of the tape.  It now knows to ignore that error and continue.


Fix Level 2.2.80 Changes:

489. The change at 2.2.66 to allow the C shell to handle quotes in
    filename completion introduced a bug causing strings with escape
    characters to fail.  That's fixed.

490. A new which.csh script has been added which tells which alias,
    procedure or executable file will be run if a given command is
    typed.


Fix Level 2.2.81 Changes:

491. Colon editing operators in an alias expansion that involved any
    command or variable substitution caused the shell to hang.  That's
    fixed.


Fix Level 2.2.82 Changes:

492. [NT] Moving a read-only file from one partition to another using
    mv caused the file to lose its read-only attribute.  That's fixed.

493. If the last file in a cpio archive was zero length, it wasn't
    always listed by tar.  That's fixed.


Fix Level 2.2.83 Changes:

494. If an ASCII file was copied to a big-endian tar/cpio archive on disk
    and the length specified in the header required fixup (because \r\n
    line ends were converted to \n's) and that header happened to fall
    on something other than a 4-byte boundary, tar could crash with
    an assertion failure.  That's fixed.


Fix Level 2.2.84 Changes:

495. In Berkeley Compatibility Mode, the C shell now recognizes $var[n-],
    as referring to elements n through last.  Escape sequences are now
    preserved inside single and double quotes.  In those cases where
    escapes are recognized, the Hamilton C shell enhancements for
    sequences such as ^r, ^n, etc., are disabled.  When quotes are
    used in the eof-string for a here document, they must appear exactly
    as used in the original &lt;&lt; statement.

496. [NT] The SwitchChars environment variable settings were being ignored
    by the C shell when processing its own command line options.  This was
    deliberate under OS/2 because of the need to work when the C shell
    was used as the default shell but unnecessary under NT.  That's
    fixed.


Fix Level 2.2.85 Changes:

497. A couple minor memory leaks have been fixed.  Under NT, in statements
    involving redirection, buffers were leaked for a while at startup.
    (The leak would fill after a short while and nothing more would
    leak.)  Also, under either NT or OS/2, if a wildcard following a
    redirection operator was ambiguous (i.e., it matched more than one
    filename), the list of names was not freed.

498. Adding onto the end of a cpio archive didn't always work properly;
    tar thought it had run out of data when there was still more in its
    buffers.  That's fixed.  Also, the -s option didn't work properly
    when adding new files to the input.  That also is fixed.


Fix Level 2.2.86 Changes:

499. The min, max, average and read scripts have been added to the
    samples directory.

500. The sh_2_csh conversion utility in the samples directory has been
    improved in a number of ways:
    a) for.sed has been renamed loop.sed and now handles while and
       until loops.
    b) misc.sed now properly rewrites $0 as $scriptname and $1 through $9
       as $0 through $8; it no longer bothers to escape $'s standing alone
       (not needed since build 2.2.g); it now escapes the line end if
       the statement is a pipe that continues on the next line.
    c) expr.sed does a better job of rewriting test statements and now
       properly quotes strings inside expressions.
    d) sh_2_csh.csh now properly handles the case where it should take
       its input from stdin (i.e., no filename is specified) or where
       there are multiple input files (which are concatenated).

501. [Win95] The C shell now knows to flush the input buffer if a child
    is started with stdin connected to the console even if it's run from
    a script or background thread.

502. [NT/Win95] The whoami utility has been added.

503. The new laptop.csh script in the samples directory now offers an
    alternative color scheme that's useful on a laptop computer or with
    a projector.


Fix Level 2.2.87 Changes:

504. ls -l / did not show the filenames if escapesym was set to \ (UNIX-style).
    That's fixed.

505. The C shell's filename completion feature backed up to the preceding
    backquote, if any.  That wasn't sensible and has been fixed.

506. The C shell now insists that an alias is recognized only if it's the
    entire word, not just the first token.  Previously, if an alias "foo"
    existed, defined as "hello", then "foo/bar" was taken as meaning
    "hello bar".  Obviously, the alias expansion should not be done here
    and has been fixed.

507. [NT] The whoami utility has been enhanced to allow it to print the groups
    to which a user belongs.

508. The tar utility has been enhanced in a number of ways:
    a) A separate thread is now used for doing all the low-level i/o to
       read/write the archive.  In most cases, this will have very little
       effect on performance, but when used with a drive lacking any
       hardware buffering, tar may not always have been able to supply
       data fast enough to keep it in streaming mode.  That should no
       longer be a problem.
    b) Continuation tapes are now supported under NT.
    c) Ustar and GNU extension formats for long filenames are now supported.
    d) tar -s didn't work.  It does now.

509. [NT] The line length limitations of all the following utilities have
    been removed:  cut, diff, fgrep, grep, sed, uniq, uuencode, uudecode,
    more, paste and sort.  Also, sort had a bug that caused it to truncate
    the input data without even a warning message if any line was longer
    than 64K characters.  That was fixed also.

510. [OS/2] moreh (the huge more) utility still doesn't support truly
    unlimited length lines, but it will do lines up to 65,000 characters
    long before starting to chop them up into pieces.  Previously, the
    limit was about 4K characters.


Fix Level 2.2.88 Changes:

511. If a read-only, system directory was listed by ls, the colors were
    not reset properly afterward.  That's fixed.

512. [NT 4.0] A bug in NT 4.0 caused it to fail to pass an environment
    string representing the current directory on the current drive when
    starting the C shell.  Children (e.g., pwd) would think they were
    running in the root directory.  This build now has a workaround.

513. Filename completion using Alt-F or Ctrl-F didn't work properly
    if the pattern matched several files.  It does now.  Also, a
    minor resource leak in the filename completion routine has been
    fixed.

514. The getopt utility has been added.

515. The basename.csh and dirname.csh scripts have been added to the
    samples directory.

516. The sh_2_csh scripts have been enhanced as follows:
    a) PATH statements are now special-cased.  E.g.,

          PATH=${PATH}:$SRC/bin:$TOOLSDIR/bin

       is rewritten as

          set PATH="${PATH};$SRC/bin;$TOOLSDIR/bin"

    b) if the "then" and "do" keywords appear on the same line (separated
       by a semicolon) with the matching "if" or looping construct keyword,
       that's now handled properly.
    c) The -a expression operator is now rewritten as &amp;&amp;.
    d) Expressions containing quoted strings with semicolons, etc.,
       are now handled more sensibly.


Fix Level 2.2.89 Changes:

517. [NT &amp; Win95] The AltGr key wasn't handled properly under Win95 on
    the German keyboard.  Alt-NumericPad key combinations weren't
    recognized at all on the U.S. keyboard and only partially on foreign
    keyboards.  That's fixed.


Fix Level 2.2.90 Changes:

518. The changes made to tar at 2.2.87 introduced a couple bugs.  Listing
    a tar file that ended abruptly could hang.  Trying to append to a tar
    file could crash in some cases.  Trying to append to an archive on
    stdio didn't work.  Also, a long-standing bug caused an incorrect
    error message if no tarfile was specified and the -s (stdio  option)
    was not used instead.  All these bugs should now be corrected.


Fix Level 2.2.91 Changes:

519. [NT] Tar can now handle offsets within an archive up to 2**64 bytes
    (1.84e+7 GB), far more than the previous limit of 2**32 bytes (4.3 GB).
    This improvement was needed now that DAT tapes capable of holding 8GB
    or more have become commonly available.

520. User-defined procedure names were supposed to be case-sensitive
    in the C shell but in fact were not.  That's fixed.

521. The C shell couldn't start .bat or .cmd files if the pathname
    contained spaces or other special characters.  That's fixed.

521. [NT] Stack overflows (usually caused by infinite recursion in a
    user-defined procedure) caused the C shell to crash due to continued
    stack overflows in the diagnostic routines.  Stack overflows are now
    properly handled with a message and a popup.  The C shell still
    can't continue execution, but at least the termination is clean.

522. If the escapesym was set to \, fullpath ../anything would fail,
    claiming the shell was running out of memory.  That's fixed.

523. Colors = none is now recognized to mean turn off all ANSI escape
    sequences from the C shell and all the utilities.  If Colors is
    undefined or set to the null string, that's interpreted as meaning
    "use the colors in effect at the cursor position when the process
    starts up."  Also, we've discovered that the blink attribute is
    actually interpreted by the operating system to mean a bright
    background color (except under OS/2 in full-screen).  The blink
    keyword is now considered obsolete, replaced by "bright" as a
    background color modifier.  The white.csh script has been added
    to the samples directory with an example color scheme using a
    bright white background.

524. [NT] The open utility has been added, which allows an arbitrary
    file to be opened using the application associated with that
    filetype as specified in the registry.

525. [NT] The mt utility can now display offsets and media capacities
    greater than 2**32 as huge integers rather than as &lt;hi&gt;:&lt;lo&gt;
    segments.


Fix Level 2.2.92 Changes:

526. [NT] The work on improving color support at 2.2.91 introduced a
    bug in that caused highlighting to fail in the C shell and some
    of the utilities.


Fix Level 2.2.93 Changes:

527. [Win95] After running some DOS apps, the console text attributes
    of the first C shell prompt could be scrambled, due to a bug in Win95.
    This build contains a workaround.


Fix Level 2.2.94 Changes:

527. Tar would fail in some assertion statements if fed garbage data as
    an archive file or if it was specifically told to read an archive in
    the wrong bytesex.  That's fixed.

528. A number of random typos were fixed in the help screens in a number
    of builtin and external utilities.  No functional changes were made.

529. The C shell's :e operator could fail if the escapesym was set to \.
    That's fixed.


Fix Level 2.2.95 Changes:

530. Quotes and escape characters weren't processed correctly inside
    tar include files.  That's fixed.

531. Octal escape sequences starting with ^07 or ^7 didn't work properly
    inside wildcards in the shell and in tar.  That's fixed.

532. [OS/2] A fix made at 2.2.90 introduced a bug in processing of command
    line options.  That's fixed.


Fix Level 2.2.96 Changes:

533. A bug in the way the C shell scanned ${...}, $&lt;, $$ and $* variable
    references could cause heap corruptions under rare conditions.  That's
    fixed.

534. [OS/2] The fix at 2.2.85 to fix a minor memory leak caused the
    C shell to hang when a pipeline was run under OS/2 because a lock
    was not being freed.  That's fixed.

535. unproc * caused the C shell to hang under OS/2 and to crash in
    some cases under NT.  That's fixed.

536. [OS/2] unsetenv * caused the C shell to hang under OS/2.  That's
    fixed.

537. [OS/2] Attempting to unsetenv COLORS caused the C shell to crash with
    a protection violation.  That's fixed.

538. The C shell would crash if the :x operator was applied against the
    result of another :-edit of a history reference containing paired quotes.
    For example,

       echo 'now' 'is' 'the' 'time'
       echo !*:s/the/THE/:x

    would fail.  That's fixed.


Fix Level 2.2.97 Changes:

539. Embedded comments have been added.  A "##" token, preceded and
    followed by white space, marks the beginning and end of an embedded
    comment.  For example:

       % echo hello ## comment ## world
       hello world

540. A new per-thread shell variable, scripted, tells if the shell is
    interpreting a command passed on the command line or a shell script
    (but not a sourced script.)

541. A number of improvements were made to Berkeley Compatibility Mode
    to conform more precisely to the behavior of the Berkeley C shell:

    a. The set command now accepts a list of variable names which will
       set to the "set" state (1).  There is no need to type an equal
       sign or a value.  For example:

          set noglob nonomatch

    b. In an expression, character strings are taken as literals.  For
       example:

          if ($xyz == -) ....

    c. Comments in the middle of a multi-line statement end at the end
       of that physical line.  They do not run all the way to the end
       of the entire statement.  This was a trick in the Berkeley C shell
       to embed comments into the middle of a statement.  This feature
       is implemented by rewriting these comments as embedded comments
       wherever they occur.
    d. Embedding a newline into a quoted string now has a different
       effect, depending on whether the C shell is running a script
       or not.  If scripted == 1, the newline turns into 2 spaces;
       otherwise, it's preserved as a literal newline.
    e. Inside quotes, the Berkeley C shell required two escape characters
       to escape a newline.  Hamilton C shell will now accept either
       one or two escape characters inside quotes while in Berkeley
       Compatibility Mode as a means of escaping a newline.
    f. It is now possible to test whether a predefined variable is
       set using the $?var (existence) construct in Berkeley mode.
    g. onintr and onintr - are now recognized as enabling or disabling
       interrupts, respectively.

542. If the path variable was set to contain an impossibly long directory
    name, the shell would crash when trying to execute an external program.
    That's fixed.

543. More would crash when up-arrowing through files that contained some
    extremely long lines.  That's fixed.

544. The C shell now allows variables to be named the same as the
    reserved words, e.g., foreach or if or set.


Fix Level 2.2.98 Changes:

545. Tar would crash if it needed to interactively rename a file being
    extracted and the user simply pressed Enter, meaning they wanted to
    accept tar's suggested renaming.  Also, tar had trouble matching
    filenames that started with \ or / when listing or extracting.   Both
    these problems are fixed.

546. Mkdir would print the help screen, rather than the usage message it
    should have generated if you forgot to tell it what you wanted it
    to create.  Also, attempts to recursively create a directory structure
    that started at the root didn't work.  Both these problems are fixed.


Fix Level 2.2.99 Changes:

547. [OS/2] sort -k didn't work.  It'd complain of a usage error.  The
    bug that caused this could also affect paste and uniq.  That's been
    fixed in all these utilities.

548. ls, mv, cp, rm and tar didn't properly construct default color
    values for read-only and system directories.  That's fixed.


Fix Level 2.2.100 Changes:

549. [NT] tar's -a (append) option didn't work properly with tapes.  The
    prompt for continuation tapes specified the wrong tape number (off
    by one) and continuation tapes did not work when listing or extracting
    an archive.  Also, tar could hang if the binary zeros marker (indicating
    end of archive data) was followed by additional blocks.  All these
    problems have been fixed.

550. head, tail and tabs did not consider the NewLine character to be
    a repositioning to the beginning of the line.  That produced strange
    results if they were allowed to do tab expansion on UNIX files with
    only a NewLine at the end of each line.  That's fixed.

551. In Berkeley mode inside backquotes, comments are considered embedded,
    meaning they end at the end of the original source line if the
    line end is escaped, even inside a script.  This change was dictated
    for compatibility with the original Berkeley C shell.


Fix Level 2.2.101 Changes:

552. [NT] The -x (executable) filesystem test didn't work with .csh,
    .cmd and .bat files.  It does now.


Fix Level 2.2.102 Changes:

553. $?0 through $?9 now meaningfully report whether argv[0] through
    $argv[9] are defined.

554. In Berkeley mode, sourcing a script with no arguments (as was required
    by the original Berkeley C shell) causes argv to be unchanged as seen
    by the script.

555. [NT/AXP] On systems with FX32 (the 32-bit Intel simulator) loaded,
    CreateProcess returns a different return code if passed a non-existent
    pathname.  That caused the C shell to generate a spurious message.
    The C shell now knows to expect this new possible return code.  Also,
    as part of the fix, the C shell is now much faster at reporting failure
    when a requested command really can't be found.

556. [NT] A new file, vi-perl.txt, tells where to find excellent vi and
    perl utilities on the Internet.


Fix Level 2.2.103 Changes:

557. paste didn't work properly.  It was off by one on the files and
    wasn't merging in data from the last; occasionally it crashed.  All
    that's fixed.

558. In Berkeley Compatibility Mode, the pattern in a case clause may now
    contain substitutions.


Fix Level 2.2.104 Changes:

559. The fix to 2.2.102 to the source command introduced a bug in Berkeley
    mode that'd cause the shell to crash if one sourced a script from the
    command line that used command substitution.  That's fixed.

560. wc didn't count the last word in a file if the file didn't end with any
    whitespace or end-of-line characters.  The POSIX standard is ambiguous
    on whether this is/is not proper behavior but because most vendors do
    count that last word, the Hamilton wc utility has been changed.


Fix Level 2.2.105 Changes:

561. [NT] Setting the current directory to a shortname didn't work
    properly.  It does now, properly expanding the name out to the
    full path.

562. The variable exists ($?var) function didn't work on MixedCaseDrives,
    CshOptions, NETWORKBUG and SwitchChars.  It does now.

563. [NT] Running NT Backup, then tar, in quick succession would occasionally
    cause tar to fail, reporting that the tape was empty when in fact, the
    drive was simply busy.  This has been fixed.


Fix Level 2.2.106 Changes:

564. [NT] If the initial current directory inherited by the C shell was not
    on the C: drive and the drive letter was in lower case, the C shell did
    not set up its current directories correctly.  That's fixed.

565. It is no longer considered an error if an embedded comment does not
    have a closing ##.  Instead, it's just considered to run until the
    end of the line.  The requirement of a closing ## was breaking too
    many Berkeley C shell existing scripts that had ## at the beginning
    of the line.

566. The nagware popup in the demo version of the C shell now gives our
    new email address and web site URL.

567. A number of messages from the C shell contained advice to type help
    to get additional information about the exception condition.  That
    assumed the user had the help procedure defined and the winhelp sample
    program on his search path, assumptions that weren't always valid.  The
    messages now just give the return code.

568. The a2e.csh and e2a.csh scripts for converting ASCII to EBCDIC and
    back have been added to the samples directory.

569. A number of references to our old email address have been changed
    to reflect our new domain name.


Fix Level 2.2.107 Changes:

570. [Win95/International machines only] Setting an environment variable
    did not work.  The variable was not actually exported to child
    processes.  The C shell was trying to use the UNICODE version of the
    Win32 SetEnvironmentVariable function, which was not supported on Win95.
    This has been corrected.

571. [NT] Additional lines have been added to the samples/skip file to
    filter additional noise-level messages from the compiler involving
    GetFiberData, GetCurrentFiber, math.h and process.h when using the
    ferr filter alias.


Fix Level 2.2.108 Changes:

572. The various filesystem tests, e.g., -d to test if a name is a
    directory, didn't properly lock down the current directories as
    a critical resource and could fail if another thread was active
    changing the current directory.  That's fixed.


Fix Level 2.2.109 Changes:

573. tabs -u didn't work if the TABS environment variable wasn't set.
    That's fixed.  It now properly defaults to TABS=8.

574. tar didn't know to disregard the lengths given for block, character
    and FIFO special devices.  If the archive contained one of these
    files (which have no analog on NT or OS/2 anyway), tar typically
    would complain of a garbled header.  That's fixed.

575. The C shell no longer allows goto statements to goto a label outside
    the scope of a sourced script.  This fixes a long-standing problem
    repeatedly sourcing a script that contains a goto near the beginning
    to a label near the end.  Instead of going to the label at the end,
    the goto went to the label from the previous invocation.  That's fixed.

576. When sourcing a script, the default now is to execute the script but
    not to load it into the history list.  Also, additional options have
    been provided for syntax checking, with/without loading to history.

577. In Berkeley Compatibility Mode, the status result of a pipe has
    been changed to be the rightmost non-zero status, to be more consistent
    with the original C shell.

578. In Berkeley Compatibility Mode, if an error occurred in a sourced
    script, the error message incorrectly showed the name of the script
    that called it.  That's fixed.

579. The timestmp.csh sample script didn't work right if the argument
    was a directory.  It does now.

580. [NT] The open utility didn't work on files specified relative to
    the current directory on another drive due to a limitation in the
    ShellExecuteEx api.  This build contains a workaround.


Fix Level 2.2.110 Changes:

581. [NT] The C shell and all the utilities (in particular, tar, ls, du
    and vol) have all been enhanced to allow the current directory to be
    set to a UNC path.  When the current directory is a UNC path, the
    drive letter will be shown as "@:".  (@ comes just before A in the
    ASCII codeset.)  Previously, the C shell would crash if the user
    attempted to set the current directory to a UNC path.  If it inherited
    a UNC path, the C shell didn't crash, but it didn't work, either.

582. [NT/Alpha] du would fail with a floating point exception on an audio
    CD.  That's fixed.

583. The laptop.csh sample script has been improved to set HIGHLIGHT (used
    by pwd, du, vol, etc.) to bright yellow.

584. [NT] If a path was passed to tar as a shortname on a mixed case drive,
    tar did not properly consider that the mixed case version of the name
    might be longer.  It does now.

585. If the escapesym was set to a \, the C shell was conventionally
    flipping any \ characters appearing in a variable substitution to
    be / characters.  That's fixed.  Also, the C shell will no longer
    perform escape processing on the output of variable and command
    substitutions to be more in keeping generally with the various
    UNIX shells.

586. In Berkeley Compatibility Mode, ignoreerrors will be set to 2 by
    default to be more like the Berkeley UNIX C shell, which continues
    execution even if, e.g., it encounters a nomatch wildcard failure or
    an attempt to execute a non-existent command.

587. The timestmp.csh sample script didn't work if the minutes or seconds
    value in a timestamp was 08 or 09 because it tried to interpret the
    value as octal.  That's fixed.


Fix Level 2.2.111 Changes:

588. Tar didn't properly parse filenames in an archive that contained ".."
    segments and would crash.  That's fixed.

589. [NT] If end-of-data is reached on a tape before any data has been
    found (i.e., the tape is empty), tar no longer bothers prompting for
    a continuation tape.  It just exits.

590. The sh_2_csh\readme file has been updated with our new website address.


Fix Level 2.2.112 Changes:

591. The change at 2.2.102 to improve treatment of argv when sourcing a
    script introduced a problem:  if a script was sourced without any
    arguments in normal mode, any previous argv was lost.  That's fixed.


Fix Level 2.2.113 Changes:

592. More would crash if the Home or End key was pressed when viewing a
    zero-length file.  That's fixed.

593. When reporting a change consisting of 2 or more lines replaced by a
    single line in default listing mode, diff was off by one in its reporting
    of the line number in the new file.  That's fixed.  Also, in that mode,
    diff no longer puts spaces around the "a" (add), "c" (change) or "d"
    delete characters unless requested with the new -s option; this change
    is for better compatibility with UNIX diffs.

594. Paste and sort had a bug in their buffering that could cause them free
    an internal buffer before it was actually free.  The bug could be
    demonstrated with paste under NT:

       % paste
       a
       a  &lt;-- output from paste
       %  &lt;-- new prompt when paste crashes

    This has been fixed.

595. The xargs utility has been added.

596. [NT] The ps -s built-in utility would crash the C shell if one
    of the processes it listed was still starting up and had not yet
    accumulated any runtime.  Also, on some RISC machines under NT 4.0,
    the accumulated _Total time can be impossibly large, causing an
    overflow exception.  All that's been fixed.

597. [NT] A workaround has finally been found that allows redirection
    to CONOUT$ (the console display), in from CONIN$ (the console
    keyboard) or out to/in from CON (display and keyboard) to be inherited
    under NT.


Fix Level 2.2.114 Changes:

598. [NT] Tar would crash if it tried to archive a file that had a
    timestamp earlier than Jan 1, 1970 or later than Feb 7, 2106.  That's
    fixed; dates outside that range are now truncated to the endpoints.

599. The command line editing in the C shell has now been enhanced.  A
    new -P command line option to the C shell tells it that all word-
    oriented operations should treat individual pathname segments as
    separate words.  Also, a bug that caused filename completion to
    be confused by separate words consisting of two quotes (eg., "")
    has been fixed.

600. [NT] If an external command name containing a space (e.g.,
    "c:\program files\hello.exe") was run, argv[0] was incorrectly
    passed as two separate words ("c:\program" + "files\hello.exe").
    That's fixed.  This problem affected both the C shell and cron.

601. [NT] The su (super user), chown (change ownership) and chgrp
    (change group) commands have been added.

602. The env (run a command with a new environment) command has been
    added.

603. [NT] Though never reported, it's possible that unsetting an
    environment variable whose name contained foreign characters
    would not have worked.  That's fixed.

604. Minor typos in the xargs help screen were fixed.  Also, when
    using xargs' built-in echo command, xargs now watches for the
    return codes from the write operations to stdout.

605. The entire product has been rebuilt to consider that UNC pathnames
    can be up to 96 characters longer than the longest possible name on
    any given partition.

606. [NT] Cron -status has been dramatically improved to give far more
    complete information about how it's installed and running as a
    service.

607. [NT] ls has been enhanced with new -o and -O (owner) and -g and -G
    (group) command line options that cause it to report the owner and/or
    group of a file or directory.

608. [NT] If a hidden environment variable for one of the current
    directories specified a path using /'s rather than \'s, NT has a
    bug that causes it to default to the root on that drive.  The
    C shell now works around that problem by ensuring that it always
    uses backslashes.

609. A bug in the C shell's built-in echo command would cause a
    crash if the string being written was exactly 511 characters long.
    That's fixed.

610. The C shell no longer routinely translates pathnames to lower
    case when setting the path variable.

611. The contact info in the demo versions of the shell and utilities and
    in the readme (install) and readme.too (release notes) files has been
    updated to reflect our new area code.

612. A bug in the buffering algorithm used by paste and sort could
    cause them to produce incorrect results when reading from a pipe,
    particularly if the input contained lots of short records.  That's fixed.

613. [NT] The common routine used by the C shell, env, su and xargs to
    determine what type of application was in an executable file did not
    know about a very old DOS format and would claim they were not
    executable.  That's fixed.

614. The pattern matching routines in the C shell, grep, sed and tar didn't
    treat a - at the end of a [...] list as a literal character.  Instead,
    the - was ignored.  That's fixed.


Fix Level 2.2.115 Changes:

615. [Win95] The enhancement made to ls at 2.2.114 to allow it to list owner
    information caused it to fail to load under Win95 because Win95 omits
    even a stub for one of the required functions.  This has been fixed.

616. [Win95] The chown, chgrp and su utilities would exit with a message
    saying Win95 was not supported even if it was just the help screen
    being requested.  Obviously, you should be able to get help.  That's
    fixed.

617. [NT] Very old builds of NT omitted one of the security functions
    used by su and would cause su to fail to load.  You now get a proper
    error message.


Fix Level 2.2.116 Changes:

618. [NT] The quick fix at 2.2.115 to ls for Win95 broke the -O option,
    preventing ls from doing the poll of other machines on the network.
    (This cause -O to be identical to -o.)  This has been fixed.

619. Sort would crash on very large (million line) files.  That has been
    fixed.

620. The quicksort implementation used in ls and sort had a flaw that could
    produce incorrect results on rare occasions.  That's fixed and the
    result was to improve performance slightly.

621. The new chown and chgrp utilities would complain that a file was on
    a volume that did not support ownership if the filename didn't start
    with a driveletter and colon.  Also, chown didn't know what to do if
    it couldn't get the file attributes of a file or directory it was
    asked to operate on.  That's fixed.

622. more would fail on very large (million line) files.  It would crash,
    it would display incorrect line numbers and incorrect percentages.  Also,
    its appetite for memory could be ferocious doing certain operations such
    as advancing a million lines.  All these problems have been fixed.

623. [NT] ls can now handle filesizes larger than 2**32 bytes = 4 GB in
    size.

624. [NT] su and env now have a new -N option which forces child console
    apps to run in a new window.  Also, by default, they now exit rather
    than waiting for the child to complete if the child is running in a
    separate window.  A new -w option means always wait for the child.

625. [NT] su was supposed to prompt for a password if needed.  That feature
    didn't work.  It does now.

626. The C shell's new pathname command line editing using -P didn't
    actually work right.  It does now.  Also, a new -. option means a
    period should also be treated a pathname punctuation character when
    using the -P option.

627. The status variable, which captures the return code from the last
    command that was run, was also being set by any commands run as a
    part of evaluation the command prompt string.  That was certainly
    counter-intuitive and has been fixed; any status results of evaluating
    the prompt are now discarded.


Fix Level 2.3 Changes:

628. [NT] Typos in the help screens in chown, chgrp, env, ls and xargs
    were fixed.

629. [NT] su, env, xargs, would not execute commands whose paths were
    specified as UNC names.  That's fixed.

630. tail -c did not work properly collecting a specified number of bytes
    off the tail end of data read from a pipe.  That's fixed.

631. tar had a number of bugs that were fixed.  Tar would not properly
    resynchronize following after scanning past a garbled header in a
    cpio ASCII or cpio binary file, resulting in repeated spurious messages
    garbled headers on all following files in the archive.  When creating a
    cpio ASCII or cpio binary archive on disk, if it had to fixup a length
    field for an ASCII text file that was converted from NT to UNIX line
    end conventions and that length field happened to fall at just the wrong
    place relative to the buffer boundaries, tar would write an incorrect
    length code.  When extracting from an archive, if a file was listed in
    the archive as starting with "." or ".." (e.g., "./foo"), it could not
    be matched (for extraction) with the same string; it was necessary to
    drop the leading "." or ".." segment, opposite of what should have been
    required.

632. sort did not properly consider the preceding field separator as part
    of a field.  This made its count of the fields off by one if the first
    field started with a space.  That's fixed.

633. Moving the cursor forward by word in pathname command line editing
    mode didn't work right in a couple cases.  That's fixed.

634. If a procedure did an "exit 0", the status code from shell was set
    to 1; other values were preserved properly.  That's fixed so that 0
    is now preserved properly also.

635. [NT] The C shell now knows how to run executable binaries and scripts
    that lack any recognizable extension.

636. The C shell now fully supports the #! convention for specifying the
    language processor that should be used to interpret a script.

637. [NT] Installation instructions have been added to allow associating the
   C shell with .csh files.

638. References to the company address have been updated to reflect our
    move on May 1, 1998.

639. A bug in more would cause it to crash in certain situations moving
    around in a file containing lines larger the high water mark for the heap.
    That's fixed.

640. More now allows very long search strings, can use regular expressions
   as search strings and can invert the sense of a match.

641. ls now has a -Q option for quoting any names that contain spaces or
   other special characters and the C shell now has a new :u editing operator
   for unquoting and unescaping.  Together, these changes now make it simple
   to iterate over the contents of a directory that may contain files and
   subdirectories having special characters in their names.

642. Tar now examines the first 32K, not just the first 8K of a file to decide
   if a file is text.  Also, if it guesses wrong, it now issues a warning.

643. [NT] The newer and older -2 option (for rounding to the nearest 2-second
   boundary) didn't work, always reporting that the first file was older than
   the rest, no matter what the actual case.  It works now.

644. [NT] Cron can now be used to interrogate or change the status for any
   service, not just cron itself.

645. Not ranges [^...] did not work properly in the C shell in patterns
   that involved multiple directory levels or in command line editing.  They
   do now.


Fix Level 2.3.a Changes:

646. [NT] On international machines, the setenv command and env utilities
    could fail due a bug in the conversions between Unicode and ASCII.  That's
    fixed.

647. [NT] The dskread and dskwrite utilities now accept a new -S option that
    allows the volume being read/written to be shared with other processes.

648. [NT] Somehow the installation instructions on the distribution
    diskettes never got updated for NT 4.0.  That's fixed.


Fix Level 2.3.b Changes:

649. Tar now supports the new "portable" CPIO format introduced in UNIX
    System V Release 4.

650. Strings now has a new -u option for extracting UNICODE strings as
    ordinary printable ASCII.  It also does a better job of handling
    string terminators, reducing the number of trash lines it prints.

651. More had some long-standing bugs that could bite if one scrolled back
    and forth through text with very, very long lines.  All that's fixed.


Fix Level 2.3.c Changes:

652. A minor improvement was made to the explanation of the strings -u option
    was made in the on-line help.

653. More would fail if page up was attempted on a null file.  That's fixed.


Fix Level 2.3.d Changes:

654. The C shell would only accept #!/bin/csh as an indication that
    a script should be run in Berkeley mode.  It now also accepts
    #!/usr/bin/csh.

654. du didn't know how to properly report space on a FAT32 partition.
    It does now.

655. ls would occasionally fail if given a UNC resource name that did not
    end in a slash or backslash, e.g., \\x\y$.

656. [NT] The C shell no longer bails out during initialization if it can't
    open a good handle to the keyboard.  It just assumes it's running as a
    detached process (presumably started by CreateProcessAsUser) without
    necessary permissions to access the desktop and window station.

657. The postage.csh sample script has been updated for the new US postal
    rates.


Fix Level 2.3.e Changes:

658. Escape sequences inside C shell :s/.../.../ search/replace strings
    weren't working and would cause the shell to crash.  That's fixed.

659. The C shell didn't always recognize the #! flags at the beginning of
    a script if there was space following, before the path.  That's fixed.

660. References to $argv[0] in Berkeley mode didn't give the name of the
   script file.  That's fixed.

661. Arg[i] was read-only.  That should have been writable and is now.

662. The rules for validating the size and timestamp fields when reading
    a tar header have been relaxed.  A terminating space or null character
    is no longer required.

663. Tar didn't properly expand a \n as the first character of an ASCII
    file into \r\n.  That works now.

664. New file tests -t (text), -b (binary) and -u (Unicode Ascii text)
    have been added to the C shell.

665. The C shell no longer writes ANSI escapes to stdout during initialization
    if it's just doing a single command from the command line.


Fix Level 2.3.f Changes:

666. The fix to allow argv[i] to be read/written caused following words to
    be discarded.  That's fixed.


Fix Level 2.3.g Changes:

667. The timestmp.csh sample script wasn't quite Y2K correct.  It is now.

668. [NT] Attempting to move a directory that was in use as the current
    directory of a running process should have caused mv to exit immediately
    with an error.  Instead, it'd move all the contents, then complain when
    it couldn't remove the directory itself.  That's fixed.

669. [NT] The ln utility has been added for creating hard links on NTFS
    partitions.

670. [NT] The showdesk utility has been added, allowing everything
    currently open on the desktop (except, optionally, the current
    window) to be minimized to the taskbar.

671. The C shell didn't handle inverted ranges of drive letters
    (e.g., [^c]:*) properly.  That's fixed.

672. The which.csh sample script didn't properly handle commands with
    extensions.  It does now.


Fix Level 2.3.h Changes:

673. [NT] The filebox and dirbox utilities for graphically selecting a file
    or directory have been added.

674. [NT] The setwin utility for hiding the shell window, minimizing it,
    restoring it, etc., has been added.

675. [NT] The shortcut utility has been added for creating or reporting
    a shortcut.


Fix Level 2.3.i Changes:

676. Tar would not properly copy a file or directory from the root of a
    mixed case drive into the archive if the name was specified as a drive
    letter + colon + slash + filename, e.g., c:\hamilton.  That's fixed.
    Another bug that potentially could cause buffer overrun has also been
    fixed.


Fix Level 2.3.j Changes:

677. The diff utility now has a new -o option that allows the maximum
    window size used for comparing the two files to be constrained.  This
    option is intended to hold compute times down to something reasonable
    even if at the expense of a less than perfectly optimal comparison for
    very large (multi-megabyte) files that are very different.

678. [NT] The dirbox utility help screen was incorrect, as if it was for the
    filebox utility.  It should be correct now.  Also, some minor changes were
    made to the option letters and help screen for the filebox utility.
    Also, neither utility was showing their name they'd been invoked by in
    either their help screens or any error messages.  That's fixed.

679. The help screen for cmp failed to document the -- (end of options)
    option.  It does now.


Fix Level 2.3.k Changes:

680. The first character retrieved by a long-form history reference inside a
    quoted string wasn't properly examined for the possibility that it might
    be an escape character.  Thus, the following failed as follows, but
    works now:

      1 C% echo ^"
      "
      2 C% echo "!$ "
      echo "^" "
      csh:  Couldn't find the closing " quote.

681. Cycling with the Tab key through the filenames matched using filename
    completion could crash the shell in situations where the list of matching
    names was sufficiently long.  That's fixed.

682. Command substitutions that evaluated as null strings, e.g.,

      calc `echo`

    could crash the shell by attempting to free a string was in fact not
    allocated on the heap.  That's fixed.

683. Minor changes to the make files and some of the source to allow the
    entire product to be rebuilt for the 64-bit Intel Itanium.

684. [NT] The chown -R (remove ACL) option didn't work.  It does now.

685. [NT] mv and cp now copy the security descriptor and any ACLs associated
    with files or directories being moved or copied, even across partitions.

686. [Win9x] The decimal point key on the number pad didn't work in Num Lock
    mode under Win9x in csh, des, more, su and tar.  (It worked fine under
    WinNT.)  It now works properly on both systems.

687.  head and tail were not supposed to expand tabs if the TABS environment
    variable was not defined.  They did anyway; that's fixed.

688. [Win95] The fix to du at release 2.3.d to support FAT32 partitions
    (on Win98) caused du to fail on Win95.  That's fixed.


Fix Level 2.3.L Changes:

689. The :h and :r editing commands would hang on filenames containing
    illegal colons (e.g., aa:b:c:) and unusual dots (e.g., x..).  That's
    fixed.

690. [NT/x86] Null strings were broken causing incorrect results such as

      % calc `echo` == ''
      0

    due to a bug in a new version of the Microsoft assembler used to build
    the latest versions.  This release incorporates a work-around.

691. [NT] Copying the security descriptor associated with a file occasionally
    caused problems for some customers.  mv and cp now have a -s (simple)
    option to indicate that SD should not be copied.

692. [NT] The showdesk utility didn't wait long enough for all the windows
    to react.

693. The xargs utility now accepts a new -r option allowing the user
    to specify a replacement string that should mark where to insert
    argument words read from stdin into the command template.

694. [NT] The setwin utility now uses a more elegant method of obtaining a
    handle to the console window on those versions of Windows that support it.

695. [Win9x] Trying to change current directory to a UNC name typed with
    forward slashes didn't work.  It does now.

696. [NT] The C shell now captures the service pack level in the new
    WinServicePack shell variable, which is now reported in the ver.csh
    script.

697. [NT] Tar can now copy files as large as 68G to/from a tar-format archive;
    for CPIO ASCII archives, the individual filesize limit is 8G; for CPIO
    binary and new portable CPIO archives, the limit is still 4G.  Also, the
    -J and -j options (new portable CPIO formats) didn't work when archiving
    directories; that's fixed.

698. mv, cp and rm now have a -c (continue) option that allow them to continue
    even if one of the input files cannot be processed.


Fix Level 2.3.m Changes:

699. [Win2K] A bad race condition that's been fine for 14 years under OS/2,
    NT and Win9x could cause the shell to fail in pipe statements due to
    the way handle values are more quickly reused under Win2K.  That's fixed.

700. [NT/MIPS] Some integer math was overflowing into FP when it shouldn't
    have.  For example, "@ i = 0; calc i + 2**2" printed 4.000000.  That's
    fixed.

701. The postage.csh sample script has been updated to reflect the latest
    US postage rates.

702. A new decimal.csh sample script has been added which can force a
    string to be interpreted as a decimal number, overcoming the shell's
    usual interpretation of anything starting with zero as octal.


Fix Level 2.3.n Changes:

703. The mv/rm/cp -c (continue) option added at 2.3.L was on all the time,
    not just when selected using the -c flag.  That's fixed.

704. [NT] du didn't work with just a drive letter, it wanted a colon following.
    That wasn't as intended and has been fixed.


Fix Level 2.3.o Changes:

705. All references to our old Waltham address have been updated to reflect
    our move back to Sudbury, Massachusetts.

706. The C shell wasn't properly responding to #!/bin/csh lines at the
    start of a script.  It works now.

707. xargs didn't mention the -r option in help screen.  It does now.

708. [NT] The du -c option didn't work; it always reported on the C: drive.
    That's fixed.

709. The update.csh script has been added to the samples directory.

710. The C shell pattern-matching operators !~ and =~ were supposed to
    treat ':' as an ordinary character.  Instead, it treated it as a
    delimiter.  That's fixed.



Fix Level 3.0 Changes:

711. The longstanding problem with "ps -s | more" is fixed.  Microsoft
    appears to have changed the way the HKEY_PERFORMANCE_DATA\Counters
    object works:  individual names (e.g., "Virtual Bytes") can appear
    multiple times in the list, but only the first counter number is
    actually usable.

712. Support for OS/2, MIPS, PowerPC and Alpha are dropped.

713. All our contact information has been updated.

714. The C shell didn't parse floating point literals of the form nn.nnE-nn
    correctly.  It does now.

715. Postage.csh has been updated with current US postage rates.

716. Colors.csh now resets MoreEOF, DIRECTORIES, SYSTEMFILES, SYSTEMDIRS
    and HIGHLIGHT, so that if you change to something else (e.g., laptop
    colors) then back, everything is restored.

717. The cl.csh sample script has been retired.  (Current versions of cl.exe
    supplied with Microsoft Visual Studio work just fine.)  Also, the
    makecpgm.csh sample script now includes user32.lib.

718. The undocumented csh -Q (quiet) option is now documented.

719. The entire product has been rebuilt using the latest Microsoft
    Visual Studio for Windows XP, though still retaining back-level
    compatibility with earlier Windows releases.

720. The default for MixedCaseDrives (if that variable's not defined) has
    been changed:  Everything is now mixed case, reflecting the fact that
    no one's still using 8.3 filenames anymore.

721. Des is now legal to export, so there's no longer a separate export
    version.

722. Shortcut can now be used to set console properties on the shortcut.

723. The C shell will now look for a startup.csh and login.csh file in
    the distribution directory, e.g., d:\Program Files\Hamilton C shell 2003,
    if it doesn't find one in the Home directory.

724. Any inherited value for the SHELL environment variable is discarded;
    the value of SHELL is always set at startup to be the actual path
    to this particular csh.exe.

725. The default colors are changed as follows to assume a white on blue
    window:

      Color       Old default             New default

      Deletions   bright red              bright white on red
      Additions   bright green            bright white on green
      MorePrompt  green                   red on white
      MoreFillin  white                   black
      MoreError   bright yellow           bright white on red

727. At last(!), the shell comes with an automated install and uninstall
    using the Microsoft Installer and the Add/Remove Programs applet.

728. The User Guid is now on-line as hypertext and as a Word document.
    PowerPoint slides deck tutorials on the shell and on Tar and MT have
    been added.

729. If a popup was generated (e.g., after the 10th command in the demo)
    after a command that had just scrolled the screen, the popup would be
    off the top of the window.  That's fixed.


Fix Level 3.0.a Changes:

730. The PV_Annuity and FV_Annuity calculations were wrong in finance.csh
    and have been corrected.  Also, the Annuity_PV and Annuity_FV procedures
    have been added.

731. ls encountered a buffer overrun error on any shortname (e.g., c:\progra~1)
    arguments.  That's been fixed.

732. All the hypertext is now Palatino Linotype font rather than Times Roman
    for better readability.


Fix Level 3.0.b Changes:

733. The new auto install would fail on Japanese and other machines with
    localized names for Start Menu\Programs and Desktop.  That's fixed.

734. Chown and chgrp have been substantially reworked to support long Unicode
    filenames and to fix a bug that caused attempts to recursively take (-rT)
    a directory tree to fail.

735. A new -c (continue on error) option has been added to mv, cp and rm.


Fix Level 3.0.c Changes:

736. Tar had a bug that would cause it to crash if it tried to append a small
    file onto an archive on tape that didn't even fill a whole block.  That's
    fixed.


Fix Level 3.0.d Changes:

737. Tar couldn't copy files larger than 4GB (32-bit length) to an archive.
    The new limit is 5.85GB (eleven octal digits.)


Fix Level 3.0.e Changes:

738. Tar would fail when trying to write a continuation tape.  That now
    works.


Fix Level 3.0.f Changes:

739. Tar has been substantially improved.  It now supports binary fields in
    a tar header, allowing a maximum filesize of 8.4M petabytes.  Problems
    reading continuation tapes have been fixed and tar now prompts rather
    than simply exiting with an error if it's asked to read a continuation
    tape before the tape has actually been inserted.  After reading a tape,
    tar now ejects as well as rewinds by default.  A new -# option has been
    added as a shortcut for reading and writing the tape drive.  The help
    screen has been somewhat improved.

740. The AllowVistaTapeAccess.csh script and the associated
    AllowVistaTapeAccess.reg file have been added to the Setup directory
    and may be used, as described in the tar -h help screen, to grant
    access to the tape device under Vista Basic or Home Premium.

741. Minor changes were made to chown and chgrp to eliminate a Utf8 sequence
    from the output and to improve the formatting of the help screen.

742. On very rare occasions, the C shell could crash when a thread exited.
    That's fixed.

743. The postage.csh sample script has been updated to reflect the latest
    USPS rate increase as of May 12, 2008.

744. The directory utility has been added.

745. Even if the C shell was installed for "all users," the ACL on it
    would still only allow access to the user who'd installed it.  That's
    fixed; all the files and various start menu shortcuts, etc., are now
    ACL'ed to allow read access by all users and power users and full control
    by administrators, the system, the user who did the installation and
    the creator/owner.

746. The timestmp.csh sample script would fail on dates in 2008 and 2009
    because when it truncated the year to 08 or 09, then tried to print it
    as a 2-digit decimal, the C shell would complain that it wasn't a valid
    octal.  This also affected the fixup.csh sample script, which used
    timestmp.

747. The C shell now allows procedure arguments and variable assignments
    of lists of typed values (ints, floats or strings).  Individual elements
    of a variable can themselves be lists of typed values, allowing pseudo-
    two-dimensional arrays.

748. Chained editing operations against variables didn't work properly.  For
    example, $a:2-4:# didn't work.  Also, there was a memory leak in chained
    operations.  Both these problems have been fixed.

749. The vol utility reported a noise value for the high bits of a volume
    serial number due to an uninitialized variable.  That's fixed.

750. The dirname and posxpath sample utilities now return "." if called
    with no argument.  They used to generate error spew.

751. The percentchg sample utility has been added.

752. The read utility didn't work if less than 2 read variables were
    specified.  It now works properly for all cases.

753. The double backquote, `` ... ``, construct has been introduced.  It
    works like the single backquote version of command substitution,
    ` ... `, except that the substituted text is parsed by lines rather
    than words.  This is convenient if the output of the command is a list
    of filenames, one per line, with spaces in the filenames, e.g.,

      25 D% whereis whereis
      D:\Program Files\Hamilton C shell 2003\Bin\whereis.csh
      26 D% mi ``!!``

    It's possible to read a whole file into a variable using this construct.
    For example:

      27 D% @ x = ``cat parse.c``
      28 D% foreach i ($x:q) do calc i; end | mi

    (To avoid having wildcarding being applied to the text, the @-statement
    is used for reading and the :q quoting operator is used in the foreach.)

754. A bug in the wildcarding caused the shell to lock up with a nonsensical
    complaint about running out of memory on seemingly simple constructs
    such as

      echo *\

    has been fixed.


Fix Level 3.0.g Changes:

755. A bug was introduced at 3.0.f that caused floating point values to be
    compared as if they were integers, giving wrong results.  That's fixed.

756. An access violation in echo `` caused by having failed to rebuild one
    of the modules in the C shell in 3.0.f has been fixed.

757. The which sample utility could fail sometimes if used in command
    substitution because it piped data to head to pick off just the first
    item.  If head exited before the first stage completed, the thread would
    exit with a 232 "pipe is being closed" error status.  Which now uses the
    new ``...`` operator with word selection to pick the first line.

758. Fixed typos and arranged options alphabetically in the help screen for
    tar.

759. Added a comment to the sunrise.csh sample script noting that west
    longitudes and north latitudes are positive.

760. Added mention of the -c option to the option summary lines in the help
    screens for the mv, cp and rm utilities.

761. The AllowVistaTapeAccess.csh and DenyVistaTapeAccess.csh scripts
    now refuse to do anything unless they're run on Vista.  Also, they've
    been moved to the bin directory.

762. The Word and hypertext (HTML) User Guides have been updated.  Also, a
    PDF version has been added.


Fix Level 4.0 Changes:

763. The entire product has been rebuilt under Visual Studio 2008 and a new
    64-bit version has been introduced.  Performance of the 64-bit version
    (measured on an Intel Core i7 machine running 64-bit Vista) is about 2x
    to 3x that of the 32-bit build on the same machine, depending on what's
    measured.

764. Installation for "all users" is now the default and it no longer requires
    that the installation be run as administrator.

765. The 32-bit version now knows about the 64-bit Vista file system
    redirection mechanism that ordinarily redirects any attempts by 32-bit
    applications to access the \windows\system32 directory to the
    \windows\SysWOW64 directory.   (Vista does this so that 32-bit apps
    will load the 32-bit versions of all the system DLLs.  But it has effect
    of making programs that ship only as 64-bit versions, like telnet.exe,
    inaccessible.)  Once they start up, the C shell and all the utilities now
    disable that redirection, thus allowing them to access the system32
    directory.

766. The default startup.csh script now unsetenv's the CshTitle variable so
    that if you start a 64-bit version of the C shell from a 32-bit version,
    it'll update the title.

767. The xargs utility has been improved.  If the C shell is used to run the
    command because it appears to be an alias, xargs now allows for the
    possibility the expansion might grow the command by 1024 bytes.  Also,
    xargs used to stop if the child returned any non-zero return code.  That
    was awkward because grep and fgrep return 1 for no matches.  Xargs now
    stops by default only if the return code is &gt; 1.  If it does stop because
    the return code was over the limit, it generates an error message.

768. The postage.csh sample script has been updated to reflect the new US
    postage rates effective May 11, 2009.

769. The deltahrs.csh sample script has been added.

770. The update.csh, ts.csh and duplicat.csh sample scripts now use the
    ``...`` whole-line command substitution operator so they'll work properly
    with filenames containing spaces and special characters.

771. The ls -Q option now inserts escape characters before any special
    characters rather than single-quoting the entire filename.

772. The listreg utility has been added.

773. The shortcut -d (starting directory) option will now be taken as a literal
    rather than expanded to a full path if the first character is a percent
    sign signifying that it's a Windows shell variable, e.g., %USERPROFILE%.

774. The memberi sample script, which does a case-insensitive search to see
    if a given value is a member of a list, has been added and is now used in
    the default login.csh script to determine if the C shell's bin and
    samples directories are already on the search path.

775. The C shell didn't correctly evaluate the path variable if evaluated as
    a typed value in an expression.  It does now.

776. If the C shell is run as administrator on Vista, it prepends
    "Administrator: " to the default title.

777. Cmd.exe has a bug that causes problems running scripts using the /c
    command line option if both the path to the script and at least one
    argument to the script contain spaces.  For example,

      c:\&gt;cat "\Users\Nicole\folder with space\test.cmd"
      echo %1 %2

      c:\&gt;"\users\nicole\folder with space\test.cmd" "hello world"

      c:\&gt;echo "hello world"
      "hello world"

      c:\&gt;cmd /c "\users\nicole\folder with space\test.cmd" "hello world"
      '\users\nicole\folder' is not recognized as an internal or external
      command, operable program or batch file.

    This caused problems for the C shell running commands that invoked .cmd
    or .bat files.  But a workaround, which the C shell now uses is to paste
    an extra set of double quotes around the scriptname and the arguments:

      c:\&gt;cmd /c ""\users\nicole\folder with space\test.cmd" "hello world""

      c:\&gt;echo "hello world"
      "hello world"

778. su required some minor changes for Vista and Win7.  The command line
    argument to CreateProcessAsUser cannot be a pointer to a literal or
    read-only memory.  Also, error mode was adjusted to allow popups if the
    child doesn't start properly (which can happen if you try to su a userid
    that's a member of the administrators group but isn't specifically
    =the= administer userid.

779. The timestmp.csh, basename.csh, percentchg.csh and newfiles.csh sample
    scripts now give error messages or sensible results if invoked without
    any arguments.

780. env now waits for the child to finish if it's running in the same
    window.

781. tar no longer quits with an error if it can't read a directory (usually
    because it doesn't have access rights.)  It now just gives a warning and
    continues.

782. A bug in the set statement that could cause it to fail inside a procedure
    as in this example has been fixed:

      1 C% proc foo()
      2 C? set nonomatch = 2
      3 C? end
      4 C% foo
      5 C% foo
      csh(line 2):  The predefined variable 'nonomatch' cannot be a string.
      &gt; in foo( ) defined at line 1
      &lt; called from line 5


Fix Level 4.0.a Changes:

783. mv, cp and rm are now full Unicode apps.  This means they can now work on
    files and directories with Unicode names they previously couldn't
    manipulate.  Also, error messages when a file or directory is in use by
    another process or if access is denied have been improved.

784. chown no longer requires you specify an owner with the -R (remove ACL)
    option.


Fix Level 4.0.b Changes:

785. Formatting of some of the new error messages in mv, cp and rm could crash.
    That's fixed.

786. The uptime sample script has been added.

787. ls is now a full Unicode app and can now traverse directories with long
   Unicode filenames.

788. If argv contained more than one word, references that used expression
   notation would fail.  For example:

    1 C% set argv = hello world
    2 C% calc $argv   # Worked
    hello world
    3 C% calc argv    # Crashed

789. If the output string was exactly 511 characters long, echo would paste
   a superfluous null character onto the end, just before the CR-LF
   combination.  That's fixed.


Fix Level 4.1 Changes:

790. The C shell now knows how to start processes that require elevation.

791. The C shell .msi installation file and all the executables inside it are
    now signed using our new code signing certificate.  This means that when
    you try to install the C shell or anytime elevation is required (in
    particular, when you run su), UAC will post a blue popup indicating that
    the file is from Hamilton Laboratories, a verified publisher.  (Previously,
    UAC showed the yellow popup associated with an unknown publisher.)

792. The su utility has been improved:
      a. It now has a manifest marking it as requiring elevation.
      b. If it's running in a new window because its parent process wasn't
         running elevated, su will:
         1. Size the window and buffer and set up the colors.
         2. Pause, by default, before exiting if it encounters an error
            or displays help information or if the child it starts exits
            with a return code higher than allowed.  (This is to avoid
            messages disappearing before they can be read.)
         3. Use a login shell if it starts the C shell.
      c. "." and ".\." are recognized as aliases for the current user.
         Also, su no longer tries to do a login for the current user; it
         knows it already has the identity and rights it needs.  So it
         treats this case as an elevation instead.
      d. su is now a full Unicode application.
      e. Under Windows 7, GUI applications wouldn't start properly and
         couldn't paint their windows.  That's fixed.  But the Open file
         dialog still fails but this may be a Windows 7 problem related
         to Libraries.

793. Both ``;`` and `;` forms of command substitution used to erroneously
    generate a single word containing the nullstring.  They now properly
    generate no words at all.

794. The which sample utility would generate an error dump if there were
    no matches found.  It now generates no output at all if there are no
    matches.

795. The 32-bit version of filebox wouldn't run properly on 64-bit Windows 7
    because it tried to turn off filesystem redirection.  That caused the
    GetOpenFileName() system API call to fail.  That's fixed, though it does
    mean the 32-bit version of filebox can't be used to browse the 64-bit
    Windows system directories.

796. chown and chgrp now use the unified longpath code.

797. more now uses the new unified error message code.

798. If the C shell can't find a command, it now sets the status to 2 (file
    not found) instead of 1 (incorrect function.)  This is helpful if you try
    to run a command that's not found with the C shell under either su or xargs.
    su will pause to let you see the message and xargs will stop trying to
    run more commands if the return code &gt; 1.

799. When the C shell is running as administrator, it will now paste
    "Administrator:" onto the front of the console window title when
    it runs a child.

800. The C shell will now change the console window title when it runs a
    command passed on the command line using -c.

801. Searching for a string that's wrapped the end of the line on the screen
    failed to match in more with regex either on or off.  It now works for
    both cases.

802. The C shell's -C and -c options now treat the rest of the command line
    arguments as whole literal words, even if they contain spaces or special
    characters like semicolons and quotes.  The result is that something like
    this now behaves as expected:

       csh -c ls '\Program Files'

803. The C shell no longer insists that commands must end with a new line.
    End-of-file is now accepted.

804. The gi, assoc, ftype, shutdown, reboot, pss, killp and sudo aliases have
    been added to startup.csh.

805. env -i crashed.  It's now fixed.  Also, the start alias in startup.csh
    now uses env -N instead of cmd /c start.


Fix Level 4.1.a Changes:

806. A bug introduced at 4.1 caused several utilities including ls and others
    to crash with an assert failure if the (no longer needed) MIXEDCASEDRIVES
    environment variable was defined.  That's fixed.

807. In sed, if the line number corresponding to the beginning of a range
    was deleted, the range was never entered.  If it was the end of the range,
    the range never exited.  That's fixed.

808. The C shell and utilities now use the same common error message facility.
    The C shell no longer word-wraps its messages.  This also fixes a crash
    that could happen in the C shell due to a buffer overrun in the C shell's
    word wrap code.

809. A bug was introduced into more at 4.1 that caused string search to fail
    to match if there weren't at least 2 characters preceding on the line.
    That's fixed.

810. chown and chgrp could fail to take ownership of some long Unicode paths
    because they hadn't normalized the path and would then crash in the
    error message routine.  That's fixed.

811. The MakeShortcuts setup script used whoami and cacls to set permissions
    but didn't consider the possibility of a user id with a space.  It does now.

812. A change made to su at 4.1 caused it to fail on XP because it didn't give
    sufficient access rights to the desktop and window station to the child.
    That's fixed.

813. A longstanding bug caused the C shell to include the line number in error
    messages even for the current line once either ^C or a blank line was
    typed.  That's fixed.


Fix Level 5.0 Changes:

814. The rcode sample utility now flushes stdout before exiting to ensure that
    its output isn't lost.  (Amazing this bug was there so long.)

815. Fix #813 in 4.1.a traded one bug for another, causing line numbers to fail
    to count blank lines.  That's fixed.

816. The change to the common error message facility at 4.1.a introduced a bug
    that caused the shell to crash when trying to report syntax errors in
    scripts as in the following example.  That's fixed.

      2 C% csh -B
      Hamilton C shell(tm) x64 Release 4.1.a
      Copyright (c) 1988-2010 by Hamilton Laboratories.  All rights reserved.
      [2] 1 C% basename $shell

817. Attempting to mv and cp a relative name from a UNC current directory didn't
    work, producing an error message.  That's fixed.  Also some error messages
    were improved.  By default, mv and cp no longer copy security information;
    to request security information be copied, use the +s option.  This is to
    be more in keeping with Windows convention that security is largely
    inherited through the directory structure.  Also, mv and cp now ignore
    the read-only attribute on a destination directory in keeping with Windows
    convention.

818. des had buffer overrun bugs in both the input and output routines that
    could cause it to crash.  It was most easily triggered attempting to
    using the -dr options to decrypt a file that wasn't a valid encrypted
    file.  That's fixed.

819. chown -D now uses inheritance rules to construct an ACL, based on the
    ACL on the parent.

820. The splitstring.csh and findinclude.csh scripts have been added to
    the Samples directory.

821. The su utility has been rewritten to use the Secondary Logon service
    when creating a process as a different user and to spawn a child copy
    of itself with the new (either elevated or different user) credentials
    as an interlude that handshakes with the parent so as to pass the
    environment and current directories to command being run.

822. If the current directory is on a UNC drive, filename completion
    always lower-cased the result.  It should have treated the UNC drive
    as normally mixed case.  That's fixed.

823. The pathname editing operators, :h, :r, :t, etc., didn't work sensibly
    on history references containing quotes.  For example,

      1 C% echo 'a b\c d.e f'
      a b\c d.e f
      2 C% echo !$:h
      echo 'a b
      csh:  Couldn't find the closing ' quote.

    The operators now assume that if a closing quote is trimmed off either
    end of a history reference, it should be added back to the final result.
    If a history reference has to be rewritten into a fullpath for editing,
    the operators assume it's safe to remove any paired quotes so long as
    the result is requoted with single quotes.

      1 C% echo 'a b\c d.e f'
      a b\c d.e f
      2 C% echo !$:h
      echo 'a b'
      a b


Fix Level 5.0.a Changes:

824. The fix to the buffer overrun problem in des in 5.0 introduced a
    regression, causing des to occasionally append a few junk characters
    onto the end of a decypted file.  That's fixed.

825. ls "" failed in a needless assert.  It should have simply reported
    that '' (a null filename) does not exist.  That's fixed.

826. Links in the hypertext user guide are no longer underlined, even in
    Google Chrome.

827. chown now works across the network.  Previously, it failed because 
    it tried changing ownership to itself, a foreign userid.  Windows
    only allows locally-known userids as owners.

828. directory now knows to paste a trailing \r\n onto the result.  Also,
    it's now a full Unicode app writing Utf8 output and can accept a list
    of special folder names.


Fix Level 5.0.b Changes:

829. binedit, diff, env, exec, paste, shortcut, sort, su, uniq, uu and
    xargs all had the same off-by-one error in parsing command line options
    that caused them to crash if the last argv word was an option that
    expected an argument in the next word.  They should have given a
    usage error message.  That's fixed.

830. sort had an off-by-one error in the way it parsed fields, causing it
    to include the preceding separator in each field.  That's wrong but
    it usually worked because every comparison always had the same 
    erroneous prefix for both records.  It failed with numeric fields
    if the separator was something other than a comma.  That's fixed.


Fix Level 5.0.c Changes:

831. The C shell had two bugs affecting list value assignments.  One was
    caused by freeing memory that was still in use here:

     1 C% set a = now is the time
     2 C% set b = hello world
     3 C% set c =
     4 C% @ c[0] = 1/7
     5 C% @ c[1] = b
     6 C% @ c[0] = a
     7 C% calc c

   The other was an assignment (=) inside an if that was supposed to
   test (==) if an indexed value was itself a list and if so,
   free the list.

     1 C% set a = now is the time
     2 C% set c =
     3 C% @ c[0] = 1/7
     4 C% @ c[0] = a
     5 C% calc c

832. The C shell had two memory leaks affecting command substitution, e.g.,
    demonstrated running the following with heapstats enabled:

     1 C% for i = 1 to 10 do
     2 C? echo `echo hello`
     3 C? heapstat
     4 C? end

    One leak affected both `...` and ``...`` forms, the other only the
    latter form.  Both leaks have been fixed.

833. If a list was passed to a procedure, it wasn't properly matched to the
    formal arguments.  It did this, which was wrong; $#x should (and now does)
    evaluate to 2.

     1 C% set a = hello world
     2 C% proc f(x)
     3 C? echo $#x $x
     4 C? end
     5 C% @ f(a)
     1 hello world

    x was improperly set to a single "word", consisting of a list of 2 words.
    It should have been set to the list of 2 words.

834. The C shell leaked the result value of an @ statement if the result
    was a list of words or values, not just a number or a string.  E.g.,

     1 C% set a = hello world
     2 C% for i = 1 to 10 do
     3 C? @ b = a
     4 C? heapstat
     5 C? end

    (The calc statement was fine because it always coerced results to strings,
    which it freed.)

835.  The result of substr(), upper(), lower() and reverse() was always
    memory leaked.  That's fixed.


Fix Level 5.0.d Changes:

836.  The sort utility's -n and -N fields now expect integers to be decimal
    only, consistent with the Posix specification.  The old behavior, also
    accepting octal and hex integers, is available as -x and -X.


Fix Level 5.0.e Changes:

837.  The copyright dates in whereis.csh and in all the samples files have
    been updated.

838.  The postage.csh sample script has been updated to reflect US postage
    rates effective January 22, 2012.

839.  If su's parent process was running as administrator, it couldn't tell,
    causing it to think it was running in a new window.  That caused it to
    re-initialize the window and pause before exiting when it shouldn't.
    That's fixed.


Fix Level 5.0.f Changes:

840.  csh -N (no space added after file completion) is now the default.  A
    new -S option allows adding a space.

841.  fullmixedpath with no operand crashed the C shell with an access violation.
    That's fixed.

842.  Exiting a script with a return code of 995 (ERROR_OPERATION_ABORTED)
    was incorrectly interpreted as a Ctrl-C interrupt.  Also, exiting with an
    actual Ctrl-C resulted in status code 995.  The correct status code when
    exiting from an interrupt under Windows is 0.  The problem could be
    demonstrated as follows:

       onintr echo "Someone pressed ctrl+c..."
       echo "exit 995" &gt; testexit.csh
       testexit.csh

843.  Any readme files that lacked an extension in the distribution have been
    renamed as Readme.txt files.

844.  Labels in sed have been improved.  Sed didn't correctly parse labels in
    : (definition), b (branch) and t (test) operations unless the label name was
    followed by white space.  It should have and now accepts semicolons and
    right curly braces as delimiters, as in this example:

      sed ':top; s/a/b/'   

    Also, branching to a label outside a block used recursion.  That usually
    worked but not if it kept looping; eventually it would overrun the stack,
    as in this example.  (It's an infinite loop but it should still work
    and shouldn't crash.)

      sed ':top ; { P; b top }'

    Labels in sed are now scoped and can be redefined inside a nested {...}
    group and forward references to the nested redefinition work as they
    should.  Labels can also be redefined at a given nesting level.  Previous
    references continue to refer to the previous definition, new references
    refer to the new one.  Branching to a label in an outer group properly
    exits the group, unwinding the stack.  But because they're now scoped,
    it is not possible to branch to a label inside a nested group (just as
    in any other HLL.)  All -e, -f and command line scripts are considered
    to be one big nesting level sharing the same label names.  These examples
    now work:

     sed 'b top; :top; s/a/b/; :top; s/b/C' 
     sed ':top; /a/{s/a/b/; b top}'
     sed 'b top; :top; /a/{b top; :top; s/a/b/; :top; s/b/C/}; /a/{b top}'

845.  If directory is invoked with no foldernames specified as arguments,
    it now lists the symbolic names and locations of all the special
    folders for the individual user or for all users.

846.  The Win32 api GetFileAttributes() fails on \pagefile.sys because the
    file is in use, making it appear the file doesn't exist.  The workaround
    when GetFileAttributes fails is to use FindFirstFile to retrieve the
    attributes.  This change affects the C shell, chgrp, chmod, chown, cmp,
    cp, cron, diff, ln, ls, mkdir, mv, rm, tar, touch and uu.


Fix Level 5.1 Changes:

847.  Fix 846 introduced a regression to the Unicode apps that's now fixed.

848.  The broken sunrise.csh and unixprof samples, the archaic Microsoft
    Word and PDF versions of the User Guide and the archaic PowerPoint
    tutorials and the unnecessary shortcuts to the release notes have
    all been deleted from the distribution.

849.  The default startup.csh setkeys F1 to opening the the user guide.

850.  The output of setkey &lt;no operands&gt; wasn't formatted properly.  It is now.


Fix Level 5.1.a Changes:

851.  Login.csh had a huge mistake in trying to set cdpath to include all
    the *:\"Program Files" directories.  This was very slow if you have
    network drives.  The default cdpath is now just your home directory
    and the desktop directories.  The comments in both login.csh and
    startup.csh have also been updated.

852.  Improvements to the formatting of the user guide including switching
    from Palatino (serif) to Verdana (sans serif) font, using bordered text
    instead of images for the keys on the keyboard (e.g., in the page
    on command line editing), highlighting keywords, command names, etc.,
    with a border and a light blue background and using larger fixed pitch
    font in many of the tables.


Fix Level 5.1.b Changes:

853. sort now has additional options:  -R to normalize line ends,
    -s stable sort and -v verbose output from a -c check sort.  Check
    sorts with -c always reported the input was ordered even if it wasn't;
    that's fixed.

854. filebox -h had a typo.  Use -i to specify an initial directory, not
    -d.  Also, the -e option now follows the same syntax as -f and is
    automatically added to the head of the list of filters.

855. dirbox now uses the new resizable dialog box, the options have been
    reduced to only those that make sense when choosing a file or directory
    and the -i initial path option now works.  If a non-existent path is
    typed into the edit box, the OK button is greyed.

856. Path hashing is now turned on before running startup.csh and login.csh.
    This was causing a problem with the default login.csh script, which
    saved and restored the state but ended up causing login copies to
    run with path hashing turned off.

857. The undocumented -t (text), -b (binary) and -u (unicode) file test
    operators added at 2.3.e have been removed.

858. The -x (executable) and -z (zero length) file test operators weren't
    thread-safe.  They didn't properly setup and release the current
    directories when calling Win32 file operations.  The could fail if
    another thread changed the process directories, e.g.:

       cd .. &amp;; calc -x hello.exe

859. New -t (timestamp) and -s (size) file operators have been added.

    -t returns a string of the form "YYYY-MM-DD hh:mm:ss", e.g.,
    "2012-11-25 14:25:04".  If the path doesn't exist or doesn't have
    a timestamp (as, e.g., is the case for C:\) -t returns null;
    this is not an error.  The -t operator allows times to be compared
    or pattern-matched.  For example

       foreach i ( * ) if (-t $i =~ "2012*") echo $i changed in 2012; end
       if (-t $a &gt; -t $b) echo $a is newer than $b

    -s returns the size in bytes.  If the path doesn't exist or is a
    directory, -s returns null; this is not an error.


Fix Level 5.1.c Changes:

860. sort didn't parse short records properly.  If a key specified a
    character offset that was past the end of a particular record,
    comparisons of that record were unpredictable.  That's fixed.

861. The -l (logging) option for mv, cp and rm had a bug that caused
    them to spew garbage ANSI sequences resulting in black on black
    characters.


Fix Level 5.2 Changes:

862. The random and xor utilities have been added.

863. The periodic demo version popup appeared when it shouldn't have.
    That's fixed.

864. A bug in the code that executes a compiled set indexed variable
    to a string literal statement was fixed.  It was grabbing the literal
    without making its own copy.  It worked if the compiled statement was
    only executed once, but not if it ever got re-executed, e.g., in a
    loop or a compiled procedure.  When you later tried to access the
    value in the variable, you hit a null pointer.  For example:

      for i = 1 to 2 do
         set x[0] = x
      end
      echo $x  # failed with a null pointer

865. Passing a null string as a parameter to a procedure caused the
    shell to hang.  During evaluation, the null string caused a linked
    list to be built with a loop in it.  This is fixed.

      proc p( a )
         echo $a
      end
      set x =
      @ p( x )  # hung

866.  Aliases have been added to the default startup.csh script for vim
    and gvim, using env to delete the SHELL variable before starting the
    Vim editors.  Vim only knows how to use cmd.exe when "shelling out"
    using the :!  commmands.  If the SHELL variable is defined, Vim uses
    it, but assumes it points to cmd.exe.  

867. Aliases for su and sudo in the default startup.csh script now use
    the env utility to delete the LAYER environment variable before
    invoking su.exe.  This avoids the prompt in the new window appearing
    as "[2] 1 C%".  Also, the LAYER variable is now defined as all caps
    in startup.csh.

868.  A bug in the evaluation of indexed variables caused the shell to
    misinterpret a binary int as a float, causing this to fail.  It's
    now fixed.

      set v = 1 2
      @ v[1] *= 3

869.  If the env -N (new screen) option is specified, env no longer waits
    for the child unless -w is also specified.

870.  The chunk size used by the split utility was calculated as a 32-bit
    signed number, meaning the largest chunk size was 2GB.  Split now
    uses 64-bit unsigned arithmetic, allowing a maximum chunk size of
    roughly 17 exabytes.  (An exabyte is 10**18 bytes.)

871.  The hypertext user guide has been revised with better navigation and
    additional topics.

872.  An uninitialized variable randomly caused sed to crash in branches
    to forward references.  That's fixed.


Fix Level 5.2.a Changes:

873.  mv now sets the security descriptors on the output via inheritance from
    the directory it's moved to.

874.  The mouse wheel is now disabled by default in more on startup but can be
    toggled with the w command.

875.  getopt now preserves switchchars.

876.  A bug in the common error message routine that was intended to report a
    garbled color specification, e.g., "setenv DIRECTORIES = normal", has
    been fixed.

877.  sed will now compare \r\n equal to \n.


Fix Level 5.2.b Changes:

878.  More wouldn't correctly match anything at the end of a line.  That's
    fixed.


Fix Level 5.2.c Changes:

879.  The C shell allowed UNC (\\machine\resource\path) names on the cdpath
    but would crash if you attempted to "cd +c" to one of them.  That's fixed.


Fix Level 5.2.d Changes:

880.  The vectormath.csh sample script has been added.

881.  A bug that caused the C shell to crash randomly when a thread exited,
    caused by failing to lock a shared variable, has been fixed.

882.  A bug that caused the C shell to crash if an argument to a user-
    defined procedure had the same name as a builtin variable has been
    fixed.


Fix Level 5.2.e Changes:

881.  If a here document (using &lt;&lt;) contained a substitution plus a left
    bracket followed immediately by a double quote, the result contained
    a spurious circumflex.  That's fixed.


Fix Level 5.2.f Changes:

882.  The same mistake that caused random crash in thread exit fixed at
    one place in the code at 5.2.d also appeared in two other places, now
    fixed. 


Fix Level 5.2.g Changes:

883.  A new -x command line option has been added to the C shell for
    compatibility with GNU tcsh and make. The first argument word is
    taken as the command, to be parsed as a string.  The remaining
    arguments are placed in the shell argv variable.

884.  Additional work chasing the bug described at 881.

885.  Fixed broken links to the User Guide home page in the navigation
    panels on the online man pages for the utilities and samples. 



Known Bugs and Limitations

1.  The keyboard editing logic only checks to see if the cursor's been moved
    by a background process or thread when it reads the first keystroke.  That
    catches most situations, but if you begin typing a command and then some
    background activity starts writing to the screen or moving the cursor,
    the result can be a scrambled display.

2.  Ctrl-S and Ctrl-Q flow control to the console window is not supported.

3.  Under Windows 7, the 32-bit version of the C shell can't tell when a child
    console application, e.g., su, will start up as an elevated process in a
    separate window.  So it waits for it to complete rather than automatically
    prompting for a new command.  The workaround is to use the &amp; operator to
    tell the C shell to run it as a background process.

4.  Long Unicode paths (e.g., \\?\c:\Windows) on the command line don't get
    passed to child processes correctly because the wildcarding done by the
    Microsoft setargv and wsetargv library routines fails if the path actually
    exists; it works if the path does not exist.  The workaround is to add an
    extra backslash to the front of the path.


Thank you for using Hamilton C shell.


                  Nicole Hamilton
                  March 5, 2017

                  Hamilton Laboratories
                  16645 NE 46th Street
                  Redmond, WA  98052-5441
                  U.S.A.

     Telephone:   425-497-0102
     Cellphone:   425-765-9574
         Email:   <a href="mailto:hamilton@hamiltonlabs.com">hamilton@hamiltonlabs.com</a>
      Web Site:   <a href="https://www.hamiltonlabs.com">https://www.hamiltonlabs.com</a>
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="58-Win9xProblems.htm">Previous</a> |
<a href="60-License.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		License
	</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				License
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm"><b>License</b></a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
		
<h3>
HAMILTON LABORATORIES SOFTWARE LICENSE<br/>
<small><a href="59-ReleaseNotes.htm">Previous</a> |
<a href="61-Support.htm">Next</a></small>
</h3>

<p>
1.  GRANT OF LICENSE.  Hamilton Laboratories grants to you the
right to use Hamilton Laboratories&rsquo; software program
and related documentation (the &ldquo;SOFTWARE&rdquo;) on a single computer.
You may not network the SOFTWARE or otherwise use it on more than one
machine at the same time.  You may install multiple versions of
the same SOFTWARE on the same machine.
</p>

<p>
2.  &ldquo;ALL MY DEVICES&rdquo; PERSONAL USE PROVISION.  If this license was
purchased as a Personal Use license, it may only be used by a single individual
on personally-owned devices intended for personal use.  But one Personal Use license
grants you the right to use the SOFTWARE on all such devices.  You may transfer
a Personal Use license but only as a Personal Use license.
</p>

<p>
3.  COPYRIGHT.  The SOFTWARE is owned by Hamilton Laboratories
or its suppliers and is protected by United States copyright
laws and international treaty provisions.  Therefore, you must
treat the SOFTWARE like any other copyrighted material (e.g.,
a book or musical recording) except that you may either (a)
make a reasonable number of copies of the SOFTWARE solely for
backup purposes or (b) permanently transfer the SOFTWARE from
one machine to another.
</p>

<p>
4.  OTHER RESTRICTIONS.  You may not rent or lease the SOFTWARE,
but you may transfer the SOFTWARE and related documentation
on a permanent basis provided you retain no copies and
the recipient agrees to the terms of this Agreement.  You may
not reverse engineer, decompile or disassemble the SOFTWARE.
If SOFTWARE is an update, any transfer must include the update
and all prior versions.
</p>

<p>
5.  MULTIPLE FORMATS.  If you&rsquo;ve received this SOFTWARE in multiple
formats, you may use only the formats appropriate for your computer.
You may not use the other formats on another computer except as
provided for under the "All my devices" personal use provision.
You may not loan, rent, lease, or transfer them to
another user except as part of the permanent transfer (as
provided above) of all SOFTWARE and written materials.
</p>

<p>
6.  DEMO VERSIONS.  If this SOFTWARE is a demo version, it is
licensed for purposes of evaluation, not ongoing production
work. You may copy or distribute it world-wide on any internal
or public websites or include it on any shareware or sampler
media you may be compiling.  If you do reproduce or distribute
this SOFTWARE, it must be reproduced in its original form.  You
may not extract and distribute only portions of the SOFTWARE.
You may not charge any more than an incidental reproduction fee.
You may not include this SOFTWARE in any commercial product other
than a shareware or sampler compilation. You must include our
copyright notice. 
</p>

<h4>
LIMITED WARRANTY
</h4>

<p>
LIMITED WARRANTY.  Hamilton Laboratories warrants that the
SOFTWARE will perform substantially in accordance with the
accompanying written materials for a period of 90 days from
the date of purchase.  Some states do not allow limitations
on the duration of an implied warranty, so the above may not
apply to you.
</p>

<p>
CUSTOMER REMEDIES.  Hamilton Laboratories&rsquo; entire liability
and your exclusive remedy shall be, at Hamilton Laboratories&rsquo;
option, either (a) return of the price paid or (b) repair or
replacement of the SOFTWARE that does not meet this Limited
Warranty and which is returned to Hamilton Laboratories with
a copy of your receipt.  During the first 90 days from the
date of purchase, if you determine that the SOFTWARE is
unsatisfactory in any way, you may return it with proof of
purchase and a written description of why the SOFTWARE was
unsatisfactory for a full refund.
</p>

<p>
<b>NO OTHER WARRANTIES.  Hamilton Laboratories disclaims all
other warranties, either express or implied, including, but
not limited to implied warranties of merchantability and
fitness for a particular purpose, with respect to the SOFTWARE
and accompanying written materials.  This limited warranty
gives you specific legal rights.  You may have others, which
vary from state to state.</b>
</p>

<p>
<b>NO LIABILITY FOR CONSEQUENTIAL DAMAGES.  In no event shall
Hamilton Laboratories or its suppliers be liable for any
damages whatsoever (including, without limitation, damages
for loss of business profits, business interruption, loss
of business information, or other pecuniary loss) arising
out of the use of or inability to use this Hamilton
Laboratories product, even if Hamilton Laboratories has
been advised of the possibility of such damages.  Because
some states do not allow the exclusion or limitation of
liability for consequential or incidental damages, the
above limitation may not apply to you.
</b>
</p>

<p>
This Agreement is governed by the laws of the State of
Washington.
</p>

<p>
Should you have any questions concerning this Agreement, or
if you wish to contact Hamilton Laboratories for any reason,
please write:  Hamilton Laboratories, 16645 NE 46th Street,
Redmond, WA  98052-5441, USA.
</p>

<h3>
<small><a href="59-ReleaseNotes.htm">Previous</a> |
<a href="61-Support.htm">Next</a></small>
</h3>
		
		</div>
		<div id="userguidescreenshots">


		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>Support</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="index.htm">User guide</a>
			</h4>
			<h2>
				Support
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoast10-to-1Slice1400x140.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm"><b>Support</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
		
			<h3>
				Support<br/>
				<small><a href="60-License.htm">Previous</a> <span class="grey">| Next</span></small>
			</h3>
			
			<p>
			Hamilton Laboratories is committed to your complete satisfaction.  If you buy Hamilton C shell
			and you aren’t satisfied for any reason &ndash; <em>or even for no reason</em> &ndash; in the
			first 90 days, we'll give you your money back.  Updates are free for the first year and inexpensive
			after that.  We want you to be happy.
			</p>
			
			<p>
			If you have a question, call or send email.  We promise a prompt response.  If you need help
			setting up or using Hamilton C shell, we will spend whatever time it takes to get you going.
			</p>
			
			<p class="indent sanserif" style="margin-top:30px">
			Hamilton Laboratories<br/>
			16645 NE 46th Street<br/>
			Redmond, WA  98052-5441<br/>
			USA
			</p>
			
			<p class="indent sanserif" style="margin-bottom:30px">
			Telephone 425-497-0102<br/>
			Email <a href="mailto:Nicole Hamilton <hamilton@hamiltonlabs.com>">hamilton@hamiltonlabs.com</a>
			</p>

			
			<p>
			If you find a bug, we will fix it.  If you can help us recreate it, we can probably fix it
			within a few days. The best way to do that is by emailing us a .zip file containing a sample
			.csh script and any sample data needed to demonstrate the bug.
			</p>
			
			<p class="sansserif" style="margin-top:20px">
			<em>When emailing a <tt>.csh</tt> script, you <strong>must</strong> put it inside a <tt>.zip</tt> file
			or rename it as a <tt>.txt</tt> file or it will
			be stripped from your message by Outlook and other popular mail programs because C shell scripts
			are considered <strong>executables</strong>.</em>
			</p>
			
			<h3>
				<small><a href="60-License.htm">Previous</a> <span class="grey">| Next</span></small>
			</h3>
		
		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		a2e.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				a2e.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm"><b>a2e.csh</b></a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
a2e.csh<br/>
<small><span class="grey">Previous |</span>
<a href="args.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Convert from ASCII to EBCDIC using the tr utility

#  Copyright (c) 1997-2012 by Hamilton Laboratories.  All rights reserved.

tr -- ^
'^x01-^xff' ^
'^x01^x02^x03^x37-^37^x2d^x2e^x2f^x16^x05^x25^x0b^x0c^x0d^x0e^x0f^x10^x11^x12^x13^x3c^x3d^x32^x26^x18^x19^x3f^x27^x1c^x1d^x1e^x1f^x40^x4f^x7f^x7b^x5b^x6c^x50^x7d^x4d^x5d^x5c^x4e^x6b^x60^x4b^x61^xf0^xf1^xf2^xf3^xf4^xf5^xf6^xf7^xf8^xf9^x7a^x5e^x4c^x7e^x6e^x6f^x7c^xc1^xc2^xc3^xc4^xc5^xc6^xc7^xc8^xc9^xd1^xd2^xd3^xd4^xd5^xd6^xd7^xd8^xd9^xe2^xe3^xe4^xe5^xe6^xe7^xe8^xe9^x4a^xe0^x5a^x5f^x6d^x79^x81^x82^x83^x84^x85^x86^x87^x88^x89^x91^x92^x93^x94^x95^x96^x97^x98^x99^xa2^xa3^xa4^xa5^xa6^xa7^xa8^xa9^xc0^x6a^xd0^xa1^x07^x20^x21^x22^x23^x24^x15^x06^x17^x28^x29^x2a^x2b^x2c^x09^x0a^x1b^x30^x31^x1a^x33^x34^x35^x36^x08^x38^x39^x3a^x3b^x04^x14^x3e^xe1^x41^x42^x43^x44^x45^x46^x47^x48^x49^x51^x52^x53^x54^x55^x56^x57^x58^x59^x62^x63^x64^x65^x66^x67^x68^x69^x70^x71^x72^x73^x74^x75^x76^x77^x78^x80^x8a^x8b^x8c^x8d^x8e^x8f^x90^x9a^x9b^x9c^x9d^x9e^x9f^xa0^xaa^xab^xac^xad^xae^xaf^xb0^xb1^xb2^xb3^xb4^xb5^xb6^xb7^xb8^xb9^xba^xbb^xbc^xbd^xbe^xbf^xca^xcb^xcc^xcd^xce^xcf^xda^xdb^xdc^xdd^xde^xdf^xea^xeb^xec^xed^xee^xef^xfa^xfb^xfc^xfd^xfe^xff'
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><span class="grey">Previous |</span>
<a href="args.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		args.c
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				args.c
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm"><b>args.c</b></a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
args.c<br/>
<small><a href="a2e.htm">Previous</a> |
<a href="average.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*       Dump the argv[] and envp[] lists passed to the program.           */
/* Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved. */
/*                                                                         */
/*                                                                         */
/***************************************************************************/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "<a href="internat.htm">internat.h</a>"

void cdecl main ( int argc, char *argv[], char *envp[] )
      {
      int i;
      Internationalize();
      printf ("argc = %d\n", argc);
      for (i = 0;  i &lt; argc; i++)
         printf ("argv[%d] = '%s'\n", i, argv[i]);
      for (i = 0;  envp[i]; i++)
         printf ("envp[%d] = '%s'\n", i, envp[i]);
      exit(0);
      }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="a2e.htm">Previous</a> |
<a href="average.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		average.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				average.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm"><b>average.csh</b></a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
average.csh<br/>
<small><a href="args.htm">Previous</a> |
<a href="basename.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Find the average of any numeric values in a list.  If none of the
#  elements are numeric, return 0.

#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.

proc average( values )
   local i, j, n
   @ j = 0
   @ n = 0
   if ($#values) then
      for i = 0 to $#values - 1 do
         if (isnumber(values[i])) then
            @ j += values[i]
            @ n++
         end
      end
      if (n) @ j /= n
   end
   return j
end

average $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="args.htm">Previous</a> |
<a href="basename.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		basename.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				basename.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm"><b>basename.csh</b></a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
basename.csh<br/>
<small><a href="average.htm">Previous</a> |
<a href="bits.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Emulate the POSIX basename command to extract just the last component
#  of a pathname, deleting any suffix, if specified.

#  Usage:   basename string [ suffix ]

#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.

proc basename( string, suffix )
   local base, i, j

   if ( $#string == 0 ) then
      echo -2 basename: No file or directory specified.
      @ status = 1
      return
   end

   if ( $#string &gt; 1 ) then
      echo -2 basename: Only one file or directory should be specified.
      @ status = 1
   end

   @ base = $string:t
   if (base == "") @ base = "\"

   if (suffix == "" &amp;&amp; suffix != base) return base

   @ i = strlen(base)
   @ j = strlen(suffix)
   return i &gt; j &amp;&amp; lower(substr(base, i - j + 1)) == lower(suffix) ? ^
      substr(base, 1, i - j) : base
end

basename $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="average.htm">Previous</a> |
<a href="bits.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		bits.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				bits.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm"><b>bits.csh</b></a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
bits.csh<br/>
<small><a href="basename.htm">Previous</a> |
<a href="blksize.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the number of bits required to represent a numeric value as
#  an integer.

#  Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved.

proc bits( n )
   return ceil(log2 (n + 1))
end

bits $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="basename.htm">Previous</a> |
<a href="blksize.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		blksize.c
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				blksize.c
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm"><b>blksize.c</b></a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
blksize.c<br/>
<small><a href="bits.htm">Previous</a> |
<a href="bumpdate.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*       Read from Stdin, Write to Stdout, using specified Blocksize       */
/* Copyright (c) 1994-2012 by Hamilton Laboratories.  All rights reserved. */
/*                                                                         */
/*                                                                         */
/***************************************************************************/

/* blksize.c:  Accepts just one (optional) argument, the
               blocksize desired, in bytes.  */

#include &lt;windows.h&gt;
#include &lt;stdlib.h&gt;

void main( int argc, char **argv )
   {
   HANDLE Stdin = GetStdHandle(STD_INPUT_HANDLE),
      Stdout = GetStdHandle(STD_OUTPUT_HANDLE);
   char *buffer, *p;
   DWORD length, blocksize, remaining;
   SYSTEM_INFO sysinfo;

   /* First arg is blocksize.  If missing, default to 512 bytes. */
   blocksize = argc &gt; 1 ? atoi(argv[1]) : 512;

   /* Allocate the buffer, ensuring that it's page-aligned so we
      won't have problems doing i/o to/from a device such as a tape
      or diskette. */
   GetSystemInfo(&amp;sysinfo);
   buffer = (char *)(((ULONG)malloc(blocksize + sysinfo.dwPageSize) +
         sysinfo.dwPageSize) &amp; ~(sysinfo.dwPageSize - 1));

   while (ReadFile(Stdin, buffer, blocksize, &amp;length, NULL) &amp;&amp; length)
      {
      if (remaining = blocksize - length)
         {
         /* Apparently reading from a pipe or the console and getting less
            than a full blocksize number of characters.  Keep reading until
            we have enough to for a whole blocksize to output (or until
            End-Of-File). */
         p = buffer + length;
         while (remaining &amp;&amp;
               ReadFile(Stdin, p, remaining, &amp;length, NULL) &amp;&amp; length)
            {
            remaining -= length;
            p += length;
            }
         length = blocksize - remaining;
         }
      WriteFile(Stdout, buffer, length, &amp;length, NULL);
      }

   CloseHandle(Stdin);
   CloseHandle(Stdout);
   ExitProcess(0);
   }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="bits.htm">Previous</a> |
<a href="bumpdate.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		bumpdate.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				bumpdate.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm"><b>bumpdate.csh</b></a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
bumpdate.csh<br/>
<small><a href="blksize.htm">Previous</a> |
<a href="c2f.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the date n number days forward or backward from a given date.
#  Copyright (c) 1991-2012 by Hamilton Laboratories.  All rights reserved.

proc bumpdate(bump, month, day, year)
   local d
   @ d = `julian $month $day $year` + bump
   return `caldate $d`
end

bumpdate $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="blksize.htm">Previous</a> |
<a href="c2f.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		c2f.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				c2f.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm"><b>c2f.csh</b></a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
c2f.csh<br/>
<small><a href="bumpdate.htm">Previous</a> |
<a href="caldate.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Convert from Celsius to Fahrenheit.
#  Copyright (c) 1995-2012 by Hamilton Laboratories.  All rights reserved.

proc c2f( c )
   return c*9/5 + 32
end

c2f $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="bumpdate.htm">Previous</a> |
<a href="caldate.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		caldate.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				caldate.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm"><b>caldate.csh</b></a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
caldate.csh<br/>
<small><a href="c2f.htm">Previous</a> |
<a href="calendar.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the calendar date (month, day, year) corresponding to
#  a Julian day number.  (Negative years are B.C.)
#  Based on algorithms published in Computer Language magazine,
#  December, 1990.  Used with permission.

proc caldate(jdate)
   local a, b, c, d, e, z, alpha, month, day, year
   set month = January February March April May June ^
      July August September October November December
   @ z = jdate + 1
   # Cope with the Gregorian calendar reform.
   if (z &lt; 2299161) then
      @ a = z
      # Intercept years B.C.
      if (z &lt; 1721423) @ a -= 366
   else
      @ alpha = (z - 1867216.25)//36524.25
      @ a = z + 1 + alpha - alpha//4
   end
   @ b = a + 1524
   @ c = (b - 122.1)//365.25
   @ d = floor(365.25 * c)
   @ e = (b - d)//30.6001
   @ day = b - d - floor(30.6001 * e)
   @ e -= e &lt; 14 ? 2 : 14
   @ month = month[e]
   if ((year = e &gt; 1 ? c - 4716 : c - 4715) == 0) @ year--
   return "$month $day $year"
end

caldate $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="c2f.htm">Previous</a> |
<a href="calendar.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		calendar.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				calendar.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm"><b>calendar.csh</b></a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
calendar.csh<br/>
<small><a href="caldate.htm">Previous</a> |
<a href="colors.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Print a calendar for the specified month, highlighting today's date.
#  Based on algorithms published in Computer Language magazine,
#  December, 1990.  Used with permission.

proc day(jdate)
   # Calculate the day of the month corresponding to a Julian day number.
   local a, b, c, d, e, z, alpha
   @ z = jdate + 1
   # Cope with the Gregorian calendar reform.
   if (z &lt; 2299161) then
      @ a = z
   else
      @ alpha = (z - 1867216.25)//36524.25
      @ a = z + 1 + alpha - alpha//4
   end
   @ b = a + 1524
   @ c = (b - 122.1)//365.25
   @ d = floor(365.25 * c)
   @ e = (b - d)//30.6001
   return b - d - floor(30.6001 * e)
end

proc dayofweek(jdate)
   return (jdate + 2) % 7
end

proc calendar(month, year)
   # Print a calendar for the specified month
   local b_date, e_date, c_date, day, c_day, c_month, c_year, Month, week
   local m, d, y, i, today
   set Month = January February March April May June ^
      July August September October November December
   set dt = `dt`
   set m = $dt:1
   set d = $dt:2
   set y = $dt:3
   for i = 0 to 11 do
      if (m == substr(Month[i], 1, 3)) break
   end
   @ m = i + 1
   @ today = `julian $m $d $y`
   if (year == '') then
      @ year = y
      if (month == '') @ month = m
   end
   if (month !~ '[0-9]*') then
      @ m = "$lower(month)*"
      for i = 0 to 11 do
         if (lower(Month[i]) =~ m) break
      end
      @ month = i + 1
   end
   # Calculate Julian day numbers for the first and last days of the month
   if ((b_date = julian(month, 1, year)) == -1) return
   @ e_date = (month &lt; 12 ? ^
         julian(month + 1, 1, year) : ^
         julian(1, 1, year == -1 ? 1 : year + 1)) - 1
   echo $Month[month - 1] $year
   @ week = "^r^nSun Mon Tue Wed Thu Fri Sat^r^n"
   # Put the first day of the month under the correct day column
   for i = 0 to day = dayofweek(b_date) - 1 do
      @ week = concat(week, "    ")
   end
   # Print all the days
   @ i = 1
   if (b_date == 2299156) then
      #  In October 1582, the Julian calendar was replaced with the
      #  Gregorian calendar and Oct 4 was immediately followed by Oct 15
      #  by decree of Pope Gregory XIII.  However, be aware that Britain
      #  did not adopt the Gregorian calendar until Sept 2, 1752 (which
      #  was followed by Sept 14.)  This routine prints a calendar according
      #  to Pope Gregory's decree.
      for c_date = b_date to e_date do
         @ week = concat(week, printf("%3d ", i++))
         if (i == 5) @ i = 15
         if (c_date != e_date &amp;&amp; ++day % 7 == 6) @ week = concat(week, "^r^n")
      end
   else
      for c_date = b_date to e_date do
         @ week = (today == c_date) ?           ^
            concat(week, ansi("bright yellow"), ^
               printf("%3d ", i++), ansi()) :   ^
            concat(week, printf("%3d ", i++))
         if (c_date != e_date &amp;&amp; ++day % 7 == 6) @ week = concat(week, "^r^n")
      end
   end
   calc week
   echo
end

calendar $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="caldate.htm">Previous</a> |
<a href="colors.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		colors.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				colors.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm"><b>colors.csh</b></a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
colors.csh<br/>
<small><a href="calendar.htm">Previous</a> |
<a href="decimal.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Customize the screen colors.
#  Copyright (c) 1991-2012 by Hamilton Laboratories.  All rights reserved.

#  This script shows you how to customize the screen colors used by
#  Hamilton C shell and its utilities.  You might just use a script like
#  this for changing your colors, perhaps calling it from your login.csh
#  or you might embed these color settings directly into your login.csh
#  or (after rewriting them as SET statements) into your config.sys.

#  These are the environmental variables controlling screen colors:

#     Name           Use                                  Default

#     ADDITIONS      Lines added found by diff.           Bright White on Green
#     COLORS         Normal screen colors                 White on Blue
#     DELETIONS      Lines deleted found by diff.         Bright White on Red
#     DIRECTORIES    Directories listed by ls.            Bright
#     DUPLICATES     When filename completion matches     Green
#                    more than one name.
#     FOREIGNFILES   Filetypes that have no counterpart   Bright Red
#                    on OS/2.
#     HIGHLIGHT      Current disk or directory.           Bright
#     MATCHFAIL      When filename or command completion  Bright Red
#                    doesn't match anything.
#     MOREEOF        End or Top of File in more.          Green
#     MOREERROR      Unrecognizable command to more.      Bright White on Red
#     MOREFILLIN     User response to more prompt.        Black
#     MOREPROMPT     Prompt line in more.                 Red on White
#     MORETOPMEM     Top of Memory message from more.     Bright Yellow
#     SYSTEMDIRS     Directories with the System bit on.  Bright Green
#     SYSTEMFILES    Files with the System bit on.        Green

#  The colors available in the C shell are black, red, green, yellow, blue,
#  magenta (or blue red), cyan (or blue green) and white.  Foreground colors
#  may also be bright, dim, blink or reverse.  The keyword "on" introduces
#  background colors.  All the names of the colors along with the keywords
#  bright, dim, blink, reverse and on may be in upper, lower or mixed case.
#  The names of the environmental variables must be all in upper case.

#  (Blink causes true blinking only full-screen; in a text window, it
#  just makes the background brighter.)

#  If a foreground or background color is left unspecified, that plane
#  is considered transparent and inherits the color underneath it.

setenv   COLORS         =  white on blue

unsetenv DELETIONS
unsetenv ADDITIONS
unsetenv MOREPROMPT
unsetenv MOREFILLIN
unsetenv MOREERROR
unsetenv MOREEOF
unsetenv DIRECTORIES
unsetenv SYSTEMFILES
unsetenv SYSTEMDIRS
unsetenv HIGHLIGHT
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="calendar.htm">Previous</a> |
<a href="decimal.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		decimal.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				decimal.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm"><b>decimal.csh</b></a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
decimal.csh<br/>
<small><a href="colors.htm">Previous</a> |
<a href="deltaday.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Evaluate a string as a decimal number.
#
#  Overcome the shell's usual interpretation of a string with leading
#  zeroes as an octal number, forcing, e.g., 0170 to evaluate as 170,
#  not 120.

#  Copyright (c) 2001-2012 by Hamilton Laboratories.  All rights reserved.

proc decimal(x)
   local i, j
   for i = 1 to strlen(x) do
      @ j = substr (x, i)
      if (j =~ '[1-9]*' &amp;&amp; isnumber(j)) return j + 0
   end
   return 0
end

decimal $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="colors.htm">Previous</a> |
<a href="deltaday.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		deltaday.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				deltaday.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm"><b>deltaday.csh</b></a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
deltaday.csh<br/>
<small><a href="decimal.htm">Previous</a> |
<a href="deltahrs.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the number of days separating two dates.
#  Copyright (c) 1991-2012 by Hamilton Laboratories.  All rights reserved.

proc deltaday(month2, day2, year2, month1, day1, year1)
   return `julian $month2 $day2 $year2` - julian(month1, day1, year1)
end

deltaday $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="decimal.htm">Previous</a> |
<a href="deltahrs.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		deltahrs.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				deltahrs.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm"><b>deltahrs.csh</b></a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
deltahrs.csh<br/>
<small><a href="deltaday.htm">Previous</a> |
<a href="dirname.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the difference in hours and fractions of an hour between
#  two times, given in hours and minutes.
#  Copyright (c) 2009-2012 by Hamilton Laboratories.  All rights reserved.


proc minutes( t )
   return ( t - floor( t ) ) * 100
end

proc deltahrs( begin, end )
   local delta, hours, mins
   set begin = $begin:S/:/./
   set end = $end:S/:/./
   if ( end &lt; begin ) then
      @ end += 12
   end
   @ hours = floor( end ) - floor( begin )
   @ mins = minutes( end ) - minutes( begin )
   if ( mins &lt; 0 ) then
      @ hours--
      @ mins += 60
   end
   return hours + mins/60
end

deltahrs $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="deltaday.htm">Previous</a> |
<a href="dirname.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dirname.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				dirname.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm"><b>dirname.csh</b></a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dirname.csh<br/>
<small><a href="deltahrs.htm">Previous</a> |
<a href="dumpenv.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Emulate the POSIX dirname command to extract all but the last level
#  of a pathname.

#  Usage:   dirname string

#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.

proc dirname( string )
   if (string != "") then
      local dir, i, j

      @ dir = $string:h
      for i = strlen(dir) by -1 to 1 do
         @ j = substr(dir, i, 1)
         if (j != '/' &amp;&amp; j != '\') break
      end
      if (j == '/' || j == '\') then
         @ dir = '\'
      else
         if (j == ':' &amp;&amp; i == 2) @ dir = concat(substr(dir, 1, 2), '\')
      end

      return dir
   else
      return "."
   end

end

dirname $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="deltahrs.htm">Previous</a> |
<a href="dumpenv.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dumpenv.c
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				dumpenv.c
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm"><b>dumpenv.c</b></a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dumpenv.c<br/>
<small><a href="dirname.htm">Previous</a> |
<a href="duplicat.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*       Dump the current environmentals as setenv statements.             */
/* Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved. */
/*                                                                         */
/*                                                                         */
/***************************************************************************/

#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;

/* This little utility will dump out your environmental variables in a
   form that can be executed in a login.csh file.  It looks for any
   characters that need enclosing single quotes and uses the individual
   escapesym character (assumed to be '^') to escape any that require
   more than just single quotes.

   (escapesym chars, assumed to be '^', are not further quoted; we assume
   if this appears, it's probably meant to be a quote of the next character.)

   When it writes out the PATH variable, it inserts ".;", representing
   the current directory to the start of the string if it's not already
   there.  This is a convenience in converting from cmd.exe's convention
   of always trying the current directory first to csh.exe's of trying
   the current directory only if you specify it.  (You can conditionally
   compile-out this option by #defining TruePATH.)

   */

char chars_needing_quotes[] = "!\n\r'\"` &amp;|;&lt;&gt;()*?{}[]~$";

void cdecl main ( int argc, char *argv[], char *envp[] )
      {
      register char *e;
      int i;
      for (i = 0;  envp[i]; i++)
         {
         for (e = envp[i];  *e &amp;&amp; !strchr(chars_needing_quotes, *e);  e++)
            ;
         if (*e)
            {
            /* Enclose the value in quotes. */
            e = strchr(envp[i], '=');
            *e = '\0';
            printf ("setenv %s='", envp[i]);

#           ifndef TruePATH
               if (strcmp(envp[i], "PATH") == 0 &amp;&amp;
                     (e[1] != '.' || e[2] != ';'))
                  {
                  /* PATH variable doesn't already start with ".;" */
                  putchar('.');
                  putchar(';');
                  }
#           endif

            while (*++e)
               switch (*e)
                  {
                  case '!':
                  case '"':
                  case '\'':
                  case '`':
                     putchar('^');
                     putchar(*e);
                     break;
                  case '\n':
                     putchar('^');
                     putchar('n');
                     break;
                  case '\r':
                     putchar('^');
                     putchar('r');
                     break;
                  default:
                     putchar(*e);
                  }
            fputs("'\n", stdout);
            }
         else
            /* Ignore the possibility of a PATH variable that didn't have at
               least one semicolon. */
            printf ("setenv %s\n", envp[i]);
         }
      exit(0);
      }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dirname.htm">Previous</a> |
<a href="duplicat.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		duplicat.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				duplicat.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm"><b>duplicat.csh</b></a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
duplicat.csh<br/>
<small><a href="dumpenv.htm">Previous</a> |
<a href="e2a.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Look for duplicate files anywhere in a directory tree.

#  Copyright (c) 1990-2012 by Hamilton Laboratories.  All rights reserved.

#  It works by first constructing the list of all the path names, one per line,
#  of everything in the tree using the -r (recursive) option of ls.  The
#  ``...`` part is command substitution to paste the results into the foreach
#  loop, each line of output taken as a single word.  (This way, it works even
#  on filenames containing spaces and special characters.)  The :gt operator
#  means globally edit the list to trim each pathname down to just the tail
#  part; e.g., given "x\y\z.c", the tail is just "z.c".  (There are other
#  pathname editing operators for grabbing just the directory containing,
#  everything except the extension, the fully-qualified name for a relative
#  pathname, etc.)
#  
#  The foreach loop writes each name out to the pipe, one per line.  (I've used
#  a calc statement rather than an echo in case a filename includes special
#  characters.) The sort puts all the lines into alphabetical order and the
#  the uniq -d command gives just the duplicates.

proc duplicat(startdir)
   local i
   foreach i (``ls -1r $startdir``:gt) calc i; end | sort | uniq -d
end

duplicat $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dumpenv.htm">Previous</a> |
<a href="e2a.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		e2a.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				e2a.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm"><b>e2a.csh</b></a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
e2a.csh<br/>
<small><a href="duplicat.htm">Previous</a> |
<a href="easter.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Convert from EBCDIC to ASCII using the tr utility

#  Copyright (c) 1997-2012 by Hamilton Laboratories.  All rights reserved.

tr -- ^
'^x01^x02^x03^x37-^x37^x2d^x2e^x2f^x16^x05^x25^x0b^x0c^x0d^x0e^x0f^x10^x11^x12^x13^x3c^x3d^x32^x26^x18^x19^x3f^x27^x1c^x1d^x1e^x1f^x40^x4f^x7f^x7b^x5b^x6c^x50^x7d^x4d^x5d^x5c^x4e^x6b^x60^x4b^x61^xf0^xf1^xf2^xf3^xf4^xf5^xf6^xf7^xf8^xf9^x7a^x5e^x4c^x7e^x6e^x6f^x7c^xc1^xc2^xc3^xc4^xc5^xc6^xc7^xc8^xc9^xd1^xd2^xd3^xd4^xd5^xd6^xd7^xd8^xd9^xe2^xe3^xe4^xe5^xe6^xe7^xe8^xe9^x4a^xe0^x5a^x5f^x6d^x79^x81^x82^x83^x84^x85^x86^x87^x88^x89^x91^x92^x93^x94^x95^x96^x97^x98^x99^xa2^xa3^xa4^xa5^xa6^xa7^xa8^xa9^xc0^x6a^xd0^xa1^x07^x20^x21^x22^x23^x24^x15^x06^x17^x28^x29^x2a^x2b^x2c^x09^x0a^x1b^x30^x31^x1a^x33^x34^x35^x36^x08^x38^x39^x3a^x3b^x04^x14^x3e^xe1^x41^x42^x43^x44^x45^x46^x47^x48^x49^x51^x52^x53^x54^x55^x56^x57^x58^x59^x62^x63^x64^x65^x66^x67^x68^x69^x70^x71^x72^x73^x74^x75^x76^x77^x78^x80^x8a^x8b^x8c^x8d^x8e^x8f^x90^x9a^x9b^x9c^x9d^x9e^x9f^xa0^xaa^xab^xac^xad^xae^xaf^xb0^xb1^xb2^xb3^xb4^xb5^xb6^xb7^xb8^xb9^xba^xbb^xbc^xbd^xbe^xbf^xca^xcb^xcc^xcd^xce^xcf^xda^xdb^xdc^xdd^xde^xdf^xea^xeb^xec^xed^xee^xef^xfa^xfb^xfc^xfd^xfe^xff' ^
'^x01-^xff'
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="duplicat.htm">Previous</a> |
<a href="easter.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		easter.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				easter.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm"><b>easter.csh</b></a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
easter.csh<br/>
<small><a href="e2a.htm">Previous</a> |
<a href="f2c.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate when Easter will occur in any given year.
#  Copyright (c) 1991-2012 by Hamilton Laboratories.  All rights reserved.

proc easter (year)
   local a, b, c, d, e, f, g, h, i, k, l, m, n, month, day
   set month = January February March April May June ^
      July August September October November December
   if (year == "") @ year = `date`:3
   if (year &gt;= 1583) then
      # Gregorian calendar
      @ a = year % 19;  @ b = year // 100;  @ c = year % 100
      @ d = b // 4;  @ e = b % 4;  @ f = (b + 8) // 25
      @ g = (b - f + 1) // 3
      @ h = (19 * a + b - d - g + 15) % 30
      @ i = c // 4;  @ k = c % 4
      @ l = (32 + 2 * e + 2 * i - h - k) % 7
      @ m = (a + 11 * h + 22 * l) // 451
      @ n = h + l - 7 * m + 114
      @ month = month[n // 31 - 1]
      @ day = n % 31 + 1
   else
      # Julian calendar
      @ a = year % 4;  @ b = year % 7;  @ c = year % 19;  
      @ d = (19 * c + 15) % 30
      @ e = (2 * a + 4 * b - d + 34) % 7
      @ f = d + e + 114
      @ month = month[f // 31 - 1]
      @ day = f % 31 + 1
   end
   return "$month $day $year"
end

easter $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="e2a.htm">Previous</a> |
<a href="f2c.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		f2c.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				f2c.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm"><b>f2c.csh</b></a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
f2c.csh<br/>
<small><a href="easter.htm">Previous</a> |
<a href="factor.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Convert from Fahrenheit to Celsius.
#  Copyright (c) 1995-2012 by Hamilton Laboratories.  All rights reserved.

proc f2c( f )
   return (f - 32)*5/9
end

f2c $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="easter.htm">Previous</a> |
<a href="factor.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		factor.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				factor.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm"><b>factor.csh</b></a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
factor.csh<br/>
<small><a href="f2c.htm">Previous</a> |
<a href="finance.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the prime factors of an integer.
#  Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved.
      
proc factor(n)
   if (n &gt; 3) then
      for i = 2 to floor(sqrt(n)) do
         if (n % i == 0) then
            echo $i
            return factor(n//i)
         end
      end
   end
   return n
end

factor $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="f2c.htm">Previous</a> |
<a href="finance.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		finance.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				finance.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm"><b>finance.csh</b></a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
finance.csh<br/>
<small><a href="factor.htm">Previous</a> |
<a href="findinclude.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate various financial factors related to the "time value of money".
#  Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved.

proc PV_FutureAmount(i, n)
   #  Calculate the multiplier to convert $1 in period n to a
   #     present value, given interest rate i% per period.
   return 1/(1 + i/100)**n
end

proc FV_PresentAmount(i, n)
   #  Calculate the multiplier to convert $1 now to a
   #     future value, given an interest rate i% per period.
   return (1 + i/100)**n
end

proc PV_Annuity(i, n)
   #  Calculate the multiplier to convert $1 paid each period for n periods
   #     to a present value, given an interest rate i% per period.
   local j
   @ i /= 100
   @ j = (1 + i)**n
   return (j - 1)/(i*j)
end

proc Annuity_PV(i, n)
   #  Calculate the multiplier to convert $1 in present value into an amount
   #     paid each period for n periods, given an interest i% per period.
   local j
   @ i /= 100
   @ j = (1 + i)**n
   return (i*j)/(j - 1)
end

proc FV_Annuity(i, n)
   #  Calculate the multiplier to convert $1 paid each period for n periods
   #     to a future value, given an interest rate i% per period.
   @ i /= 100
   return ((1 + i)**n - 1)/i
end

proc Annuity_FV(i, n)
   #  Calculate the multiplier to convert $1 in future value into an amount
   #     paid each period for n periods, given an interest rate i% per period.
   @ i /= 100
   return i/((1 + i)**n - 1)
end

proc Periods_PV(i, PV)
   #  Calculate the multipler to convert an annuity of $1 paid each period,
   #     given present value and interest rate, to a number of periods.
   @ i /= 100
   return ceil(-(log(1/i - PV) + log(i))/log(i + 1))
end

proc Periods_FV(i, FV)
   #  Calculate the multipler to convert an annuity of $1 paid each period,
   #     given future value and interest rate, to a number of periods.
   @ i /= 100;
   return ceil(log(i*FV + 1)/log(i + 1))
end
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="factor.htm">Previous</a> |
<a href="findinclude.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		findinclude.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				findinclude.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm"><b>findinclude.csh</b></a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
findinclude.csh<br/>
<small><a href="finance.htm">Previous</a> |
<a href="fixup.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Search the INCLUDE directories for the specified header file.

#  For example:
#
#     9 C% findinclude.csh winnt.h
#     C:\Program Files\Microsoft SDKs\Windows\v6.0A\include\winnt.h

#  Copyright (c) 2011-2012 by Hamilton Laboratories.  All rights reserved.

proc findinclude( includefile )

   #  Split the raw INCLUDE variable into a list of directories,
   #  one per line using splitstring, then iterate over the
   #  list using `` ... `` to read whole lines as words.

   foreach i ( ``splitstring $INCLUDE ";"`` )

      #  Check to see if the desired header file exists in
      #  this INCLUDE directory.

      if ( -e $i\$includefile ) echo $i\$includefile

   end
end

@ findinclude( argv )
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="finance.htm">Previous</a> |
<a href="fixup.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		fixup.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				fixup.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm"><b>fixup.csh</b></a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
fixup.csh<br/>
<small><a href="findinclude.htm">Previous</a> |
<a href="internat.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Fixup source files to discard any extraneous tabs or spaces at the
#  end of the lines, to ensure that all lines end properly with \r\n
#  and to ensure that timestamp can be represented exactly on a FAT
#  or HPFS partition.

#  Copyright (c) 1994-2012 by Hamilton Laboratories.  All rights reserved.

proc fixup( files )
   local i, ts, tf
   foreach i ($files)
      if (-e $i) then
         set ts = `timestmp $i`
         #  Construct a temporary name by pasting the seconds+hundredths
         #  onto the root of the file.
         set tf = $i:r.$substr(`date`:4,8):s/.//
         tr -n &lt; $i | sed 's/^[  ][    ]*$//' &gt; $tf
         touch -2 $ts $tf
         mv $tf $i
      else
         echo $i does not exist.
      end
   end
end

fixup $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="findinclude.htm">Previous</a> |
<a href="internat.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		internat.h
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				internat.h
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
internat.h<br/>
<small><a href="fixup.htm">Previous</a> |
<a href="julian.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/* Internationalize on NT, translating the argv array into the
   current OEM code page used by the console. */

#ifdef   _WIN32
#  include  &lt;windows.h&gt;
#  define   ASCII_CodePage          437
#  define   Internationalize()      if (GetOEMCP() != ASCII_CodePage)   \
                                       {                                \
                                       register int i;                  \
                                       for (i = 0;  i &lt; argc;  i++)     \
                                          CharToOem(argv[i], argv[i]);  \
                                       }
#else
#  define   Internationalize()
#endif
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="fixup.htm">Previous</a> |
<a href="julian.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		julian.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				julian.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm"><b>julian.csh</b></a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
julian.csh<br/>
<small><a href="internat.htm">Previous</a> |
<a href="laptop.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the Julian day number for the specified date.
#  Based on algorithms published in Computer Language magazine,
#  December, 1990.  Used with permission.

proc julian(month, day, year)
   # The Julian day number is the number of days between noon GMT
   # Jan 1, 4713 BC and that date.  (Years B.C. are negative.)
   local a, b, year_corr, Month, i
   set Month = January February March April May June ^
      July August September October November December
   if (year == '') then
      local dt
      set dt = `dt`
      @ year = $dt:3
      if (day == '') then
         @ day = month == '' ? $dt:2 : month
         @ month = $dt:1
      end
   end
   if (month !~ '[0-9]*') then
      @ month = "$lower(month)*"
      for i = 0 to 11 do
         if (lower(Month[i]) =~ month) break
      end
      @ month = i + 1
   end
   if (month &lt; 1 || month &gt; 12 || year &lt; -4713 || year &gt; 2900) then
      echo -2 julian: Invalid Date
      return -1
   end
   # Correct for negative year.
   if (year &lt; 0) then
      @ year++
      @ year_corr = 1
      @ b = 1
   else
      @ year_corr = b = 0
   end
   if (month &lt;= 2) then
      @ year--
      @ month += 12
   end
   # Cope with the Gregorian calendar reform
   if (year * 10000 + month * 100 + day &gt; 15821015) then
      @ a = year//100
      @ b = 2 - a + a//4
   end
   @ a = floor(365.25 * year - year_corr) + ^
      floor(30.6001 * (month + 1)) + day + 1720994 + b
   # 4713 BC was not a leap year.
   if (a &lt; 59) @ a++
   return a
end

julian $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="internat.htm">Previous</a> |
<a href="laptop.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		laptop.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				laptop.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm"><b>laptop.csh</b></a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
laptop.csh<br/>
<small><a href="julian.htm">Previous</a> |
<a href="makecpgm.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Customize the screen colors for a laptop computer.
#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.


#  Ordinary (non-bright) colors tend to look pretty washed out on the
#  color LCD panels used on most laptops and in most projection systems.
#  These color settings will likely look better.


setenv   COLORS         =  bright white on blue
setenv   DELETIONS      =  bright white on red
setenv   ADDITIONS      =  bright white on green
setenv   MOREPROMPT     =  bright green
setenv   MOREFILLIN     =  bright yellow
setenv   MOREERROR      =  bright white on red
setenv   MOREEOF        =  bright yellow
setenv   DIRECTORIES    =  bright yellow
setenv   SYSTEMFILES    =  bright green
setenv   SYSTEMDIRS     =  bright cyan
setenv   HIGHLIGHT      =  bright yellow
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="julian.htm">Previous</a> |
<a href="makecpgm.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		makecpgm.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				makecpgm.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm"><b>makecpgm.csh</b></a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
makecpgm.csh<br/>
<small><a href="laptop.htm">Previous</a> |
<a href="max.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  "Make" the c programs in this directory.
#  Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved.
      
# Just discard any wildcards that don't produce matches.
set nonomatch = 2

proc make(cfile)

   # make (i.e., recompile) a given .c file if
   #   a) there's no corresponding .exe, or
   #   b) the .exe is older than the .c file or any of the .h headers (if
   #      there are any).

   set root = $cfile:r
   if (! -e $root.exe || ! `newer $root.exe $i *.h`) then
      cl -debug:none -Dcdecl= $cfile user32.lib
      rm $root.obj
   end
end

foreach i (*.c)
   make $i
end
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="laptop.htm">Previous</a> |
<a href="max.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		max.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				max.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm"><b>max.csh</b></a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
max.csh<br/>
<small><a href="makecpgm.htm">Previous</a> |
<a href="mcvisa.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Find the maximum numeric value out of a list.  If none of the elements
#  are numeric, return 0.

#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.

proc max( values )
   local i, j
   @ j = 0
   if ($#values) then
      for i = 0 to $#values - 1 do
         if (isnumber(values[i])) then
            @ j = values[i]
            break
         end
      end
      for i = i + 1 to $#values - 1 do
         if (isnumber(values[i]) &amp;&amp; values[i] &gt; j) @ j = values[i]
      end
   end
   return j
end

max $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="makecpgm.htm">Previous</a> |
<a href="mcvisa.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		mcvisa.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				mcvisa.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm"><b>mcvisa.csh</b></a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
mcvisa.csh<br/>
<small><a href="max.htm">Previous</a> |
<a href="member.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  This is a self-loading procedure that can tell whether a MasterCard
#  or Visa credit card number is plausible by constructing a special
#  checksum of the digits.   The checksum used for credit cards is
#  designed to catch transposed or incorrect digits.  For fun, try it
#  on the cards in your wallet!

#  Copyright (c) 1990-2012 by Hamilton Laboratories.  All rights reserved.

proc mcvisa(card)
   local i, j, sum
   @ sum = 0
   # reverse the digits and discard any spaces.
   @ card = reverse(card)
   if (card =~ "* *") @ card = $card:gs/ //
   if (card =~ "*[^0-9]*") return "bad"
   for i = 1 to strlen(card) do
      @ j = substr(card, i, 1)
      if (i % 2 == 0) then
         @ j *= 2
         if (j &gt;= 10) @ j -= 9;
      end
      @ sum += j
   end
   return sum % 10 == 0 ? "good" : "bad"
end

mcvisa $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="max.htm">Previous</a> |
<a href="member.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		member.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				member.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm"><b>member.csh</b></a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
member.csh<br/>
<small><a href="mcvisa.htm">Previous</a> |
<a href="memberi.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Determine if first argument word appears somewhere in the list given
#  by the second argument.

#  Copyright (c) 1994-2012 by Hamilton Laboratories.  All rights reserved.
      
proc member ( a, b )
   local i
   foreach i ($b)
      if (a == i) return 1
   end
   return 0
end

member $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="mcvisa.htm">Previous</a> |
<a href="memberi.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		memberi.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				memberi.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm"><b>memberi.csh</b></a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
memberi.csh<br/>
<small><a href="member.htm">Previous</a> |
<a href="min.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Determine by case-insensitive comparison if the first argument word
#  appears somewhere in the list given by the second argument.

#  Copyright (c) 1994-2012 by Hamilton Laboratories.  All rights reserved.
      
proc memberi ( a, b )
   local i
   @ a = lower( a )
   foreach i ( $b )
      if ( a == lower( i ) ) return 1
   end
   return 0
end

memberi $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="member.htm">Previous</a> |
<a href="min.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		min.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				min.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm"><b>min.csh</b></a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
min.csh<br/>
<small><a href="memberi.htm">Previous</a> |
<a href="myecho.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Find the minimum numeric value out of a list.  If none of the elements
#  are numeric, return 0.

#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.

proc min( values )
   local i, j
   @ j = 0
   if ($#values) then
      for i = 0 to $#values - 1 do
         if (isnumber(values[i])) then
            @ j = values[i]
            break
         end
      end
      for i = i + 1 to $#values - 1 do
         if (isnumber(values[i]) &amp;&amp; values[i] &lt; j) @ j = values[i]
      end
   end
   return j
end

min $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="memberi.htm">Previous</a> |
<a href="myecho.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		myecho.c
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				myecho.c
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm"><b>myecho.c</b></a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
myecho.c<br/>
<small><a href="min.htm">Previous</a> |
<a href="newfiles.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*       A variant of echo that prints quotes around each argument.        */
/* Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved. */
/*                                                                         */
/*                                                                         */
/***************************************************************************/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include "<a href="internat.htm">internat.h</a>"

void cdecl main ( int argc, char *argv[] )
      {
      int i, length = 0;
      Internationalize();
      for (i = 0;  i &lt; argc - 1; i++)
         {
         length += strlen(argv[i]) + 1;
         printf ("'%s' ", argv[i]);
         }
      length += strlen(argv[i]) + 1;
      printf("'%s'\n", argv[i]);
      printf("arg length = %d characters\n", length);
      exit(0);
      }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="min.htm">Previous</a> |
<a href="newfiles.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		newfiles.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				newfiles.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm"><b>newfiles.csh</b></a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
newfiles.csh<br/>
<small><a href="myecho.htm">Previous</a> |
<a href="percentchg.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  List all the files or directories in the current directory that
#  do not occur in the specified directory.

#  Copyright (c) 1990-2012 by Hamilton Laboratories.  All rights reserved.


proc newfiles(olddir)
   local i
   if ( $#olddir == 0 ) @ olddir = "."
   foreach i (*)
      if (! -e $olddir\$i) calc i
   end
end

newfiles $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="myecho.htm">Previous</a> |
<a href="percentchg.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		percentchg.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				percentchg.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm"><b>percentchg.csh</b></a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
percentchg.csh<br/>
<small><a href="newfiles.htm">Previous</a> |
<a href="postage.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the percentage change between an old value and a new value
#  Copyright (c) 2008-2012 by Hamilton Laboratories.  All rights reserved.

proc percentchg( oldvalue, newvalue )
   if (oldvalue == 0) then
      echo -2 percentchg:  The old value cannot be 0
      @ status = 1
   else
      return 100 * (newvalue - oldvalue)/oldvalue
   end
end

percentchg $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="newfiles.htm">Previous</a> |
<a href="postage.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		postage.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				postage.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm"><b>postage.csh</b></a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
postage.csh<br/>
<small><a href="percentchg.htm">Previous</a> |
<a href="posxpath.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate U.S. first class postage required for a given weight in ounces.
#  Copyright (c) 1991-2012 by Hamilton Laboratories.  All rights reserved.

#  Reflects rates effective January 22, 2012

proc postage(ounces)
   #  Current rate is 45 cents for the first ounce + 20 cents for
   #  each additional ounce or fraction thereof, up to 3.5 ounces.
   #  Over 3.5 ounces, large envelope rates apply, and the rate is
   #  $1.50 for 4 ounces + 20 cents for each additional ounce.

   local cost, nextOunce
   @ nextOunce = ceil(ounces)
   if ( ounces &lt;= 3.5 ) then
      @ cost = .45 + (nextOunce - 1)*.20
   else
      @ cost = 1.5 + (nextOunce - 4)*.20
   end
   return printf('$%.2f', cost)
end

postage $argv

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="percentchg.htm">Previous</a> |
<a href="posxpath.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		posxpath.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				posxpath.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm"><b>posxpath.csh</b></a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
posxpath.csh<br/>
<small><a href="postage.htm">Previous</a> |
<a href="rcode.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Convert an ordinary DOS-style pathname into POSIX format:

#     1. Set it into correct mixed case since POSIX is case-
#        sensitive.
#     2. If there's an explicit drive letter, be sure the name
#        is a fullpath since there's no way to refer to the
#        current directory on anything but the current drive
#        under POSIX rules.
#     3. Change any from \'s to /'s.
#     4. Convert any drive specification from the usual c: format
#        to the POSIX //C/ format.

#  This routine is particularly useful for creating C shell script
#  "wrappers" around POSIX applications such as those on the Microsoft
#  NT Resource Kit CD to convert filename arguments to POSIX format
#  before the applications are invoked.

#  Note:  This procedure does not work on UNC (network) names because
#  there is no way to convert a UNC name.

#  Copyright (c) 1994-2012 by Hamilton Laboratories.  All rights reserved.

proc posxpath( file )
   if (file != "") then
      if (file =~ "?:*") then
         if (file == substr(file, 3, 1) != "/") @ file = fullpath(file)
         set file = $file:m:gSx\x/x
         @ file = "//$upper(substr(file, 1, 1))/$substr(file, 4)"
      else
         set file = $file:m:gSx\x/x
      end
   else
      @ file = "."
   end
   return $file
end

posxpath $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="postage.htm">Previous</a> |
<a href="rcode.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		rcode.c
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				rcode.c
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm"><b>rcode.c</b></a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
rcode.c<br/>
<small><a href="posxpath.htm">Previous</a> |
<a href="read.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*             Print &amp; exit with the specified return code.                */
/* Copyright (c) 1989-2012 by Hamilton Laboratories.  All rights reserved. */
/*                                                                         */
/*                                                                         */
/***************************************************************************/

#include &lt;windows.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

void cdecl main ( int argc, char *argv[] )
      {
      unsigned return_code = 0;
      if (argc &gt; 1)
         printf("%d\n", return_code = atoi(argv[1]));
      else
         printf("0\n");
      fflush( stdout );
      ExitProcess(return_code);
      }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="posxpath.htm">Previous</a> |
<a href="read.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		read.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				read.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm"><b>read.csh</b></a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
read.csh<br/>
<small><a href="rcode.htm">Previous</a> |
<a href="renet.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Emulate the Bourne Shell's read command, which reads a line of
#  input, breaking it up into words, which are then assigned, one-by-
#  one, to the variables whose names are passed as arguments.  If no
#  variable name is specified, the input line is read but discarded.
#  The # status code is set to 0 if successful or non-zero if end-of-
#  file was encountered.

#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.


proc read( Rvariables )
   local input, Ri, nR, ni
   @ nR = $#Rvariables - 1
   set input = $getline:x
   @ ni = $#input - 1
   if (!eofgetline) then
      if (nR == 0) then
         eval @ $Rvariables = input
      else
         if (nR &gt; 0 ) then
            if (nR &lt; ni) then
               for Ri = 0 to nR do
                  eval "@ $Rvariables[Ri] = input[Ri]"
               end
               for Ri = nR + 1 to ni do
                  eval "@ $Rvariables[nR][Ri - nR] = input[Ri]"
               end
            else
               for Ri = 0 to ni do
                  eval "@ $Rvariables[Ri] = input[Ri]"
               end
               for Ri = ni + 1 to nR do
                  eval set $Rvariables[Ri] =
               end
            end
         end
      end
      @ status = 0
   else
      for Ri = 0 to $#Rvariables - 1 do
         eval set $Rvariables[Ri] =
      end
      @ status = 38        # ERROR_HANDLE_EOF
   end
end

read $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="rcode.htm">Previous</a> |
<a href="renet.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		renet.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				renet.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm"><b>renet.csh</b></a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
renet.csh<br/>
<small><a href="read.htm">Previous</a> |
<a href="sh2csh.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Attempt to reconnect any any unavailable network connections.

#  Copyright (c) 1995-2012 by Hamilton Laboratories.  All rights reserved.

local i
foreach i ( ``net use`` )
   set i = $i:x
   if (i[0] == "Unavailable") then
      #  Tell which connection is being restored in bright green.
      echo "$ansi('bright green')Restoring $i[1] to $i[2]$ansi()"
      #  Try the net use, discarding any blank lines.
      net use $i:1-2 |&amp; sed -- '/^^$/d'
   end
end
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="read.htm">Previous</a> |
<a href="sh2csh.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		case.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				case.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm"><b>case.sed</b></a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
case.sed<br/>
<small><a href="proc.htm">Previous</a> |
<a href="loop.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Fixup case statements.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#     case word in            switch (word)
#        a)                      case "a":
#           :                       :
#           ;;                      break
#        b|c)        --&gt;         case "b":
#           :                    case "c":
#                                   :
#           break                   FixBreak  &lt;-- Hand-Fixup required
#        *)                      default:
#           :                       :
#     esac                    end

/^[   ]*case/,/^[ ]*esac/{
   s/case[  ][    ]*\([^   ].*\)[   ][    ]*in/switch (\1)/
   /^[^(]*)/{
      s/\([    ]*\)\([^)]*\))/\1case "\2":
\1   /
   :case
      /".*|.*"/{
         s/\([    ]*\)\(case "[^|]*\)|\(.*":\)/\1\2":
\1case "\3/
         b case
         }
      }
   s/case "\*":/default:/
   s/break/FixBreak/
   /;;/s/^\([  ]*\)\([^    ].*\);;/\1\2
\1break/
   /;;/s/;;/break/
   s/esac/end/
   }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="proc.htm">Previous</a> |
<a href="loop.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		expr.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				expr.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm"><b>expr.sed</b></a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
expr.sed<br/>
<small><span class="grey">Previous |</span>
<a href="if.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  First-pass fixup of expressions.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.


#     1. Convert test statements:

#           test              --&gt;      @ status = 1
#           test x            --&gt;      @ status = [ x ] == ""
#           test ...          --&gt;      @ status = [ ... ] != 0
#           ... test          --&gt;      1
#           ... test a        --&gt;      ... [ a != "" ]
#           ... test ...      --&gt;      ... [ ... ]

#     2. Fixup expression operators and syntax:

#           string            --&gt;      "string"
#           -n foo            --&gt;      foo != ""
#           -z foo            --&gt;      foo == ""
#           a = b             --&gt;      a == b
#           a -eq b           --&gt;      a == b
#           a -gt b           --&gt;      a &gt; b
#           a -ge b           --&gt;      a &gt;= b
#           a -lt b           --&gt;      a &lt; b
#           a -le b           --&gt;      a &lt;= b
#           a -ne b           --&gt;      a != b
#           a -o b            --&gt;      a || b
#           a -a b            --&gt;      a &amp;&amp; b

#           [ ... ]           --&gt;      ( ... )

#     3. Do `expr ...` evaluation in the C shell:

#           i=`expr ${i} + 1` --&gt;      @ i=i + 1

#     4. PATH=a:b:c           --&gt;      PATH="a;b;c"

#     5. Assignments become set statements.


/^[   ]*test/{
   s/^\([   ]*\)test[   ]*$/\1@ status = 1/
   s/^\([   ]*\)test[   ][    ]*\([^   ][^   ]*\)$/\1@ status = [ \2 ] == ""/
   s/^\([   ]*\)test[   ][    ]*\([^   ].*\)$/\1@ status = [ \2 ] != 0/
   }

/^[^#]*[    ]test/{
   s/\([    ]\)test[    ]*$/\11/
   s/\([    ]\)test[    ][    ]*\([^   ][^   ]*\)$/\1[ \2 != "" ]/
   s/\([    ]\)test[    ][    ]*\([^   ].*\)$/\1[ \2 ]/
   }

/^[^#]* \[[^[].*\]/{
   s/\(\[.*[   ]\)\([a-zA-Z_][a-zA-Z_0-9]*\)/\1"\2"/g
   s/-n[    ]*\([^ ].*\) \]/\1 != "" ]/g
   s/-z[    ]*\([^ ].*\) \]/\1 == "" ]/g
   s/[   ]*=[  ]*/ == /g
   s/[   ]*-eq[   ]*/ == /g
   s/[   ]*-gt[   ]*/ &gt; /g
   s/[   ]*-ge[   ]*/ &gt;= /g
   s/[   ]*-lt[   ]*/ &lt; /g
   s/[   ]*-le[   ]*/ &lt;= /g
   s/[   ]*-ne[   ]*/ != /g
   s/[   ]*-o[    ]*/ || /g
   s/[   ]*-a[    ]*/ \&amp;\&amp; /g
   s/\[/(/
   s/]/)/
   }

/^[^#]*=`expr.*`/{
   s/`//g
   s/expr //
   /: "\.\*"/s/\([^  =][^  ]*\)[    ]*: "\.\*"/strlen(\1)/
   /^[   ]*[a-zA-Z][a-zA-Z0-9_]*[   ]*=/s/[a-zA-Z]/@ &amp;/
   }

/^[   ]*PATH=[^"]/{
   s/:/;/g
   s/=\(.*\)/="\1"/
   }
/^[   ]*[a-zA-Z][a-zA-Z0-9_]*[   ]*=/s/[a-zA-Z]/set &amp;/
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><span class="grey">Previous |</span>
<a href="if.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		expr2.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				expr2.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm"><b>expr2.sed</b></a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
expr2.sed<br/>
<small><a href="misc.htm">Previous</a> |
<a href="quotes.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Second-pass expression fixups.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#     Optimize expressions (for performance, not functionality) by
#     removing superfluous quoting and curly braces:

#     1. Inside ( ... ) expressions:

#           "${foo}"    --&gt;   foo
#           "$foo"      --&gt;   foo
#           "123"       --&gt;   123

#     2. In @ (assignment statements):

#           ${foo}      --&gt;   foo
#           $foo        --&gt;   foo

#     3. Fixup earlier fixups that were looking for the end of a wordlist:

#           A[0] != ""  --&gt;      A != ""

#     4. Fixup any assignments not already rewritten:

#           foo=...     --&gt;      set foo=...

/^[^#]* (.*)/{
   s/"\${\([^}]*\)}"/\1/g
   s/"\$\([^"]*\)"/\1/g
   s/"\([1-9][0-9]*\)"/\1/g
   s/"0"/0/g
   }

/^[^#]*@ /{
   s/\${\([^}]*\)}/\1/g
   s/\$\([a-zA-Z0-9_]*\)/\1/g
   }

s/\[0\] != ""/ != ""/

/^[   ]*PATH=[^"]/{
   s/:/;/g
   s/=\(.*\)/="\1"/
   }
/^[   ]*[a-zA-Z][a-zA-Z0-9_]*[   ]*=/s/[a-zA-Z]/set &amp;/
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="misc.htm">Previous</a> |
<a href="quotes.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		if.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				if.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm"><b>if.sed</b></a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
if.sed<br/>
<small><a href="expr.htm">Previous</a> |
<a href="proc.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Fixup if statements.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#     if [ expr ]             if ( expr ) then
#     then              --&gt;
#        :                       :
#     fi                      end

/^[   ]*then[  ]*$/d
/^[   ]*if[[(  ].*;[    ]*"\{,1\}then"\{,1\}/s/[   ]*;[  ]*"\{,1\}then"\{,1\}//
/^[   ]*if/s/[[(]\(.*\)[])]$/(\1) then/
/^[   ]*fi[    ]*$/s/fi/end/}
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="expr.htm">Previous</a> |
<a href="proc.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		loop.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				loop.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm"><b>loop.sed</b></a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
loop.sed<br/>
<small><a href="case.htm">Previous</a> |
<a href="misc.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Fixup for, while and until statements.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#     for i in wordlist          foreach i ( wordlist )
#     do                   --&gt;
#        :                          :
#     done                       end

#     while list                 while ({ list })
#     do                   --&gt;
#        :                          :
#     done                       end

#     until list                 while (! { list })
#     do                   --&gt;
#        :                          :
#     done                       end

/^[   ]*for.*;[   ]*"\{,1\}do"\{,1\}$/s/[    ]*;[  ]*"\{,1\}do"\{,1\}$//
/^[   ]*while.*;[    ]*"\{,1\}do"\{,1\}$/s/[    ]*;[  ]*"\{,1\}do"\{,1\}$//
/^[   ]*until.*;[    ]*"\{,1\}do"\{,1\}$/s/[    ]*;[  ]*"\{,1\}do"\{,1\}$//
/^[   ]*for/s/for[   ]*\([^   ][^   ]*\)[    ]*in[    ]*\([^   ].*\)$/foreach \1 (\2)/
/^[   ]*while/s/while[  ]*\([^(  ].*\)$/while ({ \1 })/
/^[   ]*until/s/until[  ]*\([^(  ].*\)$/while (! { \1 })/
/^[   ]*do$/d
/^[   ]*done/s/done/end/
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="case.htm">Previous</a> |
<a href="misc.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		misc.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				misc.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm"><b>misc.sed</b></a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
misc.sed<br/>
<small><a href="loop.htm">Previous</a> |
<a href="expr2.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Miscellaneous fixups.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#     1. The # beginning a comment must be followed by white space.
#        Special case #=== lines to delete one =.

#     2. /dev/null (Unix)     --&gt;   nul (OS/2 or NT)

#     3. $? (sh status)       --&gt;   $status (csh status)

#     4. $! (sh last child)   --&gt;   $child (csh last child)

#     5. $0                   --&gt;   $scriptname

#     6. $1 thru $9           --&gt;   $0 thru $8

#     7. kill -9 pid          --&gt;   kill ppid

#     8. Escape any :'s following a variable reference.

#     9. Fixup any : null statements as ; statements and any : statements
#        as tests in a while.

#     10. Fixup any if's without then's and any fi's that might have
#        sneaked thru during case fixups.

#     11. Fixup any pipes that continue to the next line by escaping
#        the line ends.

#     12. let                --&gt;    @

/#[^  ]/{
   s/#=/#/
   s/#/# /
   }
/# $/s/ $//

s/\/dev\/null/nul/

/^[^#']*\$\?/s/\$\?/$status/g

/^[^#']*\$\!/s/\$\!/$child/g

/^[^#']*\$0/s/\$0/$scriptname/g

/^[^#']*\$1/s/\$1/$0/g
/^[^#']*\$2/s/\$2/$1/g
/^[^#']*\$3/s/\$3/$2/g
/^[^#']*\$4/s/\$4/$3/g
/^[^#']*\$5/s/\$5/$4/g
/^[^#']*\$6/s/\$6/$5/g
/^[^#']*\$7/s/\$7/$6/g
/^[^#']*\$8/s/\$8/$7/g
/^[^#']*\$9/s/\$9/$8/g

/^[   ]*kill -9 \$/s/-9 /p/

/^[^#']*\${[^}]*}:/s/\(\${[^}]*}\):/\1\\:/
/^[^#']*\$[a-zA-Z][a-zA-Z0-9_]*:/s/\(\$[a-zA-Z][a-zA-Z0-9_]*\):/\1\\:/

/^[   ]*while[    ]*:$/s/:/( 1 )/

/^[^#"']*:/{
   /case/ ! {
      /default/ ! s/:/;/
      }
   }

/^[   ]*fi[    ]*$/s/fi/end/
/^[   ]*if/{
   /then$/ ! s/$/ then/
   }

/^[^#].*|$/s/$/ ^/

/^[   ]*let[   ]/s/let/@/
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="loop.htm">Previous</a> |
<a href="expr2.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		proc.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				proc.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm"><b>proc.sed</b></a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm">quotes.sed</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
proc.sed<br/>
<small><a href="if.htm">Previous</a> |
<a href="case.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Fixup procedure definitions.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#     1. foo() {     --&gt;   proc foo(A)
#        }                 end

#     2. argv holds arguments passed to a .csh script; formal arguments
#        to a C shell procedure are declared, requiring this change
#        (but not inside a comment or quoted string):

#           $1 thru $9  --&gt;   $A[0] thru $A[8]

#        (Note that Hamilton C shell interprets all subscripts as starting
#        at zero.  Also, argv[0] to a shell script is the first argument,
#        not the scriptname unless bsdargv == 1; the name of the script
#        is found in the $scriptname variable.)

#     3. shift       --&gt;   shift A

/^[^#].*()/,/^[   ]*}/{
   /()/s/\([^a-zA-Z]*\)\([a-zA-Z][a-zA-Z0-9_]*\).*/\1proc \2(A)/
   s/^\([^'#]*\)\$1/\1\$A[0]/g
   s/^\([^'#]*\)\$2/\1\$A[1]/g
   s/^\([^'#]*\)\$3/\1\$A[2]/g
   s/^\([^'#]*\)\$4/\1\$A[3]/g
   s/^\([^'#]*\)\$5/\1\$A[4]/g
   s/^\([^'#]*\)\$6/\1\$A[5]/g
   s/^\([^'#]*\)\$7/\1\$A[6]/g
   s/^\([^'#]*\)\$8/\1\$A[7]/g
   s/^\([^'#]*\)\$9/\1\$A[8]/g
   s/^\([^'#]*\)\${1}/\1\${A[0]}/g
   s/^\([^'#]*\)\${2}/\1\${A[1]}/g
   s/^\([^'#]*\)\${3}/\1\${A[2]}/g
   s/^\([^'#]*\)\${4}/\1\${A[3]}/g
   s/^\([^'#]*\)\${5}/\1\${A[4]}/g
   s/^\([^'#]*\)\${6}/\1\${A[5]}/g
   s/^\([^'#]*\)\${7}/\1\${A[6]}/g
   s/^\([^'#]*\)\${8}/\1\${A[7]}/g
   s/^\([^'#]*\)\${9}/\1\${A[8]}/g
   s/shift/shift A/g
   /^[   ]*}/s/}/end/
   }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="if.htm">Previous</a> |
<a href="case.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		quotes.sed
	</title>
	
	<link href="../../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../../index.htm">User guide</a> &#9655;
				<a href="../../53-Samples.htm">Samples</a> &#9655;
				<a href="../sh2csh.htm">sh2csh.csh</a>
			</h4>
			<h2>
				quotes.sed
			</h2>
			<a href="../../Images/OregonCoast-09-07-2004.jpg">
				<img src="../../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
				<li><a href="../../index.htm">User guide</a></li>
				<li><a href="../../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="../sh2csh.htm">..\sh2csh.csh</a></li>
				<li><a href="expr.htm">expr.sed</a></li>
				<li><a href="if.htm">if.sed</a></li>
				<li><a href="proc.htm">proc.sed</a></li>
				<li><a href="case.htm">case.sed</a></li>
				<li><a href="loop.htm">loop.sed</a></li>
				<li><a href="misc.htm">misc.sed</a></li>
				<li><a href="expr2.htm">expr2.sed</a></li>
				<li><a href="quotes.htm"><b>quotes.sed</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
quotes.sed<br/>
<small><a href="expr2.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Escape newlines inside quoted strings.
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

/^[^'#]*'[^']*$/{
   /^[^"]*'/{
      :singlequote
      s/$/\\/
      n
      /'/ ! b singlequote
      }
   }
/^[^"#]*"[^"]*$/{
   /^[^']*"/{
      :doublequote
      s/$/\\/
      n
      /'/ ! b doublequote
      }
   }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="expr2.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		sh2csh.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				sh2csh.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm"><b>sh2csh.csh</b></a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
sh2csh.csh<br/>
<small><a href="renet.htm">Previous</a> |
<a href="sizeof.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Convert Bourne or Korn shell scripts to Hamilton C shell scripts
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.

#  Usage:   sh2csh [ files ]
#  
#  Translate an sh script to C shell syntax, writing to stdout.  If
#  multiple files are specified, they're concatenated.
#  
#  This is a relatively simple-minded translation using a series of sed
#  filters to rewrite if statements, procedures, case statements, loops,
#  miscellaneous differences, expressions and quotes.
#  
#  Each stage is using sed to fixup a specific type of language difference
#  between sh and csh.  Order is important and the stages must be connected
#  thru pipes rather than simply concatenating the scripts.  But any individual
#  stage can be run independently for testing or just to see what it does.
#  
#  The result will (hopefully) be fairly good if the input is in clear,
#  well-formatted style, but with these limitations:
#  
#  1. The output will depend on the C shell being run with the escape symbol
#     set as follows:
#  
#        set escapesym = \       # Use the Unix-style \, not the Windows
#                                #  default ^, as the escape symbol.
#  
#  2. break statements will have to be manually rewritten, since sh
#     interprets break to mean break out of loops only, not case
#     statements.  Also, break n means break out of n levels, even
#     breaking out of loops entered in calling procedures.  The sed
#     scripts will turn break into FixBreak in the output.
#  
#  3. Under the C shell, variables are either shell variable or
#     environment variables from the moment they're created.
#  
#  4. The scripts do a pretty good job editing most things, but some
#     things just don't go thru very well and will require hand tuning.
#     E.g., backquoted expr expressions with embedded escaped quotes
#     are garbled and escaped newlines may cause trouble.


local seddir, stageone

set seddir = $scriptname:h\sh2csh
if (! -e $seddir || ! -D $seddir) then
   echo -2 "sh2csh:  Couldn't find the sed scripts."
   exit 1
end
if ($#argv) then
   set stageone = <a href="sh2csh/expr.htm">expr.sed</a> $argv:gf
else
   set stageone = <a href="sh2csh/expr.htm">expr.sed</a>
end

cd +c $seddir
sed -f $stageone | sed -f <a href="sh2csh/if.htm">if.sed</a> | sed -f <a href="sh2csh/proc.htm">proc.sed</a> | sed -f <a href="sh2csh/case.htm">case.sed</a> | ^
   sed -f <a href="sh2csh/loop.htm">loop.sed</a> | sed -f <a href="sh2csh/misc.htm">misc.sed</a> | sed -f <a href="sh2csh/expr2.htm">expr2.sed</a> | sed -f <a href="sh2csh/quotes.htm">quotes.sed</a>
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="renet.htm">Previous</a> |
<a href="sizeof.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		sizeof.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				sizeof.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm"><b>sizeof.csh</b></a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
sizeof.csh<br/>
<small><a href="sh2csh.htm">Previous</a> |
<a href="splitstring.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the total space used by specified files or directories
#  Copyright (c) 1992-2012 by Hamilton Laboratories.  All rights reserved.
      
proc sizeof(files)
   #  Method is as follows:
   #  1. Get a long listing of all the files of interest, walking thru any
   #     subdirectories that may have been specified.
   #  2. Cut out the field 6, the column showing the space used.  (Note
   #     that the space is taken delimiter and that repeated spaces are
   #     ignored.)
   #  3. Paste this series of numbers back on the command line with backquotes
   #     and globally substitute +'s for the spaces between each pair of
   #     numbers.
   #  4. Run this constructed statement back thru the parser and execute
   #     it with the eval statement.
   eval return `ls -Lw! $files | cut -f6 -rd^ `:gS/ /+/
end

sizeof $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="sh2csh.htm">Previous</a> |
<a href="splitstring.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		splitstring.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				splitstring.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm"><b>splitstring.csh</b></a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
splitstring.csh<br/>
<small><a href="sizeof.htm">Previous</a> |
<a href="timestmp.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Split up a string into multiple lines, replacing each occurrence of
#  the separator text with a line breaks, writing them to stdout.

#  For example, write out the list of INCLUDE directories:
#
#     40 C% splitstring $INCLUDE ";"
#     C:\Users\Nicole\include
#     c:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\ATLMFC\INCLUDE
#     c:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\INCLUDE
#     C:\Program Files\Microsoft SDKs\Windows\v6.0A\include

#  Copyright (c) 2011-2012 by Hamilton Laboratories.  All rights reserved.

proc splitstring( input, separator )
   ( calc input ) | sed "s/$separator/^r^n/g"
end

@ splitstring( argv[ 0 ], argv[ 1 ] )
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="sizeof.htm">Previous</a> |
<a href="timestmp.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		timestmp.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				timestmp.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm"><b>timestmp.csh</b></a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
timestmp.csh<br/>
<small><a href="splitstring.htm">Previous</a> |
<a href="trapz.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Extract a timestamp from a file or directory in the format
#  needed by touch.

#  Copyright (c) 1994-2012 by Hamilton Laboratories.  All rights reserved.

proc timestmp( file )
   local j, t, month

   if ( $#file == 0 ) then
      echo -2 timestmp: No file or directory specified.
      @ status = 1
      return
   end

   if ( $#file &gt; 1 ) then
      echo -2 timestmp: Only one file or directory should be specified.
      @ status = 1
   end

   if ( ! -e $file ) then
      echo -2 timestmp: ^"$file^" does not exist.
      @ status = 2
      return
   end

   set t = `ls -L! $file`:1-4:gS/:0/:/:gs/:/ /
   @ month = 1
   foreach j ( Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec )
      if ( j == t[ 0 ] ) break
      @ month++
   end

   return $printf( "%02d%02d%02d%02d%02d%02d", ^
      month, t[ 1 ], t[ 2 ], t[ 3 ], t[ 4 ], t[ 5 ] )
end

timestmp $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="splitstring.htm">Previous</a> |
<a href="trapz.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		trapz.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				trapz.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm"><b>trapz.csh</b></a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
trapz.csh<br/>
<small><a href="timestmp.htm">Previous</a> |
<a href="ts.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Trapeziodal rule numeric integration of function f() from a to b,
#  using n intervals

#  Copyright (c) 1995-2012 by Hamilton Laboratories.  All rights reserved.

#  Sample usage:
#  Integrate the sin() function from 0 to 1, using 500 intervals

#     trapz sin 0 1 500

#  Compare this result with the "exact" integration:

#     calc cos(0) - cos(1)

#  The area in each interval is (f(x) + f(x + dx))*dx/2.  Summing
#  the areas of all the intervals gives the total area, but a
#  simple optimization is to move the multiplication by dx out of
#  the loop and to observe that the divide by 2 is unnecessary
#  except for the values of f() at the endpoints a and b since,
#  everywhere else, the end of one interval is the beginning of
#  the next.

#  Note the use of eval lets me paste in the name of the function
#  for the call, then cause the C shell to compile and run the
#  resulting string.  The circumflex characters at the end of each
#  line are there just to let me break the string across multiple
#  lines for readability.


proc trapz( f, a, b, n)
   local i, area, dx
   @ dx = (b - a)/n
   eval  "@ area = ($f (a) + $f (b))/2 ^
         for i = 1 to n - 1 do         ^
            @ area += $f (a + i*dx)    ^
         end"
   @ area *= dx
   return area
end

trapz $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="timestmp.htm">Previous</a> |
<a href="ts.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		ts.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				ts.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm"><b>ts.csh</b></a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
ts.csh<br/>
<small><a href="trapz.htm">Previous</a> |
<a href="update.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Search for occurrences of a simple string in all the files with a
#  given extension anywhere in a directory tree.

#  Copyright (c) 1990-2012 by Hamilton Laboratories.  All rights reserved.

#  ts works by pushing the directory to be searched onto the directory
#  stack making it the current disk and directory.  ls and grep are used
#  to recursively list all files (not directories) any where in the tree
#  that end with .ext where ext is whatever the caller requests.   Assuming
#  there are some files, fgrep is used to search them, ignoring character
#  case and showing line numbers.  The test is needed since calling fgrep
#  without a filename argument would cause it to try to read stdin.  The
#  text argument is inside double quotes in case the search text is more
#  than one word.

proc ts(startdir,ext, text)

  pushd -s $startdir
  set files = ``ls -rD1 | grep -i \.$ext^$``
  if (files != '') fgrep -in "$text" $files | more
  popd -s

end

ts $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="trapz.htm">Previous</a> |
<a href="update.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		update.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				update.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm"><b>update.csh</b></a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
update.csh<br/>
<small><a href="ts.htm">Previous</a> |
<a href="uptime.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#           Compare and update a backup directory.

#  Copyright (c) 2001-2012 by Hamilton Laboratories.  All rights reserved.

#  Usage:   update [-acd] frompath topath
#
#     Compare the frompath and topath directories looking for differences,
#     updating the topath directory as needed to make it an up-to-date
#     copy.
#
#     Comparison is done based on timestamps, not contents for speed.  By
#     default, only files that already exist in the 'topath' are updated.
#     Files that exist only in the 'frompath' are not copied.  (This is
#     done on the assumption that the 'topath' is intended only to contain
#     a snapshot of the important files.)
#
#     By default, an extra files in the 'topath' are not deleted.
#
#  Options:
#
#     -a    All files.  If a file or subdirectory exists only in the
#           frompath, copy it to the topath.
#     -c    Compare only and report.
#     -d    Delete any extra files in the topath.
#     -v    Verbose.


proc update(args)
   local j, frompath, topath, allfiles, compareonly, deleteextra, Verbose

   if ($#args &lt; 2) then
      echo "Usage:  update [-acdv] frompath topath"
      @ status = 1
      return
   end

   while ($#args &gt;= 3)
      if (substr(args[0], 1, 1) != '-') then
         echo "Usage:  update [-acd] frompath topath"
         @ status = 1
         return
      end
      for j = 2 to strlen(args[0]) do
         switch (substr(args[0], j, 1))
            case 'a':
               @ allfiles = 1
               break
            case 'c':
               @ compareonly = 1
               break
            case 'd':
               @ deleteextra = 1
               break
            case 'v':
               @ Verbose = 1
               break
            case '-':
               break
            default:
               echo "Usage:  update [-acd] frompath topath"
               @ status = 1
               return
         end
      end
   shift args
   end

   @ frompath = fullpath(args[0])
   @ topath = fullpath(args[1])
   if (frompath =~ "*\") @ frompath = substr(frompath, 1, strlen(frompath) - 1)
   if (topath =~ "*\") @ topath = substr(topath, 1, strlen(topath) - 1)

   if (Verbose) echo Comparing "$frompath" and "$topath"

   if (-e "$frompath" &amp;&amp; -e "$topath" &amp;&amp; $#frompath == 1 &amp;&amp; $#topath == 1) then
      if (Verbose) echo Paths exist, now comparing
      if (-D "$frompath") then
         if (! -D "$topath") then
            echo "$topath" must be a directory
            @ status = 1
            return
         end
         if (!allfiles) then
            foreach j (``ls -1rD "$frompath"``:q)
               if (-e "$topath\$j" &amp;&amp; `newer "$frompath\$j" "$topath\$j"`) then
                  if (compareonly) then
                     echo -- "$topath\$j" is out of date
                  else
                     if (Verbose) echo Updating "$topath\$j"
                     cp -- "$frompath\$j" "$topath\$j"
                  end
               end
            end
         else
            foreach j (``ls -1ra +D -. "$frompath"``:q)
               if (! -e "$topath\$j") then
                  if (compareonly) then
                     echo -- "$topath\$j" does not exist
                  else
                     if (Verbose) echo Creating "$topath\$j"
                     mkdir -- "$topath\$j"
                  end
               end
            end
            foreach j (``ls -1rD "$frompath"``:q)
               if (-e "$topath\$j") then
                  if (`newer "$frompath\$j" "$topath\$j"`) then
                     if (compareonly) then
                        echo -- "$topath\$j" is out of date
                     else
                        if (Verbose) echo Updating "$topath\$j"
                        cp -- "$frompath\$j" "$topath\$j"
                     end
                  end
               else
                  if (compareonly) then
                     echo -- "$topath\$j" does not exist
                  else
                     if (Verbose) echo Creating "$topath\$j"
                     cp -- "$frompath\$j" "$topath\$j"
                  end
               end
            end
         end
         if (deleteextra) then
            if (compareonly) then
               foreach j (``ls -1rD "$topath"``:q)
                  if (! -e "$frompath\$j") then
                     echo -- "$frompath\$j" does not exist
                  end
               end
            else
               foreach j (``ls -1rD "$topath"``:q)
                  if (! -e "$frompath\$j") then
                     if (Verbose) echo Deleting "$topath\$j"
                     rm -- "$topath\$j"
                  end
               end
            end
         end
      else
         if (-D "$topath") then
            echo -- "$topath" must be an ordinary file
            @ status = 1
            return
         end
         if (compareonly) then
            echo -- "$topath" is out of date
         else
            if (Verbose) echo Updating "$topath"
            cp -- "$frompath" "$topath"
         end
      end
   else
      echo Either "$frompath" or "$topath" is not a valid pathname
   end
end

update $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="ts.htm">Previous</a> |
<a href="uptime.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		uptime.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				uptime.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm"><b>uptime.csh</b></a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
uptime.csh<br/>
<small><a href="update.htm">Previous</a> |
<a href="vectormath.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt># uptime.csh
# Copyright (c) 2010-2012 by Hamilton Laboratories. All rights reserved.

# Uptime takes no arguments (and ignores any given) and prints a simple
# message telling the days, hours, minutes and seconds the system has been
# up.  For example,
#
#     116 C% uptime
#     11 days, 19 hours, 41 minutes, 02 seconds

# This is calculated from the elapsed time for p0, the system idle
# process.

proc uptime( )
   local elapsed, days, hours, min, sec

   # This next line works like this to get hours, minutes and seconds
   # as three separate words.
   #
   #  117 C% ps -s | g Idle
   #  p0     Idle         283:49:03 2221:19:27.00     ......
   #  118 C% echo `ps -s | g Idle`:2
   #  283:49:19
   #  119 C% echo `ps -s | g Idle`:2:gs/:/ /
   #  283 49 29

   @ elapsed = `ps -s | grep Idle`:2:gs/:/ /
   @ hours = elapsed[0]
   @ min = elapsed[1]
   @ sec = elapsed[2]

   if ( hours &gt;= 24 ) then
      @ days = hours // 24
      @ hours %= 24
      echo $days days, $hours hours, $min minutes, $sec seconds
   else
      if ( hours &gt;= 1 ) then
         echo $hours hours, $min minutes, $sec seconds
      else
         if ( min &gt;= 1 ) then
            echo $min minutes, $sec seconds
         else
            echo $sec seconds
         end
      end
   end
end

uptime
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="update.htm">Previous</a> |
<a href="vectormath.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		vectormath.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				vectormath.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm"><b>vectormath.csh</b></a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
vectormath.csh<br/>
<small><a href="uptime.htm">Previous</a> |
<a href="weekday.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Define a simple set of functions for doing vector math, where the vectors
#  are two-dimensional and may be specified in either rectangular or polar
#  coordinates, in either radians or degrees.

#  Basic functions including adding, subtracting, multiplying, dividing
#  and inverting vectors of the same type plus functions for converting
#  between rectangular and polar coordinates and between degrees and radians.

#  Copyright (c) 2015 by Hamilton Laboratories.  All rights reserved.

proc vector( a, b )
   local v
   @ v[0] = a * 1.0     # Force into floating point
   @ v[1] = b * 1.0
   return v
end

proc torect( p )
   local r
   @ r[0] = p[0]*cos(p[1])
   @ r[1] = p[0]*sin(p[1])
   return r
end

proc topolar( r )
   local p
   @ p[0] = sqrt( r[0]**2 + r[1]**2 )
   @ p[1] = acos( r[0]/p[0] )
   if ( r[1] &lt; 0 ) @ p[1] = -p[1]
   return p
end

proc addrect( p, q )
   local r
   @ r[0] = p[0] + q[0]
   @ r[1] = p[1] + q[1]
   return r
end

proc subrect( p, q )
   local r
   @ r[0] = p[0] - q[0]
   @ r[1] = p[1] - q[1]
   return r
end

proc multpolar( a, b )
   local p
   @ p[0] = a[0] * b[0]
   @ p[1] = a[1] + b[1]
   return p
end

proc multpolard( a, b )
   return multpolar( a, b )
end

proc divpolar( a, b )
   local p
   @ p[0] = a[0] / b[0]
   @ p[1] = a[1] - b[1]
   return p
end

proc divpolard( a, b )
   return divpolar( a, b )
end

proc polardegrees( p )
   @ p[1] *= 180/pi
   return p
end

proc polarradians( p )
   @ p[1] *= pi/180;
   return p
end

proc dtorect( p )
   return torect( polarradians( p ) )
end

proc topolard( r )
   return polardegrees( topolar( r ) )
end

proc multrect( p, q )
   local a, b
   @ a = topolar( p )
   @ b = topolar( q )
   @ a = multpolar( a, b )
   return torect( a )
end

proc divrect( p, q )
   local a, b
   @ a = topolar( p )
   @ b = topolar( q )
   @ a = divpolar( a, b )
   return torect( a )
end

proc addpolar( a, b )
   local p, q
   @ p = torect( a )
   @ q = torect( b )
   @ q = addrect( p, q )
   return topolar( q )
end

proc subpolar( a, b )
   local p, q
   @ p = torect( a )
   @ q = torect( b )
   @ q = subrect( p, q )
   return topolar( q )
end

proc addpolard( a, b )
   local p, q
   @ p = dtorect( a )
   @ q = dtorect( b )
   @ q = addrect( p, q )
   return topolard( q )
end

proc subpolard( a, b )
   local p, q
   @ p = dtorect( a )
   @ q = dtorect( b )
   @ q = subrect( p, q )
   return topolard( q )
end

proc invertpolar( p )
   local r
   @ r[0] = 1/p[0]
   @ r[1] = -p[1]
   return r
end

proc invertrect( r )
   return torect( invertpolar( topolar( r ) ) )
end

cat &lt;&lt; eof
These functions are now defined.

vector( a, b )    Create a vector from two expressions.
 

torect( p )       Polar in radians -&gt; Rectangular
dtorect( p )      Polar in degrees -&gt; Rectangular
topolar( r )      Rectangular -&gt; Polar in radians
topolard( r )     Rectangular -&gt; Polar in degrees

addrect( p, q )   Rectangular  +   -   *   /  
subrect( p, q )
multrect( p, q )
divrect( p, q )

invertrect( r )   Rectangular 1 / r

addpolar( a, b )  Polar  +   -   *   /
subpolar( a, b )
multpolar( a, b )
divpolar( a, b )

addpolard( a, b )
subpolard( a, b )
multpolard( a, b )
divpolard( a, b )

invertpolar( p )  Polar 1 / p

polardegrees( p ) Polar radians -&gt; degrees
polarradians( p ) Polar degrees -&gt; radians
eof
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="uptime.htm">Previous</a> |
<a href="weekday.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		weekday.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				weekday.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm"><b>weekday.csh</b></a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
weekday.csh<br/>
<small><a href="vectormath.htm">Previous</a> |
<a href="which.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Calculate the day of the week corresponding to a given date.
#  Copyright (c) 1991-2012 by Hamilton Laboratories.  All rights reserved.

proc weekday(month, day, year)
   local days, i
   set days = Sunday Monday Tuesday Wednesday Thursday Friday Saturday
   # Get the Julian day, but notice that 4713 BC was not a leap year.
   if ((i = `julian $month $day $year`) &lt; 58) @ i++
   return days[(i + 2) % 7]
end

weekday $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="vectormath.htm">Previous</a> |
<a href="which.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		which.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				which.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm"><b>which.csh</b></a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
which.csh<br/>
<small><a href="weekday.htm">Previous</a> |
<a href="white.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Determine which alias, procedure or executable file will run.

#  Copyright (c) 1998-2012 by Hamilton Laboratories.  All rights reserved.

proc possiblename( s )
   local c, i
   @ c = substr( s, 0, 1 )
   if ( c !~ "[a-zA-Z_@]" ) return 0
   for i = 1 to strlen( s ) do
      @ c = substr( s, i, 1 )
      if ( c !~ "[a-zA-Z_@0-9]" ) return 0
   end
   return 1
end

proc which( cmd )

   #  Figure out what will be run if cmd is typed.
   #  The search order is:
   #     1. Aliases
   #     2. Procedures
   #     3. Executable files

   local result
   if ( $#cmd ) then
      if ( possiblename( cmd ) ) then

         #  Turn off errors if looking for aliases and procs
         #  that don't exist.
         local savenonovar
         @ savenonovar = nonovar
         @ nonovar = 2 # discard errors

         @ result = ``eval alias $cmd``
         if ( $#result ) then
            set result = "alias $result" 
         else
            @ result = ``eval proc $cmd``
            if ( $#result ) then
               set result = "proc  $result"
            else
               @ result = ``whereis $cmd``
               if ( $#result &gt; 1 ) @ result = result[ 0 ]
            end

         #  Restore the error handling.
         @ nonovar = savenonovar
         end
      else
         @ result = ``whereis $cmd``
         if ( $#result &gt; 1 ) @ result = result[ 0 ]
      end
   end
   return result
end

which $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="weekday.htm">Previous</a> |
<a href="white.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		white.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				white.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm"><b>white.csh</b></a></li>
				<li><a href="winerror.htm">winerror.c</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
white.csh<br/>
<small><a href="which.htm">Previous</a> |
<a href="winerror.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  Customize the screen colors for a bright white window.
#  Copyright (c) 1996-2012 by Hamilton Laboratories.  All rights reserved.


setenv   COLORS         =  black on bright white
setenv   DELETIONS      =  bright white on dim red
setenv   ADDITIONS      =  bright white on dim green
setenv   MOREPROMPT     =  bright white on dim blue
setenv   MOREFILLIN     =  bright yellow
setenv   MOREERROR      =  bright white on dim red
setenv   MOREEOF        =  bright red
setenv   DIRECTORIES    =  bright red
setenv   SYSTEMDIRS     =  blue
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="which.htm">Previous</a> |
<a href="winerror.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		winerror.c
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../53-Samples.htm">Samples</a>
			</h4>
			<h2>
				winerror.c
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm"><b>Samples</b></a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Samples</p></li>
				<li><a href="a2e.htm">a2e.csh</a></li>
				<li><a href="args.htm">args.c</a></li>
				<li><a href="average.htm">average.csh</a></li>
				<li><a href="basename.htm">basename.csh</a></li>
				<li><a href="bits.htm">bits.csh</a></li>
				<li><a href="blksize.htm">blksize.c</a></li>
				<li><a href="bumpdate.htm">bumpdate.csh</a></li>
				<li><a href="c2f.htm">c2f.csh</a></li>
				<li><a href="caldate.htm">caldate.csh</a></li>
				<li><a href="calendar.htm">calendar.csh</a></li>
				<li><a href="colors.htm">colors.csh</a></li>
				<li><a href="decimal.htm">decimal.csh</a></li>
				<li><a href="deltaday.htm">deltaday.csh</a></li>
				<li><a href="deltahrs.htm">deltahrs.csh</a></li>
				<li><a href="dirname.htm">dirname.csh</a></li>
				<li><a href="dumpenv.htm">dumpenv.c</a></li>
				<li><a href="duplicat.htm">duplicat.csh</a></li>
				<li><a href="e2a.htm">e2a.csh</a></li>
				<li><a href="easter.htm">easter.csh</a></li>
				<li><a href="f2c.htm">f2c.csh</a></li>
				<li><a href="factor.htm">factor.csh</a></li>
				<li><a href="finance.htm">finance.csh</a></li>
				<li><a href="findinclude.htm">findinclude.csh</a></li>
				<li><a href="fixup.htm">fixup.csh</a></li>
				<li><a href="internat.htm">internat.csh</a></li>
				<li><a href="julian.htm">julian.csh</a></li>
				<li><a href="laptop.htm">laptop.csh</a></li>
				<li><a href="makecpgm.htm">makecpgm.csh</a></li>
				<li><a href="max.htm">max.csh</a></li>
				<li><a href="mcvisa.htm">mcvisa.csh</a></li>
				<li><a href="member.htm">member.csh</a></li>
				<li><a href="memberi.htm">memberi.csh</a></li>
				<li><a href="min.htm">min.csh</a></li>
				<li><a href="myecho.htm">myecho.c</a></li>
				<li><a href="newfiles.htm">newfiles.csh</a></li>
				<li><a href="percentchg.htm">percentchg.csh</a></li>
				<li><a href="postage.htm">postage.csh</a></li>
				<li><a href="posxpath.htm">posxpath.csh</a></li>
				<li><a href="rcode.htm">rcode.c</a></li>
				<li><a href="read.htm">read.csh</a></li>
				<li><a href="renet.htm">renet.csh</a></li>
				<li><a href="sh2csh.htm">sh2csh.csh</a></li>
				<li><a href="sizeof.htm">sizeof.csh</a></li>
				<li><a href="splitstring.htm">splitstring.csh</a></li>
				<li><a href="timestmp.htm">timestmp.csh</a></li>
				<li><a href="trapz.htm">trapz.csh</a></li>
				<li><a href="ts.htm">ts.csh</a></li>
				<li><a href="update.htm">update.csh</a></li>
				<li><a href="uptime.htm">uptime.csh</a></li>
				<li><a href="vectormath.htm">vectormath.csh</a></li>
				<li><a href="weekday.htm">weekday.csh</a></li>
				<li><a href="which.htm">which.csh</a></li>
				<li><a href="white.htm">white.csh</a></li>
				<li><a href="winerror.htm"><b>winerror.c</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
winerror.c<br/>
<small><a href="white.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

<table>
<tr>
<td>
<pre><tt>/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*       Print the Win32 message corresponding the given error code.       */
/* Copyright (c) 1993-2012 by Hamilton Laboratories.  All rights reserved. */
/*                                                                         */
/*                                                                         */
/***************************************************************************/

#include &lt;windows.h&gt;
#include &lt;ctype.h&gt;
#include &lt;stdlib.h&gt;
#include "<a href="internat.htm">internat.h</a>"

void main( int argc, char **argv )
   {
   int i;
   HANDLE Stdout = GetStdHandle(STD_OUTPUT_HANDLE);
   Internationalize();

   if (Stdout == INVALID_HANDLE_VALUE)
      ExitProcess(GetLastError());

   for (i = 1;  i &lt; argc;  i++)
      {
      register char *p, c;
      DWORD bytes;
      for (p = argv[i];  c = *p, c &amp;&amp; isdigit(c);  p++)
         ;
      if (c == 0)
         {
         char msg_buf[1024], errno_buf[20],
            NoHelp[] = "No help is available for this error.\r\n";
         DWORD Errno = (DWORD)atoi(argv[i]);
         _itoa(Errno, errno_buf, 10);
         for (p = errno_buf;  *p;  p++)
            ;
         *p++ = ':';
         *p++ = ' ';
         *p++ = ' ';
         WriteFile(Stdout, errno_buf, p - errno_buf, &amp;bytes, NULL);

         if (bytes = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM, NULL, Errno,
               MAKELANGID(LANG_NEUTRAL, SUBLANG_NEUTRAL), msg_buf,
               sizeof(msg_buf), NULL))
            WriteFile(Stdout, msg_buf, bytes, &amp;bytes, NULL);
         else
            WriteFile(Stdout, NoHelp, sizeof(NoHelp) - 1, &amp;bytes, NULL);
         }
      else
         {
         char NotNumeric[] = ":  No help available.  Error codes must "
               "be numeric.\r\n";
         while (*p)
            p++;
         WriteFile(Stdout, argv[i], p - argv[i], &amp;bytes, NULL);
         WriteFile(Stdout, NotNumeric, sizeof(NotNumeric) - 1, &amp;bytes, NULL);
         }
      }
   ExitProcess(0);
   }
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="white.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		binedit
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				binedit
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm"><b>binedit</b></a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
binedit<br/>
<small><span class="grey">Previous |</span>
<a href="cat.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Binary Edit

Usage:  binedit [-ih!-] [-r replace] search file1 [ file2 ... ]

   binedit is a very simple utility for scanning arbitrary files,
   looking for and optionally changing any references to the
   search argument to the replacement value.  binedit is quite
   useful patching binary files, e.g., to replace all occurrences
   of C:\2.0 with C:\2.1.

   Occurrences will be reported as hex offsets from the start
   of the files you name.

   You can also ask binedit to make the change, using the -r
   (replace) option.  Nothing fancy.  It just changes all occur-
   rences to the string you specify and quits.

   Neither the search nor the replace string may contain null
   characters, but otherwise there are no restrictions.

Options:

   -h         Help.  (This screen.)
   -i         Ignore character case in the search argument.
   -r replace Replace any occurrences of the search string with
              this replacement value.
   -!         Pad with nulls or truncate the replace string to be
              the same length as the search string.  (Otherwise,
              it's an error if they're different lengths.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><span class="grey">Previous |</span>
<a href="cat.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cat
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				cat
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm"><b>cat</b></a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cat<br/>
<small><a href="binedit.htm">Previous</a> |
<a href="chgrp.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Concatenate Files to Stdout

Usage:  cat [-h-] [ file1 file2 ... ]

   cat copies the files you specify, one immediately after another,
   onto stdout.  No end-of-file or other delimiter characters are
   inserted between files.

Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="binedit.htm">Previous</a> |
<a href="chgrp.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cd
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				cd
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm"><b>cd</b></a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cd<br/>
<small><span class="grey">Previous |</span>
<a href="chcp.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Change to a New Current Directory

Usage:  cd [-chr-] [+chr ] directory

   cd works exactly like the one in cmd.exe by default:  if you
   specify a directory, it tries to make that the current on the
   appropriate disk but won't change your current disk.  If you don't
   specify a directory, it reports the current setting.

   If the path you specify is just 3 or more dots, cd will interpret
   that specially.  Just as ".." means go up one level, "..." means
   up 2 levels, "...." means up 3 levels, etc.  Note that "..." is
   also a wildcard notation for zero or more directory levels, but
   only if it's preceded by "\", "/", "~" or ":" or followed by
   "\" or "/", so usually there's no conflict with this notation
   for going up multiple directories with cd.  The exception is when
   you'd like to go up multiple directories on an explicitly specified
   drive; in that case, you'll have to quote the word to turn off the
   wildcarding.

   This version of cd also supports CDPATH.  If you specify a path
   that isn't found, cd will look through the list of any directories
   you specify in the CDPATH environmental variable (or the equivalent
   cdpath shell variable) to see if the directory you want is in one
   of those directories.   The syntax for CDPATH and cdpath is the
   same as for PATH or path except that the current directory need
   not be listed.

   (See also the dirs, pushd, popd and rotd commands.)

Options:

   If you set the chgdisk variable equal to 1 (its default is 0), cd
   will automatically change current disks if the directory is on
   another drive.  The +c and -c options allow you to manually control
   this drive switching:

   +c   Automatically change the current disk
   -c   Don't automatically change current disk

   If you set the cdhome variable to 1 (its default is 0), cd will
   change to your home directory if you don't specify one instead of
   reporting your current position.  You can manually control this with
   the +r and -r options:

   +r   Report but don't change the current directory if no
        destination directory is specified.
   -r   Change to the home directory in this situation.

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><span class="grey">Previous |</span>
<a href="chcp.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		chcp
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				chcp
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm"><b>chcp</b></a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
chcp<br/>
<small><a href="cd.htm">Previous</a> |
<a href="chdir.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Report or Change the Code Page

Usage:  chcp [-h-] [ page ]

   Change or report the character set code page.  This command
   is not yet implemented under NT.

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cd.htm">Previous</a> |
<a href="chdir.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		chdir
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				chdir
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm"><b>chdir</b></a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
chdir<br/>
<small><a href="chcp.htm">Previous</a> |
<a href="cls.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Change to a New Current Directory

Usage:  cd [-chr-] [+chr ] directory

   cd works exactly like the one in cmd.exe by default:  if you
   specify a directory, it tries to make that the current on the
   appropriate disk but won't change your current disk.  If you don't
   specify a directory, it reports the current setting.

   If the path you specify is just 3 or more dots, cd will interpret
   that specially.  Just as ".." means go up one level, "..." means
   up 2 levels, "...." means up 3 levels, etc.  Note that "..." is
   also a wildcard notation for zero or more directory levels, but
   only if it's preceded by "\", "/", "~" or ":" or followed by
   "\" or "/", so usually there's no conflict with this notation
   for going up multiple directories with cd.  The exception is when
   you'd like to go up multiple directories on an explicitly specified
   drive; in that case, you'll have to quote the word to turn off the
   wildcarding.

   This version of cd also supports CDPATH.  If you specify a path
   that isn't found, cd will look through the list of any directories
   you specify in the CDPATH environmental variable (or the equivalent
   cdpath shell variable) to see if the directory you want is in one
   of those directories.   The syntax for CDPATH and cdpath is the
   same as for PATH or path except that the current directory need
   not be listed.

   (See also the dirs, pushd, popd and rotd commands.)

Options:

   If you set the chgdisk variable equal to 1 (its default is 0), cd
   will automatically change current disks if the directory is on
   another drive.  The +c and -c options allow you to manually control
   this drive switching:

   +c   Automatically change the current disk
   -c   Don't automatically change current disk

   If you set the cdhome variable to 1 (its default is 0), cd will
   change to your home directory if you don't specify one instead of
   reporting your current position.  You can manually control this with
   the +r and -r options:

   +r   Report but don't change the current directory if no
        destination directory is specified.
   -r   Change to the home directory in this situation.

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="chcp.htm">Previous</a> |
<a href="cls.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		chgrp
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				chgrp
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm"><b>chgrp</b></a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
chgrp<br/>
<small><a href="cat.htm">Previous</a> |
<a href="chmod.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        chgrp:  Change the group for files or directories

Usage:  chgrp [-rth-] groupid file1 [ file2 ... ]

   chgrp will change the group information associated with NTFS
   files or directories to the specified group.  chgrp will not
   run under Windows 9x.

   The groupid may be specified as either a simple name or as a
   machine\name pair.  (Warning:  specifying a name on another
   machine can take several seconds for network handshaking.)
   The groupid is omitted with the -t option.

   To use this command, you must have this right, which can be
   granted via the User Manager:

      Restore files and directories

Options:

   -r             Recursive.  If any of the paths specified
                  is a directory, chgrp will recursively walk
                  through the entire directory tree, changing
                  the group of all the contents.
   -t             Take.  Change the group to the same as the
                  primary group of the current process. The
                  groupid argument is omitted.

   -h             Help.  (This screen.)
   --             End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cat.htm">Previous</a> |
<a href="chmod.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		chmod
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				chmod
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm"><b>chmod</b></a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
chmod<br/>
<small><a href="chgrp.htm">Previous</a> |
<a href="chown.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Change Mode Bits on Files (not Directories)

Usage:  chmod [-+] [rRAHSCwh] pathname1 [ pathname2 ... ]

Options:

  -r    Recursively change contents of directories.

  +R    Read-only mode is set.  (The file is write-protected.)
  -R    Read-only mode is turned off.

  +A    Archive bit is set.
  -A    Archive bit is turned off.

  +H    Hidden mode is set.
  -H    Hidden mode is turned off.

  +S    Mark as a System file.
  -S    Mark as a normal user file.

  +C    Compress the file or, if it's a directory, mark it so any
        new files created there will be compressed.  (Supported
        only under Windows NT release 3.51 or later and only if
        supported by the filesystem.)
  -C    De-compress the file or, if it's a directory, mark it so
        new files created there will not be compressed.

  -w    Give a warning message but continue trying to chmod any
        remaining files or directories even if problems were
        encountered with some of them.
  -h    Help.  (This screen.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="chgrp.htm">Previous</a> |
<a href="chown.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		chown
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				chown
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm"><b>chown</b></a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
chown<br/>
<small><a href="chmod.htm">Previous</a> |
<a href="cmp.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        chown:  Change the ownership of files or directories

Usage:  chown [-ADPrRtTh-] userid file1 [ file2 ... ]

   chown will change the ownership of NTFS files or directories
   to the specified user.  chown will not run under Windows 9x.

   The userid may be specified as either a simple name or as a
   machine\name pair.  (Warning:  specifying a name on another
   machine can take several seconds for network handshaking.)
   The userid is omitted when using the -R, -t or -T options.

   To use this command to take ownership for yourself, you must
   have this right:

      Take ownership of files or other objects

   If you would like to grant ownership to another userid, you
   must also have this right:

      Restore files and directories

   These rights can be granted via the User Manager.

Options:

   -A             Add an access control entry to any access
                  control lists, granting full access to the
                  new owner.
   -D             Default ACL, inheriting from the parent but
                  adding an ACE allowing full access to the
                  new owner.
   -P             Private.  Add an ACL to each file allowing
                  full access to the new owner but no access
                  to anyone else.
   -r             Recursive.  If any of the paths specified
                  is a directory, chown will recursively walk
                  through the entire directory tree, changing
                  the ownership of all the contents.
   -R             Remove any ACL.  The userid argument is
                  omitted.  (Warning:  a null ACL grants full
                  access to everyone and cannot be edited with
                  the Microsoft cacls command.)  The userid
                  argument is omitted.
   -t             Take.  Change the ownership to the same as
                  that of the current process.  If you are
                  running elevated as an Administrator, ownership
                  will be taken in the name of that group.
                  (This is so that Administrators can easily
                  share files.)  The userid argument is omitted.
   -T             Take ownership in your own name, even if you
                  running elevated as an Administrator.  The
                  userid argument is omitted.

   -h             Help.  (This screen.)
   --             End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="chmod.htm">Previous</a> |
<a href="cmp.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cls
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				cls
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm"><b>cls</b></a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cls<br/>
<small><a href="chdir.htm">Previous</a> |
<a href="dirs.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Clear the Screen

Usage:  cls [-h-]

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="chdir.htm">Previous</a> |
<a href="dirs.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cmp
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				cmp
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm"><b>cmp</b></a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cmp<br/>
<small><a href="chown.htm">Previous</a> |
<a href="cp.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Binary Compare Two Files or Directories

Usage:  cmp [-lsdxoph-] [-r&lt;radix&gt;] file1 file2

   cmp compares files and directories, byte by byte.  If they
   are identical, cmp writes no output and exits with a return
   code of 0.  If they differ, cmp will, by default, report the
   location of the first difference and exit with a return code
   of 1.

   If one operand is a directory and the other is a file, cmp
   will look for and compare against a file of that same name
   in the directory.

   Comparing directories, cmp builds lists of all the files
   they contain, searching all the way down through the tree.
   The lists are sorted, then compared.  If the same filename
   exists in each directory tree, they are compared.

   The first difference will be reported by line number, always
   in decimal, and offset from the start of the file, counting
   from zero, in the radix specified with the -d, -x, -o or -r
   option, or by the RADIX environment variable, if set, or in
   the default radix 16 (hex).

Options:

   -l           List all the differences, showing, for each, the
                offset from the beginning of the file and the
                values of the differing characters.  Offsets and
                and character values will be shown in the radix
                chosen by the user.
   -s           Write nothing for differing files; just set
                the return code.
   -p           POSIX-compatible reporting:  any message text
                will be presented exactly as specified by the
                POSIX 1003.2 standard, offsets within the files
                will be counted starting at 1, not 0, and the
                values of any differing bytes will be shown in
                octal.
   -d           Decimal radix.
   -x           Hex.
   -o           Octal.
   -r&lt;radix&gt;    User-specified radix.  If a radix &lt; 8 is specified,
                only the character values will be shown in that
                radix; offsets will be shown in hex.
   -h           Help.  (This screen.)
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="chown.htm">Previous</a> |
<a href="cp.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cp
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				cp
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm"><b>cp</b></a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cp<br/>
<small><a href="cmp.htm">Previous</a> |
<a href="cron.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Copy Files or Directories

Usage:  cp [-cfilmsh-] source1 [ source2 ... ] destination

   cp can copy both files and directories.  If the destination is
   an existing directory, the source object(s) will be copied into
   that directory.  If more than one source object is specified,
   the destination must be a directory, but it need not already
   exist.  

   If a destination file already exists, it will be overwritten;
   this is not considered an error and no diagnostic message is
   given.

   By default, security descriptors and access control lists are not
   copied from source to destination.  This is in keeping with the
   Windows convention that security is generally inherited through
   the directory structure.

Options:

  -c    Continue even if errors are encountered attempting to
        process some input files or directories.
  -f    Force read-only files to be overwritten.
  -i    Interactive:  Ask before copying each object on the
        command line.
  -l    Logging is on:  Display the name of each file or directory
        as it's copied.
  -m    Merge sub-directories of same name in source and destination.
  -s    Simple copy.  (Default.)  Do not copy security descriptors
        and access control lists.
  +s    Copy security descriptors and access lists.  Under Windows 9x
        or if the destination filesystem does not support ACLs,
        that's not possible and the security information will be
        lost. This is not considered an error and no diagnostic message
        is given.

  -h    Help (this screen.)
  --    End of options.  (Useful if filenames start with "-".)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cmp.htm">Previous</a> |
<a href="cron.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cron
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				cron
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm"><b>cron</b></a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cron<br/>
<small><a href="cp.htm">Previous</a> |
<a href="csh.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Run Commands at Specified Times

Usage:  cron [-asLwW!h-] [-o&lt;opt&gt;] [-d &lt;dir&gt;]
                [ crontab1 crontab2 ... ] |
            -install  [-N &lt;name&gt;] [-D &lt;dispname&gt;]
                [-u &lt;user&gt;] [-p &lt;password&gt;]
                [-H &lt;directory] [-MI] &lt;arguments&gt; |
            -start    [-N &lt;name&gt;] [-D &lt;dispname&gt;] &lt;arguments&gt; |
            -stop     [-N &lt;name&gt;] [-D &lt;dispname&gt;] |
            -pause    [-N &lt;name&gt;] [-D &lt;dispname&gt;] |
            -continue [-N &lt;name&gt;] [-D &lt;dispname&gt;] |
            -delete   [-N &lt;name&gt;] [-D &lt;dispname&gt;] |
            -status   [-N &lt;name&gt;] [-D &lt;dispname&gt;]

   cron executes commands at times according to the crontab
   (.crt) files specifed.  If any path specified is a directory,
   cron will run any crontab files in that directory or any
   subdirectory.  If no files are specified, cron will read
   the crontab from stdin.

   Each file is expected to contain a list of activities to be
   run at certain times, specified one per line.  There are six
   fields per line, separated by white space.  The first five
   specify:

      minute             (0-59)
      hour               (0-23)
      day of the month   (1-31)
      month of the year  (1-12)
      day of the week    (0-6, 0 is Sunday)

   Each of these fields may be an asterisk (meaning all legal
   values) or a comma-separated list of elements, where each
   element is either a single number or a range, given as two
   numbers separated by a minus.  If either end of a range is
   omitted, it defaults to the highest/lowest legal value, as
   appropriate.  If the days are specified in both day of the
   month and day of the week fields, the union of those fields
   is used; to specify the days by only one field, the other
   should be an asterisk.  For example, 0 0 1 * 1 means run the
   command at midnight on the first of every month and also
   on every Monday.

   The sixth field of each line is a command that is to be
   executed by the shell at the specified times.  Any percent
   characters in this field (unless escaped by the escape
   character) are translated to carriage return/newline
   combinations.  Only the first line (up to the first % or
   end of line) is passed as a command; the other lines are
   written to the shell as stdin.  If no input lines are
   given, the shell will inherit stdin opened to the nul
   device.

   Blank lines and any lines beginning with # will be considered
   as comments.
 
   If the crontab was read from a file, the shell will inherit
   stdout and stderr handles for writing (appending, if the file
   already exists) to a file created by replacing the .crt
   extension on the crontab file with .nnn, where nnn is the
   linenumber in the .crt file.  (If the crontab was read from
   stdin, then the shell will inherit the stdout and stderr
   that cron inherited when it started.)

   If a syntax or other error is encountered in a crontab, that
   line, but not the rest of the file will be ignored.  The
   rationale is that cron should continue running even if it
   encounters problems; it should not be necessary to restart
   it just because one entry in one crontab contained an error.

   By default, if the crontab is read from a file, commands
   will be run asynchronously, meaning that all entries that
   are ready to run at any given time will be quickly spawned,
   one right after another, without waiting for each to complete
   before the next is spawned.  If the crontab is read from
   stdin, the default will be synchronous execution, meaning
   each must complete before the next starts; that's so any
   output from one won't be jumbled with that of another.  These
   defaults can be overridden with command-line options.

   Once it's started, cron will make an initial scan of the
   crontab files or directories.  Once every minute after that
   it will look for any changes by comparing timestamps on the
   files.


Running Cron as a Service:

   Under Windows NT, there are two ways to run cron.  The
   simplest is as an ordinary process.  But cron can also be
   run as a service, which means it can run even under a
   different ID than the person currently logged in or even
   when no one is logged in.  When run as a service, cron can
   be set up to start up automatically when Windows NT is booted
   or for manual startup using the Services applet in the
   Control Panel.  Finally, as service, cron can be either
   interactive, meaning it and its children get access to the
   console, or non-interactive, meaning it and its children
   will run invisibly, with no display output and no means for
   input through the keyboard or mouse.  Any error messages
   will be appended to a cron.log file in the home directory
   since messages written to the screen would be lost.

   The choice of running cron as either an interactive or non-
   interactive service is this:  if you run it interactively,
   then there may be a security hole since windows will appear
   and your users may be able to interact with the applications
   cron invokes in ways you didn't intend.  Also, the user
   might be annoyed to see windows popping up and going
   away for all those activities scheduled with cron.

   On the other hand, if you run cron non-interactively, then 
   you may not be able to use it to schedule everything you
   need.  For example, if you start notepad from a non-
   interactive copy of cron, notepad will hang because it
   simply can't run properly without access to the console.
   Also, you won't be able to kill the notepad process without
   rebooting due to the way the security mechanism works.

   An alternative to deciding between these differing ways of
   running cron is to run several copies instead.  Each can be
   set up with its own startup and interactive/non-interactive
   characteristics.  But each copy must have a unique service
   and display name.


Service Options:

   -install   Install cron as a service.   The following
              options may be specified with -install:

              -u &lt;user&gt;      Run cron under the specified user
                             name.  The user name should be
                             in the form DomainName\Username or,
                             if the account is in the current
                             domain, as .\Username.  The default
                             is to run under the LocalSystem ID.

                             To be able to start a service under
                             a user ID, that user must have the
                             right to log on as a service.  To
                             grant that right, use the User
                             Manager.  Pull down Policies, select
                             User Rights and in the popup, check
                             Show Advanced User Rights.  You can
                             then select "Log on as a service"
                             and grant that right to selected
                             groups or users.

              -p &lt;password&gt;  Login password for the specified
                             user name.
              -H &lt;directory&gt; Home directory that the cron service
                             should start up in.  Default is the
                             current directory at the time the
                             install was done.
              -M             Manual startup.  Default is
                             to startup automatically when
                             Windows NT is booted.
              -I             Interactive.  Default is non-
                             interactive.  A service can not be
                             installed as interactive if the
                             -u option is specified.
              &lt;arguments&gt;    Any run-time arguments to be passed
                             to cron when it starts.  Note that
                             any options being set up for the
                             service MUST follow any -install
                             options.  The first option that's
                             not an -install option is assumed to
                             be a run-time option.  No syntax or
                             other checks are made during
                             installation that the run-time
                             arguments are sensible.  If no
                             arguments are given with either
                             -install or -start, cron will look
                             for crontab (.crt) files in the
                             home directory.

   -start &lt;arguments&gt;
              Start the previously installed cron service,
              passing it whatever arguments may be desired.
              If the -install operation also specified an
              argument list, this argument list will override
              it.
   -stop      Stop the cron service.
   -pause     Pause the cron service.
   -continue  Allow cron to continue execution after having
              been paused.
   -delete    Delete (uninstall) the cron service.
   -status    Report the status of the cron service.

   All the service options above accept the following additional
   options for specifying the name of the service:

              -N &lt;name&gt;     Service name for naming the entry
                            in the Registry.
              -D &lt;dispname&gt; Display name for use in the Services
                            applet.

   Under NT, each service has two names:  one is the service
   name, which is the name under which all the information
   about that service is stored in the registry.  The second
   is the display name, which is the more human-readable name
   shown in the Services applet in the Control Panel.  By
   default, the service name for cron is "Hamilton_Cron"
   and the display name is "Hamilton Cron Service".

   When installing a service, both the service name and the
   display name must be unique; that is, there can't be any
   other services already installed with that service name
   or with that display name.  Once installed, either name
   may be used to refer to the service.


General Options:

   -a         Asynchronous execution.  Don't wait for one
              command to complete before spawning the next,
              even if the crontab was read from stdin.
   -s         Synchronous execution.   Always wait for one
              command to complete before spawning the next,
              even if the crontab was read from a file.
   -L         Logging.  As each command is spawned, timestamp
              and log it to stdout and to the output file if
              that's not the same as stdout.
   -w         Wait until the next whole minute.  If cron wasn't
              started near a whole minute (i.e., zero to three
              seconds past a whole minute mark), wait until the
              next whole minute before beginning to schedule cron
              events.
   -o&lt;opt&gt;    Remainder of word contains options to be passed to
              the C shell with any commands.  E.g., -oF means
              C shell should do fast startup when running
              commands.
   -d &lt;dir&gt;   Output files should be created in the specified
              directory, not the directory where the .crt files
              were found.
   -!         Install a interrupt handler to shield cron and its
              children from Ctrl-C and Ctrl-Break interrupts.
              (Remember to type this option at the end of the
              list so the space afterward will prevent it from
              being confused as a history reference.)
   -W         Open a new console window rather than using the
              current one.  Only meaningful for cron run as an
              ordinary process, but useful if the -! option is
              specified.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cp.htm">Previous</a> |
<a href="csh.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm"><b>csh</b></a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
csh<br/>
<small><a href="cron.htm">Previous</a> |
<a href="cut.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Hamilton C shell(tm) 

Usage:  csh [-!BbefFhHiKLlNnPQ.sTtuxXYZ-] [-IO] [+IO]
                   [-cC command] [arguments]

Options:

   -!   Ignore errors:  Continue execution even if a command
        terminates abnormally.  (Implied by interactive.)
   -B   Berkeley mode for better compatibility with the BSD4.3
        C shell for all commands, not just those read from a
        script starting with #!/bin/csh.
   -b   No Berkeley compatibility mode at all, not even on scripts
        starting with #!/bin/csh.
   -c   Execute the command following on the command line, then
        exit.  (Implies not interactive.)
   -C   Normally, this means immediately run the command on the
        command line, then continue with normal startup and
        processing of stdin.  But for compatibility with cmd.exe,
        the -X option may be used to toggle this to have the same
        meaning as -c but with the initial greeting and copyright
        notice suppressed.
   -e   Echo the raw input to stdout.  (Sets echoallinput = 1.)
   -f   Fast startup:  Don't look for a startup.csh file.
   -F   Faster startup:  Don't look for a startup.csh file and
        don't hash the path directores.
   -H   Heapstats.  At some penalty in performance, this causes the
        shell to keep a count of the number and total size of all
        objects allocated or freed from the heap.  Statistics can be
        displayed using the heapstat command.
   -i   Interactive (even if stdin appears to be a file or a pipe):
        Prompt for input and show the result of history substitutions.
   -I   Start with command-line editing in insert mode.
   +I   Start every command in insert mode.
   -K   Do a fast startup, skipping both the login.csh and startup.csh
        files, run the command on the command line, and exit.
   -L   Login shell:  Look for login.csh and do history save at exit
        if savehist == 1.
   -l   Same as -L, meaning this is a login shell.
   -N   No space after the last filename generated by filename
        completion.  This is the default and overrides -S.
   -n   No execution:  Parse commands looking for syntax errors but
        don't execute them.
   -O   Start with command-line editing in overstrike (default) mode.
   +O   Start every command in overstrike mode.
   -P   Word-oriented command line editing operations will treat
        individual pathname segments as separate words.
   -Q   Quiet:  Skip the opening copyright notice.
   -.   Used with -P, causes periods to be considered as word
        separators in command line editing of pathnames.
   -s   Read and execute a single line from stdin.  (Implies not
        interactive.)
   -S   Put a space after the last filename generated by filename
        completion.  Overrides -N.
   -T   Plain Tab key.   Tab and BackTab are normally used to do
        filename completion and to walk file-by-file through the
        list of filenames that were matched.  To type an ordinary
        Tab character, Ctrl-Tab is used.  This option reverses Tab
        and Ctrl-Tab, making Tab a plain character and Ctrl-Tab the
        filename completion key.
   -t   Suppress callstack tracing.  Error messages will not include
        a dump of the callstack but performance will be improved
        slightly.
   -u   Reads from devices or pipes should be unbuffered.  (Intended
        to allow the shell to be used over a comm line.)
   -x   When used with -c or -C, the first argument word is taken as
        the command, to be parsed as a string.  The remaining
        arguments are placed in the argv shell variable.  This is
        for compatibity with GNU tcsh and make.
   -X   Toggle between the normal meaning of -C and a cmd.exe-
        compatible interpretation.  You can set this with the
        CSHOPTIONS environmental variable in combination with
        setting COMSPEC to point to the C shell to allow programs
        that use /C to pass commands to cmd.exe to be used with
        the C shell instead.
   -Y   No Interrupts.  Leave the keyboard in whatever state it
        was in at startup; don't force Ctrl-C to be an interrupt.
        (Useful for running the C shell inside an Emacs buffer.)
   -Z   Very special purpose:  Don't bump the maximum FAT filesystem
        open file handle limit during shell initialization.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options for the C shell.  For all the utilities, but not the C
shell itself, the SWITCHCHARS variable may be used to set a
different set of characters to introduce options.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cron.htm">Previous</a> |
<a href="cut.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		cut
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				cut
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm"><b>cut</b></a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
cut<br/>
<small><a href="csh.htm">Previous</a> |
<a href="date.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Cut out Selected Fields of Each Line of Text

Usage:  cut [-hsr-] [-c&lt;list&gt;] [-f&lt;list&gt;] [-d&lt;delims&gt;]
            [ file1 file2 ...]

   cut can be used to select certain columns or fields from each
   line of input.  If the -c option is used, fields are defined
   as specific character positions.  If the -f option is used,
   the fields can be of variable length, each field separated
   from the next by the delimiter character.  If no files are
   specified, cut reads input data from stdin.

   A list of fields or character positions is specified as a
   comma-separated list of integers.  The minus sign can be used
   to indicate a range.  Here are some examples:  1,4,7; 1-3,8;
   -5,10 (short for 1-5,10); or 3- (short for third through last
   field.)  Ranges can be reversed, e.g., -f5-2 or even -c80-1.
   If a character range is reversed, any characters in those
   positions will be copied to the output in reverse order.

Options:

   -h           Help.  (This screen.)
   -s           Suppress lines with no delimiters in case of
                -f option.  Otherwise, lines with no delimiters
                are passed through unchanged.
   -c&lt;list&gt;     The list specifies character positions.
   -f&lt;list&gt;     The list specifies field numbers.
   -d&lt;delims&gt;   The specified characters are used as the field
                delimiters with the -f option.  Any number of
                delimiters can be specified.  The default is
                the tab character.
   -r           Repeated delimiters are treated as if only a
                single delimiter had appeared.
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="csh.htm">Previous</a> |
<a href="date.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		date
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				date
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm"><b>date</b></a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
date<br/>
<small><a href="cut.htm">Previous</a> |
<a href="des.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Print the Date and Time

Usage:  dt [-nh-] [+format]

   date prints the date and time to stdout.  The default format
   shows the day of the week, the date and time of day in
   24-hour notation.  If an operand beginning with + is given,
   the format of the output is controlled by the field
   descriptors and other text in that operand.

   This command is normally stored in the file dt.exe and
   invoked with an alias so it can be used from cmd.exe without
   colliding with the internal cmd.exe date function.

Options:

   +format   When a format string is specified, each field
             descriptor is replaced with its corresponding
             value.  All other characters are copied to the
             output without change.

             Field Descriptors:

               %a   Abbreviated weekday.
               %A   Full weekday name.
               %b   Abbreviated month.
               %B   Full month.
               %c   Date and time in the format
                    mm/dd/yy hh:mm:ss.
               %C   Century as a decimal number 00 to 99.
               %d   Day of the month, 01 to 31.
               %D   Date in the format mm/dd/yy.
               %e   Day of the month as a 2-digit number
                    with leading space fill.
               %h   A synonym for %b.
               %H   Hour (24 h clock), 00 to 23.
               %I   Hour (12 h clock), 01 to 12.
               %j   Day of the year, 001 to 366.
               %m   Month, 01 to 12.
               %M   Minute, 00 to 59.
               %n   CarriageReturn/NewLine combination.
               %p   AM or PM.
               %r   Time, same as "%I:%M:%S %p".
               %s   Hundredths of seconds, 00 to 99.
               %S   Seconds, 00 to 61.
               %t   A tab character.
               %u   Weekday as a decimal number,
                    1 = Monday to 7 = Sunday.
               %U   Week of year (Sunday as the first day
                    of each week), 01 to 53.
               %V   Week of year (Monday as the first day
                    of each week), 01 to 53.
               %w   Weekday as a decimal number,
                    0 = Sunday to 6 = Saturday.
               %W   Week of year (Monday as the first day
                    of each week), 00 to 53.
               %x   Date in mm/dd/yy format.
               %X   Time in hh:mm:ss format.
               %y   Year, 00 to 99.
               %Y   Year with century.
               %Z   Timezone name or no characters if the
                    timezone cannot be determined.
               %%   Percent sign character.

   -n        Don't automatically append a Carriage Return-
             Line Feed sequence to the end of the output.
   -h        Help.
   --        End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cut.htm">Previous</a> |
<a href="des.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		des
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				des
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm"><b>des</b></a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
des<br/>
<small><a href="date.htm">Previous</a> |
<a href="diff.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        DES Data Encryption

Usage:  des [-edbhnrz-] [-k key] [ file1 file2 ... ]

   des is a filter that encrypts or decrypts data read from the
   files you specify, one after another, to stdout with the Data
   Encryption Standard (DES).  If no files are given, des reads
   from stdin.  If there are multiple files, they're simply
   concatenated as they're read.

   Either -e (encrypt) or -d (decrypt) must be specified. If the
   key is not given on the command line with the -k option, des
   will prompt for it, suppressing echo.

Options:

   -e       Encrypt.
   -d       Decrypt.
   -b       Electronic Code Book (ECB) mode is used.  The default
            is to use DES Cipher Block Chaining (CBC) mode with
            an initial vector (IV) of all zeros.  Under ECB mode,
            each block of 8 bytes is enciphered independently,
            depending only on the key.  Under CBC mode, the
            enciphering of each block also depends on the data
            in the previous blocks.  The default CBC mode is
            considered somewhat more secure.
   -k key   Encryption key, typed as a simple ASCII string.  With
            an ASCII key, DES ignores the low order bit of each
            key byte but the high order bit is set for odd parity,
            thus retaining the information contained in the low
            order bit.
   -x       Hex key.  The key string is a sequence of up to 16 hex
            characters, right padded with zeros.  With a hex key,
            the low order bit of each byte is again ignored per
            the DES algorithm.  This allows the use of any arbi-
            trary 56-bit key, including bytes representing control
            characters that could not be typed.
   -h       Help.  (This screen.)

Special Interchange Options:

   Not all DES implementations are the same.  There are a number of
   early implementations in circulation that either poorly or
   improperly implement DES.  Cipher Block Chaining may not be
   supported, forcing the use of the -b option.  You may also
   discover other flaws, necessitating that you experiment with
   some of these special options:

   -n       Suppress parity calculation on an ASCII key.  Just use
            the low-order 7 bits of each character as-is.
   -r       Convert all \r\n sequences to \n on input and all
            \n characters to \r\n sequences on output.  (Some
            implementers have used the C library stdio read and
            write routines but have forgotten to use binary mode.)
   -z       Do not mark the last block with a length; just fill it
            with binary zeros.  If you encipher, then decipher a
            file this way, the result will be padded with zeros
            out to an 8-byte boundary.

   If you encounter problems exchanging encrypted data with
   another DES implementation, you should try all the various
   combinations of the -b, -n, -r and -z options.  (We've seen
   one very poor implementation of DES that had all these flaws.)

Notes:

   1.  If you lose the key to a file encrypted with DES, there is
       no known way to decrypt it.  The data is lost.

   2.  When choosing keys, avoid anything obvious that someone else
       might easily guess.  E.g., don't use just your name or your
       date of birth or a common word.  Instead, choose a key with
       a seemingly random mix of alphanumeric and punctuation
       characters.

   3.  No encryption system should be considered perfectly secure.
       Although there are no known practical methods for attacking
       DES, such methods may exist.

   4.  Encryption can only protect data that's actually encrypted.
       If you have copies of the clear text on your disk, anyone
       with access to your machine may be able to read the data.
       Also, even when a file is deleted, the contents may remain
       on your disk, accessible to anyone with knowledge of the
       file system.

   5.  If you would like to compress encrypted data, e.g., with
       utilities such as WinZip, compress first, then encrypt.
       The encryption process tends to destroy the redundancy in
       the data that compression programs depend on.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="date.htm">Previous</a> |
<a href="diff.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		diff
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				diff
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm"><b>diff</b></a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
diff<br/>
<small><a href="des.htm">Previous</a> |
<a href="dim.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Compare Files or Directories

Usage:  diff [-bBeEfhiNqrsvw!-] [-m minmatch] [-n maxbest] [-o maxwindow]
                 [-Dstring] [-dstring] oldpath newpath

   diff produces a list of differences between two files or
   directories.  The working assumption is that newpath is a
   newer version of whatever's in oldpath.  If they're files,
   diff assumes they contain ascii text but if it encounters a
   file containing lots of binary data, it switches to a binary
   comparison mode to avoid dumping gibberish to the screen.

   Comparing files, diff looks for minimal sections of change.
   Each difference is shown as an add, delete or change with the
   appropriate line numbers or line number ranges for  each file.
   Following are texts of the differing section.  Lines that have
   been deleted are flagged with '&lt;'; lines that have been added
   are flagged with '&gt;'.  Alternately, diff can be used to produce
   merged listings with #ifdefs for the C compiler or highlighting
   for quick visual scanning.

   The algorithm for comparing files is to maintain sliding
   windows into each of the two files, adding new lines to each
   window until there is a matching sequence of some minimal
   number of lines at the bottom of each window.  That minimum
   can be configured via the -m option.

   Once that minimal match is found, diff begins to compare the
   two windows in an attempt to minimize the number of lines in
   each that cannot be matched against the other.  If the combined
   total number of lines in the two windows is less than some
   heuristic limit, set via the -n option, diff will do this
   comparison with a recursive algorithm guaranteed to find the
   absolute best solution.  But because the computation involved
   in this approach grows very quickly as the number of lines
   increases, diff switches to a heuristic approach for more
   complex window comparisons, breaking the windows down into
   smaller segments against which the exhaustive approach can
   be used.

   Comparing directories, diff builds lists of all the files
   they contain, searching all the way down through the tree.
   The lists are sorted, then compared.  If the same filename
   exists in each directory tree, a quick binary comparison is
   normally made of whether they contain the same or different
   data.  If -r is specified, the diff text comparison is done
   recursively the whole way down the two trees.

   If one of the arguments to diff is a file and the other is a
   directory, diff will look for and compare against a file of
   that same name in the directory.

Options:

   -b           Blank spaces of any length compare equal.  Ignore
                any leading or trailing white space on each line.
   -B           Binary comparison even on text files.
   -Dstring     Produce a merged #ifdef'ed listing, with the string
                being defined meaning use the older version. (Newer
                version is intentionally the default.)
   -dstring     Same as -Dstring, but add comments of the form
                /* string */ to the #else and #endif directives
                that are generated.
   -e           Produce an ed script which, when a w (the write
                command) is appended to it, can be used to
                transform the first file into the second.
   -E           Turn off highlighting of empty lines.  By default,
                if highlighting is used to show areas of change,
                even empty lines will have ANSI sequences at the
                beginning and end so that if more is used to display
                the output with the default color stretch mode on,
                empty lines will still be highlighted.
   -f           Force diff-style comparison to continue even on files
                that appear to contain binary data.
   -h           Help.  (This screen.)
   -i           Ignore character case.
   -m minmatch  Minimum match length to insist on before resynchro-
                nizing two files.  (Default is 20 lines.)
   -n maxbest   Maximum total number of lines in the two windows
                against which diff will attempt an absolute best
                match.  If the total is larger, it will attempt
                to break the problem down with heuristics.
                (Default is 15 lines.)
   -N           Ignore differences in line endings.  NewLine and
                CarriageReturn-NewLine endings will be considered
                equal.
   -o maxwindow Maximum total number of lines that diff will
                allow to be collected into the two windows before
                it gives up looking for a resynchronizing match.
                (Default is 4000 lines.)
   -q           Quiet:  suppress warnings about files containing
                binary data.
   -r           Recursively diff the contents of any subdirectories.
   -s           Add spaces to separate the a (add), c (change) or d
                (delete) characters from the line numbers in a diff
                report for better readability.
   -v           Verbose listing of all the contents of any entire
                subdirectory added or deleted.
   -w           White space is ignored totally.
   -!           Produce merged, highlighted version.  Text that's
                unchanged is normal, deleted text is red, new text
                is green.
   --           End of options.

Colors:

   You may set your own choices for screen colors using these
   environmental variables:

      Name         Use                      Default
      COLORS       Normal screen colors     &lt;null string&gt;
      ADDITIONS    Lines added              Bright White on Green
      DELETIONS    Lines deleted            Bright White on Red

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The names
   of the colors and the words bright, dim, reverse and on may be
   in either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.   ADDITIONS
   and DELETIONS inherit from COLORS.  If COLORS is null, diff
   uses the current screen colors it finds at startup.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="des.htm">Previous</a> |
<a href="dim.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dim
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				dim
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm"><b>dim</b></a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dim<br/>
<small><a href="diff.htm">Previous</a> |
<a href="dirbox.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Discard any ANSI escape sequences in the input stream

Usage:  dim [-h-] [ file1 file2 ... ]

   dim deletes any ANSI escape sequences as it copies text from
   each of the files you specify onto stdout.  If several files
   are given, they're concatenated one after another to the output.
   If no files are given, dim reads from stdin.

Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="diff.htm">Previous</a> |
<a href="dirbox.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dirbox
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				dirbox
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm"><b>dirbox</b></a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dirbox<br/>
<small><a href="dim.htm">Previous</a> |
<a href="directory.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Directory Selection Dialog Box

Usage:  dirbox [-efnQh-] [-i path] [-t title]

   dirbox displays a directory selection dialog box.  If a directory
   is selected, its name is written to stdout.

Options:

   -e         No edit box.
   -f         Browse files as well as directories.
   -i path    Initial directory selection.
   -n         No new folders button.
   -Q         Quote filenames that contain any of these special
              characters,all of which have significance to the
              C shell:  space, (), [], {}, ~, ; and &amp;.  (The quotes
              can be stripped off using the eval command.)
   -t title   Title.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dim.htm">Previous</a> |
<a href="directory.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		directory
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				directory
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm"><b>directory</b></a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
directory<br/>
<small><a href="dirbox.htm">Previous</a> |
<a href="dskread.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        directory:  Find special folder locations

Usage:  directory [-ah!-] [allusers] foldernames ...

   directory returns the actual paths to the specified special
   folders, one per line.  If no foldernames are specified,
   directory lists the symbolic names and locations of all of
   them.  There are four types of these folders:

   1.  System folders, e.g., the windows directory containing
       the operating system files.
   2.  Folders for individual users.  For example, each user
       has his own My Music folder.
   3.  Folders shared by all users, e.g., the directory of
       desktop items shared by all users.
   4.  Virtual folders that don't actually exist as actual
       directories.  For example, the desktop each user sees
       is a virtual folder merging two physical folders, the
       individual user's desktop folder plus the desktop folder
       shared by all users.

   directory can only return the path to a folder that
   actually exists as a physical directory.  It cannot
   return a path to a virtual folder because virtual folders
   don't really exist as physical directories.

   These are the folders for which directory can tell you
   the location:

   System folders:

      system          The Windows system folder.
      windows         The Windows directory.

   Folders for individual users:

      cdburning       The staging area for files waiting to
                      be written to CD.
      cookies         Repository for Internet cookies.
      history         Common repository for Internet history
                      items.
      internetcache   Repository for temporary Internet files.
      localappdata    Data repository for applications on
                      this machine.
      nethood         Any link objects that may exist in the
                      user's My Network Places virtual folder.
      printhood       Any link objects that may exist in the
                      user's Printers virtual folder.
      profile         The user's profile folder.
      recent          Shortcuts to the user's most recently
                      used documents.
      sendto          The directory containing any Send To
                      menu items.

   Folders that exist both per-user and for all users:

      admintools      Administrative tools.  The Microsoft
                      Management Console will save customized
                      consoles to this directory.
      altstartup      The startup program group.
      appdata         Repository for application-specific data.
      desktop         Directory for storing items on the
                      desktop.
      favorites       Repository for favorite items.
      mydocuments     Repository for documents.
      mymusic         Repository for music files.
      mypictures      Repository for image files.
      myvideo         Repository for video files.
      programs        The All Programs group in the Start menu.
      startmenu       Directory containing the Start menu
                      items.
      startup         Directory containing the Startup
                      program group.  The system starts
                      these programs when the user logs on.
      templates       Directory containing templates.
		

   If there are both per-user and all users versions of a
   folder, directory returns the path to the current user's
   folder by default.  Prefacing the folder's name by
   "allusers" (as a separate word) or using the -a option
   causes directory to return the path to the shared folder
   used by all users.

   To get the per-user version of a special folder for a
   user other than one current user, run directory using
   the su command.  (See "su -h" for more information.)
     
Options:

   -a         Allusers version of the folder.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dirbox.htm">Previous</a> |
<a href="dskread.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dirs
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				dirs
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm"><b>dirs</b></a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dirs<br/>
<small><a href="cls.htm">Previous</a> |
<a href="echo.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        List the Current Directory Stack

Usage:  dirs [-h-]

   Show the list of fully-qualified directory pathnames on the current
   directory stack, highlighting the current disk:directory pair.

   Hamilton C shell maintains a stack representing the current directory
   and any previous current directories the user has saved there.

   (See also the cd, pushd, popd and rotd commands.)

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="cls.htm">Previous</a> |
<a href="echo.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dskread
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				dskread
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm"><b>dskread</b></a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dskread<br/>
<small><a href="directory.htm">Previous</a> |
<a href="dskwrite.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Read Raw Sectors from a Disk

Usage:  dskread [-bcdEhHLS-] [-n name] [-N sectors]
                 [-s size] [-t tracks]
                 [ disk: ] [ &lt;sectorlist&gt; ]

   dskread copies low-level raw sectors on the disk you specify
   to stdout.

   In conjunction with dskwrite, dskread is most useful as a quick
   diskette duplication utility:  you can read a whole diskette
   image into a file with dskread, then write it back out with
   dskwrite to a new diskette.  But it's also useful for restoring
   a long stream of data dumped across a series of diskettes with
   dskwrite.

   The disk is given as a a single alphabetic drive letter plus a
   colon.  If no disk is specified, the first logical drive is
   assumed (in most machines, this is the a: drive).

Operation:

   dskread normally starts at cylinder 0, head 0, sector 0 and
   walks through the whole disk, reading all the sectors on a track
   under one head and then all tracks in a cylinder before
   repositioning the heads to the next cylinder.

   dskread always reads whole sectors except when reading from a
   file using the -d option.

Options:

   -b            Boot record.  Skip sector 0 on the assumption it
                 simply contains a standard boot record and
                 parameter block corresponding to the particular
                 media.
   -c            Continuation.  Assume the data has been split
                 across several diskettes.  After each disk
                 has been read, prompt for the next one.  If
                 -d is specified also, the filename extension on
                 each disk will be the disk number, i.e., 001,
                 002, 003, etc.
   -d            Dummy filesystem.  Assume the data is in a single
                 file on the disk.  If neither the -d nor the -b
                 options is given, the disk will be read beginning
                 with sector 0.
   -h            Help.  (This screen.)
   -n &lt;name&gt;     The filename to look for if the -d (dummy file-
                 system) option is used.  Default is 'bindata'.
   -S            Share the drive for read/write access by other
                 processes.
   --            End of options.


Formatting:

   Default is to let Windows NT try to determine the formatting
   that was used.  If the disk was written in an unusual format
   or has non-standard data in sector 0, the following options
   can be used to override OS/2's attempt to guess the format:

   -E            Extended density (2.88M) format.
   -H            High density format.
   -L            Low density format.
   -N &lt;sectors&gt;  Sectors per track.
   -s &lt;size&gt;     Sector size.  Normally only 512 is supported but,
                 depending on your hardware, you may also be able
                 to create 128, 256 or 1024-byte sectors.
   -t &lt;tracks&gt;   Number of tracks.

Sector lists:

   Optionally, you can specify a list of sectors you want read.
   Sectors are given in

                 (cylinder, head, sector)

   coordinates with parentheses around and commas or white space
   to separate the numeric values you write.  Cylinders, heads and
   sectors are counted from zero and can be specified in decimal,
   hex or octal.

   A single sector specified alone means just that sector.
   Listing several separated by commas or spaces means each one
   individually.

   A pair of sectors joined by a hyphen means a range:  all the
   consecutive sectors beginning with the first and running
   through to the second.

   Specifying a negative number as an ordinate means use the
   highest possible value for that disk.

   If any of the ordinates of a sector are omitted, they're assumed
   to be zero except when it closes a range, in which case it means
   use the highest possible value.

Examples:

  1.  To duplicate a whole diskette image, autoformatting the
      output media if it's not already formatted:

          dskread a: &gt; dskimage.a
          dskwrite -av a: &lt; dskimage.a

  2.  To use a diskette as a serial archive media:

      The -d option allows you to request just enough dummy file
      system "envelope" around the otherwise arbitrary data you
      intend to write to ensure the disk can still be used with
      other Windows NT utilities.  Here's an example writing the
      result of a tar'ing (archiving) a whole directory to a series
      of diskettes, again autoformatting:

          tar -cs mydir | dskwrite -avcd -n mydir a:

      It's restored with

          dskread -dc -n mydir a: | tar -xs

      The diskettes used do not all have to be the same density;
      any mix of high and low is okay.  But remember that if a disk
      isn't already formatted, there's no way for dskwrite to tell
      whether it should be high or low density; any disks it has
      to format will all be formatted the same way.

  3.  Reading or writing tar-format floppies:

      Many UNIX machines support the use of a floppy as a tar
      archive media, just as if it were a tape.  Every sector
      contains data; there's no filesystem and no boot record
      at all.  This allows the greatest possible amount of data
      to be written to the disk and it does allow interchange
      with a UNIX machine, but tar-format floppies are not
      readable by any ordinary utilities.
      
      Here's an example, tar'ing mydir to a single tar-format
      floppy:

          tar -cs mydir | dskwrite -vx a:

      It's restored with

          dskread a: | tar -xs

      If the amount of data you're archiving is more than will
      fit on one diskette, use the -c option with dskread and
      dskwrite.  But since there's no labeling recorded on
      the diskettes and the data just runs continuously from
      one diskette to the next, you will need to pay attention
      to the order in which they're written or read.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="directory.htm">Previous</a> |
<a href="dskwrite.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		dskwrite
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				dskwrite
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm"><b>dskwrite</b></a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
dskwrite<br/>
<small><a href="dskread.htm">Previous</a> |
<a href="du.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Write Raw Sectors to a Disk

Usage:  dskwrite [-abcdEfFhHLSTvxz-] [-Z!] [-n name] [-N sectors]
                 [-s size] [-t tracks] [-V volid]
                 [ disk: ] [ &lt;sectorlist&gt; ]

   dskwrite copies stdin to the low-level raw sectors on the disk
   you specify.

   In conjunction with dskread, dskwrite is most useful as a quick
   diskette duplication utility:  you can read a whole diskette
   image into a file with dskread, then write it back out with
   dskwrite to a new diskette.  But it's also useful for dumping
   a long stream of data across a series of diskettes, formatting
   and filling each with as much as possible before requesting
   the next one.

   The disk is given as a single alphabetic drive letter plus a
   colon.  If no disk is specified, the first logical drive is
   assumed.  (In most machines, this is the a: drive.)

Operation:

   dskwrite normally starts at cylinder 0, head 0, sector 0 and
   walks through the whole disk, writing all the sectors on a track
   under one head and then all tracks in a cylinder before
   repositioning the heads to the next cylinder.  You can also
   cause dskwrite to write to just specific sectors by giving it
   a sector list.

   dskwrite always writes whole sectors and, if requested,
   formats whole tracks.  If the last sector is only partially-
   used, dskwrite fills it out with binary zeros.

   To avoid conflicts with other applications, dskwrite always
   locks a drive before actually writing to it.

Basic Options:

   -a            Autoformat.  If the disk appears to be unformatted,
                 automatically do a low-level format of the entire
                 disk.
   -f            Low-level format the entire disk as data is copied
                 to it from stdin.
   -F            Low-level format the entire diskette and create an
                 empty FAT filesystem.  Do not read anything from
                 stdin.
   -S            Share the drive for read/write access by other
                 processes.
   -v            Verify.  Read back and verify each write.
   -h            Help.  (This screen.)
   --            End of options.

Options for using the disk as a serial media:

   -b            Boot record.  Write a simple non-system disk
                 boot record and parameter block corresponding to
                 the particular media into sector 0.  If writing
                 the entire disk, continue with the next sector.
   -c            Continuation.  If there's more data on stdin
                 after an entire disk has been written, prompt
                 for a new disk to be inserted and continue.  If
                 -d is specified also, the filename extension on
                 each disk will be the disk number, i.e., 001,
                 002, 003, etc.
   -d            Dummy filesystem.  Write a boot record and a FAT
                 filesystem into the initial sectors allocating
                 whatever is written to a single file.
   -n &lt;name&gt;     The filename to be given to any data written
                 onto the disk if the -d (dummy filesystem) option
                 is used.  Default is 'bindata'.

Formatting:

   Default is to let Windows NT try to determine how the media
   has been formatted and not to reformat the disk.

   If the disk isn't already formatted and the -a (autoformat)
   option is selected or if formatting is explicitly requested
   with the -f or -F options, dskwrite will do a low-level
   format of the media.

   Dskwrite takes its specification of the format (e.g., low- or
   high-density) from the following sources, in decreasing priority:

     1.  Explicit specifications on the command line.
     2.  The Windows NT kernel's guess at the media format, assuming
         the disk is already formatted and not being re-formatted.
     3.  The format parameters in the boot sector copied from stdin,
         assuming neither the -b nor the -d options is given.
     4.  The previous format of the media, assuming it's already
         formatted in a standard configuration but being reformatted.
     5.  The highest-density format supported by the drive.

   Unless you specify -b or -d, dskwrite will expect to copy a
   compatible disk image from stdin including a suitable boot
   sector, etc.  That happens automatically when dskread'ing
   a whole disk is paired with dskwrite'ing a whole disk but
   not otherwise.

Explicit Format Specification Options:

   -E            Extended density (2.88M) format.
   -H            High density format.
   -L            Low density format.
   -N &lt;sectors&gt;  Sectors per track.
   -s &lt;size&gt;     Sector size.  Normally only 512 is supported but,
                 depending on your hardware, you may also be able
                 to create 128, 256 or 1024-byte sectors.
   -t &lt;tracks&gt;   Number of tracks.

Other Advanced Options:

   -T            Low-level format the media track-at-a-time as
                 the disk is written.  Only as much of the disk
                 as is being written to will be formatted.
   -V &lt;volid&gt;    The volume identifier to be written into the
                 dummy filesystem header if -F or -d is used.
                 (Ignored otherwise.)
   -x            Force use of a non-standard format or writing of
                 non-standard format parameters to the boot sector.
   -z            Zero-length files written with -d option should
                 still be added to the directory.  (Otherwise,
                 they're ignored.)
   -Z!           Force write to a hard disk.  Warning! Very risky
                 unless you know exactly what you're doing.

Sector lists:

   Optionally, you can specify a list of sectors you want written.
   Sectors are given in

                 (cylinder, head, sector)

   coordinates with parentheses around and commas or white space
   to separate the numeric values you write.  Cylinders, heads and
   sectors are counted from zero and can be specified in decimal,
   hex or octal.

   A single sector specified alone means just that sector.
   Listing several separated by commas or spaces means each one
   individually.

   A pair of sectors joined by a hyphen means a range:  all the
   consecutive sectors beginning with the first and running
   through to the second.

   Specifying a negative number as an ordinate means use the
   highest possible value for that disk.

   If any of the ordinates of a sector are omitted, they're assumed
   to be zero except when it closes a range, in which case it means
   use the highest possible value.

Examples:

  1.  To duplicate a whole diskette image, autoformatting the
      output media if it's not already formatted:

          dskread a: &gt; dskimage.a
          dskwrite -av a: &lt; dskimage.a

  2.  To use dskwrite to format a disk with an empty FAT file
      system, use either:

          dskwrite -F a:
      or:
          dskwrite -df a: &lt; nul

  3.  To rewrite just the boot sector to make it a non-system
      disk:

          dskwrite -b a: &lt; nul

  4.  To use a diskette as a serial archive media:

      The -d option allows you to request just enough dummy file
      system "envelope" around the otherwise arbitrary data you
      intend to write to ensure the disk can still be used with
      other Windows NT utilities.  Here's an example writing the
      result of a tar'ing (archiving) a whole directory to a series
      of diskettes, again autoformatting:

          tar -cs mydir | dskwrite -avcd -n mydir a:

      It's restored with

          dskread -dc -n mydir a: | tar -xs

      The diskettes used do not all have to be the same density;
      any mix of high and low is okay.  But remember that if a disk
      isn't already formatted, there's no way for dskwrite to tell
      whether it should be high or low density; any disks it has
      to format will all be formatted the same way.

  5.  Reading or writing tar-format floppies:

      Many UNIX machines support the use of a floppy as a tar
      archive media, just as if it were a tape.  Every sector
      contains data; there's no filesystem and no boot record
      at all.  This allows the greatest possible amount of data
      to be written to the disk and it does allow interchange
      with a UNIX machine, but tar-format floppies are not
      readable by any ordinary utilities.
      
      Here's an example, tar'ing mydir to a single tar-format
      floppy:

          tar -cs mydir | dskwrite -vx a:

      It's restored with

          dskread a: | tar -xs

      If the amount of data you're archiving is more than will
      fit on one diskette, use the -c option with dskread and
      dskwrite.  But since there's no labeling recorded on
      the diskettes and the data just runs continuously from
      one diskette to the next, you will need to pay attention
      to the order in which they're written or read.

Non-standard Diskette Formats:

   If you write anything but a standard boot record into the boot
   sector, you will not be able to read it with anything but
   dskread and even then only if you tell it explicitly what
   format was used.  Without a standard parameter block in the
   boot sector, the Windows NT diskette device driver just can't
   tell on its own how the diskette was written.

   Similarly, it's possible you may be able to write a non-
   standard format (e.g., a sector size other than 512 bytes,
   etc.) depending on your hardware.  But doing that may make
   the diskette impossible to read on other machines.

   For that reason, dskwrite normally won't let you write a boot
   record that doesn't match the actual format of the diskette
   nor will it let you write anything other than one of the
   standard format.  To override these checks, you must use the
    -x option.

Writing to a Hard Disk:

   Deliberately, dskwrite normally only lets you write to diskettes.

   Writing to a hard disk is very risky since the chance of
   catastrophic loss of information is so high.  Also, only ESDI
   and SCSI disk controllers routinely map out bad blocks, so
   reading the disk image from one drive and writing it to another
   is unlikely to work if there are bad blocks on either one.

   To force dskwrite to write to a hard disk, you must specify
   the -Z! option, meant to be hard to accidentally type.   In
   effect, the -Z! option means you understand the risk you're
   taking.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dskread.htm">Previous</a> |
<a href="du.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		du
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				du
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm"><b>du</b></a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
du<br/>
<small><a href="dskwrite.htm">Previous</a> |
<a href="env.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        List Disk Usage Statistics

Usage:  du [-acdxvh-] [ disk1 disk2 ... ] 

   du prints statistics showing the total, used and free space on
   each disk partition.  If no disk partitions are specified, du
   looks for a DRIVEMASK environmental variable that can be used
   to mask off just the drives you want reported.  The DRIVEMASK
   is specified as a list of drive letters; ranges are allowed.
   Otherwise, all partitions beginning with c: are reported.
   The current disk's statistics are highlighted.  Sizes are
   normally reported in binary (1000*1024) megabytes.

Options:

   -a    If no disks are specified, report on all disks.
   -c    If no disks are specified, report on just the current disk.
   -d    Report in decimal (1,000,000) megabytes.
   -x    Report in hex (1024*1024) megabytes.
   -v    Verbose.  Give detailed cluster information.
   -h    Help.
   --    End of options.

Colors:

   You may set your own choices for screen colors using these
   environmental variables:

      Name         Use                             Default
      COLORS       Normal screen colors            &lt;null string&gt;
      HIGHLIGHT    Current disk                    Bright

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The names
   of the colors and the words bright, dim, reverse and on may be
   in either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.   HIGHLIGHT
   inherits from COLORS.  If COLORS is null, du uses the current
   screen colors it finds at startup.  Specifying COLORS=none
   turns off all use of color.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dskwrite.htm">Previous</a> |
<a href="env.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		echo
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				echo
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm"><b>echo</b></a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
echo<br/>
<small><a href="dirs.htm">Previous</a> |
<a href="eval.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Echo the Arguments to Standard Output

Usage:  echo [-n2h-] [ text ]

   Echo the text to standard output (or stderr), substituting for
   certain character sequences preceded by the escapesym character.
   (The escapesym character is normally '^' but can be changed with
   the set command.)

      ^a  Audible Alert (Bell)       ^r  Carriage Return
      ^b  BackSpace                  ^t  Tab
      ^f  Form Feed                  ^v  Vertical Tab
      ^n  NewLine                    ^^  Single escapesym

   The escapesym character may also be followed with the numeric value
   of the intended substitution character where the value is specified
   in hex (as an 'x' followed by hex digits) or in octal.

Options:

   -n   Don't automatically append a Carriage Return/Line Feed
        sequence to the end of the output.
   -2   Write to stderr instead of stdout.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="dirs.htm">Previous</a> |
<a href="eval.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		env
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				env
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm"><b>env</b></a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
env<br/>
<small><a href="du.htm">Previous</a> |
<a href="exec.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        env:  Execute a command with a new environment

Usage:  env [-] [-iCDNtTwh-] [ name=value ] ... [ command ]

   env will modify the current environment according to the
   arguments and run an arbitrary command.

   The command can refer to any executable file or to a C shell
   command or alias.  If a complete path is not specified, env
   will look through the search path.  If an extension is not
   specified, env will try all the usual possibilities:  .csh,
   .exe, .com, .cmd and .bat.  If a corresponding executable
   file cannot be found, env will assume the command is an
   internal C shell command or alias.  If no command is
   specified, env will print out the resulting environment,
   one name=value pair per line.

Options:

   -             Obsolete version of -i.
   -i            Only the environment specified on the command
                 line will be passed to the child.  The inherited
                 environment is not.
   -C            Start up a copy of C shell to run each command.
   -D            Any environment variables set to a null string
                 on the command line will be deleted from the
                 environment.
   -N            New console.  Open a new window to run the
                 command.  Meaningful only when running a
                 console application.
   -t            Trace mode.  The command line is written to
                 stderr just prior to invocation.
   -T            Change the title bar when starting the child.
   -w            Wait for the child to exit before returning,
                 even if it's running in a new window.

   -h            Help.  (This screen.)
   --            End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="du.htm">Previous</a> |
<a href="exec.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		eval
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				eval
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm"><b>eval</b></a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
eval<br/>
<small><a href="echo.htm">Previous</a> |
<a href="hashstat.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Parse &amp; Evaluate at Run-Time

Usage:  eval [-h-] [ arbitrary_command_text ]

   Evaluate the words following on the command line as text to be parsed
   and evaluated as statements only after all the substitutions and wild-
   carding have been done.

   Command or variable substitutions aren't normally done until after
   statements have already been parsed and compiled into an internal form
   and, if it's a background statement, passed off to a background child
   thread.

   The eval command is useful if either:

   -  You want command or variable substitutions to be recognized as
      any of the reserved words of the language or as an alias, or
   -  You want the substitutions done before a background thread is
      started.


Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="echo.htm">Previous</a> |
<a href="hashstat.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		exec
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				exec
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm"><b>exec</b></a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
exec<br/>
<small><a href="env.htm">Previous</a> |
<a href="fgrep.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        exec:  Execute a command

Usage:  exec [-CtTh-] [&lt;command&gt;]

   exec will run an arbitrary command.

Options:

   -C            Start up a copy of C shell to run each command.
   -t            Trace mode.  Each generated command line is
                 written to stderr just prior to invocation.
   -T            Change the title bar when starting the child.

   -h            Help.  (This screen.)
   --            End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="env.htm">Previous</a> |
<a href="fgrep.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		fgrep
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				fgrep
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm"><b>fgrep</b></a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
fgrep<br/>
<small><a href="exec.htm">Previous</a> |
<a href="filebox.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Fast String Search (Fast grep) of Text Files

Usage:  fgrep [-hbcilnqsvwx-] [-f ptrnfile] [ pattern ] [ file1 file2 ...]

   fgrep does a quick, deliberately simple string search.  It
   does not use regular expressions, but does have some diff-style
   options for ignoring upper-/lower-case differences or treating
   white spaces of any length as equal, etc.  You can also give it
   a list of strings you want searched for, one per line in a
   pattern file or via stdin.

   Each matching line is copied to stdout.  If more than one file
   is being searched, each line is preceded by the name of file
   where the matched occurred plus a ':' character.

Options:

   -h           Help.  (This screen.)
   -b           Blank spaces of any length compare equal.  Ignore
                any leading or trailing white space on each line.
   -c           Just print a count of the number of lines which
                match.
   -f ptrnfile  Read the patterns from a file.
   -i           Ignore character case.
   -l           Show just the names of any files containing at
                least one match.  Show each name only once, each
                on a separate line.
   -n           Show the line numbers of any matches.
   -q           Quiet:  don't show filenames where the matches
                occur.
   -s           Read the patterns from stdin.
   -v           Invert the pattern:  show all lines EXCEPT those
                that match.
   -w           White space is ignored totally.
   -x           Exact match:  the whole line must match the pattern.
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="exec.htm">Previous</a> |
<a href="filebox.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		filebox
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				filebox
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm"><b>filebox</b></a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
filebox<br/>
<small><a href="fgrep.htm">Previous</a> |
<a href="getopt.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        File Selection Dialog Box

Usage:  filebox [-acmnopQsh-] [-i dir] [-e ext] [-f type pattern] [-i file]
      [-I index] [-t title]

   filebox displays an Explorer-style file selection dialog box
   with either an Open or a Save button.  Any files selected are
   written, one per line, to stdout.

Options:

   -a         File must exist.  (Open dialog only.)
   -c         Ask if file is to be created.  (Open dialog only.)
   -e type pattern  Default extension if none specified.  (Save
                    dialog only.)  This type default extension
                    is automatically added to the head of the list
                    of filetype filters.
   -f type pattern  Filetype filter.  If none specified, default
                    is '-f All files "*.*"'. To specify multiple
                    patterns for one type, use semicolons to separate
                    them, e.g., '-f "C Language" "*.c;*.h"'.  Multiple
                    filters may be specified with multiple -f options.
   -F file    Initial filename.
   -i dir     Initial Directory.
   -I index   Initial index in filters.
   -m         Multiple files may be selected.
   -o         Verify overwrite if saving (-s).
   -p         Leading path must exist.
   -Q         Quote filenames that contain any of these special
              characters,all of which have significance to the
              C shell:  space, (), [], {}, ~, ; and &amp;.  (The quotes
              can be stripped off using the eval command.)
   -s         Save dialog.
   -t title   Title.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="fgrep.htm">Previous</a> |
<a href="getopt.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		getopt
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				getopt
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm"><b>getopt</b></a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
getopt<br/>
<small><a href="filebox.htm">Previous</a> |
<a href="grep.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Parse Command-Line Options

Usage:  getopt [ -hqC- ] [ -c cmdname ] optionslist arguments ...

   getopt is used in shell scripts for parsing command line
   options into a canonical form, where each option is presented
   in a separate word and any option that takes an argument has
   the argument given in the Next word.

   The list of option characters that should be recognized is
   given as the optionslist argument, e.g., abcz if -a, -b, -c
   and -z options are recogized.  If any option has a colon
   following, e.g., ab:cz, then it requires an argument.

   Scanning for options stops at the first argument which does
   not begin with '-' or '/' or which consists only of '--' or
   '//'.  The SWITCHCHARS environment variable may be used to
   specify a different set of characters other than '-' or '/'
   as the option switch characters to be recognized on input.
   On output, the switch character will be the one that was
   used with that option.


Options:

   -h           Help.  ( This screen. )
   -q           Enclose any output words containing C shell word
                separator characters inside double quotes so that
                the word will not be split up when assigning it
                to a variable in a script.  The word Separators
                are:  space, ( , ), ;, |, &amp;, &lt;, &gt;, \n, \r and \t.

                Note:  This option is normally used with eval, e.g.,

                  eval set args = `getopt -q ...`

   -c cmdname   Any Error messages that are produced should say
                they were generated by cmdname, not getopt.
   -C           Canonicalize the output to use '-' as the switchchar
                no matter what switchchar was actually used.
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="filebox.htm">Previous</a> |
<a href="grep.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		grep
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				grep
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm"><b>grep</b></a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
grep<br/>
<small><a href="getopt.htm">Previous</a> |
<a href="head.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Regular Expression Pattern Search of Text Files

Usage:  grep [-hcilnqsv-] [-f ptrnfile] [ pattern ] [ file1 file2 ...]

   grep uses special patterns called regular expressions to filter
   what it reads from stdin or from any files you specify.

   Regular expressions are written in this notation, in decreasing
   precedence:

      c        Any ordinary character matches itself.
      \c       Match the literal character c.  Certain
               characters are treated specially:

                 \a  Audible Alert (Bell)    \r  Carriage Return
                 \b  BackSpace               \t  Tab
                 \f  Form Feed               \v  Vertical Tab
                 \n  NewLine                 \\  Single BackSlash

                 \x  The next one or two characters are treated
                     as hex digits specifying the character code.

      ^        Beginning of line.
      $        End of line.
      .        Match any single character.
      [...]    Match any single character in the list.
      [^...]   Match any single character not in the list.
      \n       Match whatever literal text the n'th tagged
               \(...\) expression matched.
      r*       Match zero or more occurrences of r.
      r\{n\}   Match exactly n occurrences of r, where n is an
               unsigned decimal integer.
      r\{n,\}  Match at least n occurrences of r.
      r\{n,m\} Match at least n, but not more than m occurrences
               of r.
      r\{,m\}  Match at most m occurrences of r.
      r1r2     Match expression r1 followed by r2.
      \(r\)    Tagged regular expression.  Match the pattern
               inside the \(...\), and remember the literal
               text that matched.
   
   A regular expression pattern cannot contain Null, NewLine or
   CarriageReturn characters.

   When typing a regular expression on the command line, remember
   that $, [, ], ^, ( and ) have special meaning to Hamilton C shell.
   Put single quotes around the string to turn off that special
   meaning.  Also, even inside quotes, type ^^ to mean ^ except
   when it immediately follows [.

   Each matching line is copied to stdout.  If more than one file
   is being searched, each line is preceded by the name of file
   where the matched occurred plus a ':' character.

Options:

   -h           Help.  (This screen.)
   -c           Just print a count of the number of lines which
                match.
   -f ptrnfile  Read the patterns from a file.
   -i           Ignore character case.
   -l           Show just the names of any files containing at
                least one match.  Show each name only once, each
                on a separate line.
   -n           Show the line numbers of any matches.
   -q           Quiet:  don't show filenames where the matches
                occur.
   -s           Read the patterns from stdin.
   -v           Invert the pattern:  show all lines EXCEPT those
                that match.
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="getopt.htm">Previous</a> |
<a href="head.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		hashstat
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				hashstat
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm"><b>hashstat</b></a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
hashstat<br/>
<small><a href="eval.htm">Previous</a> |
<a href="heapstat.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Print Path Hashing Performance Statistics

Usage:  hashstat [-h-]

   Summarize the recent effectiveness of the path hashing mechanism.

   Hamilton C shell uses a hashing mechanism to help it decide which
   path directories and filetype extensions should be tried first when
   looking for an executable file.  This way, it avoids wasting time with
   requests to the NT kernel to look for files that are known to be
   non-existent.  Sometimes, the first guess made this way is wrong (the
   hash says a file might exist, but it doesn't) and the shell has to try
   again with a different directory or extension.

   hashstat shows you the hit rate, which is the number of hits divided
   by the number of tries (hits plus misses).  Blindspots are files that
   aren't found using the hash but are found on a second pass, using an
   exhaustive search.  Blindspots happen when you add new files to a path
   directory; when detected, they cause the directory to be rehashed.

   (See also the rehash and unhash commands.)

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="eval.htm">Previous</a> |
<a href="heapstat.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		head
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				head
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm"><b>head</b></a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
head<br/>
<small><a href="grep.htm">Previous</a> |
<a href="label.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Copy the First Few Lines or Bytes of a File to Stdout

Usage:  head [-hcnq&lt;size&gt;-] [-t&lt;tabs&gt;][ file1 file2 ... ]

   head copies the first part of each of the files you specify
   onto stdout.  If several files are given, each is announced
   unless you specify quiet mode.  You may specify how much to
   read from each file in either lines or bytes.  If no files
   are given, head reads from stdin.

Options:

   -h         Help.  (This screen.)
   -c         Count characters.  (Default is lines.)
   -q         Quiet mode.  Don't announce the name of each file
              as it's read.
   -&lt;size&gt;    Amount to be read from each file.  (Default is 10
              lines or 512 bytes.)
   -t&lt;tabs&gt;   Tab settings to use for viewing text.  (Default is
              to use value given by the TABS environment variable
              or, if  that's undefined, to do no tab expansion.)
   -n         No tab expansion.
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="grep.htm">Previous</a> |
<a href="label.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		heapstat
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				heapstat
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm"><b>heapstat</b></a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
heapstat<br/>
<small><a href="hashstat.htm">Previous</a> |
<a href="history.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Print Heap Usage Statistics

Usage:  heapstat [-h-]

  Summarize the current heap usage, i.e., the number of objects allocated
  on the heap and the total storage used.  Heapstats are only available
  if they were enabled with the -H option when the shell was started.
  Because of the significant performance penalty associated with
  tracking heap usage, heapstats are not normally enabled.


Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="hashstat.htm">Previous</a> |
<a href="history.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		history
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				history
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm"><b>history</b></a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
history<br/>
<small><a href="heapstat.htm">Previous</a> |
<a href="kill.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Display the History List

Usage:  history [-srh-] [ n [m] ]

   Display commands from the history list.  If no operands are given,
   show the entire list.  If a single integer 'n' is specified, display
   the last n commands.  If both integers 'n' and 'm' are given, then:

      if m &gt;= n:       Display commands numbered n through m.
      if m &lt; n:        Display m commands, beginning at command n.

   (The size of the list is controlled by the history variable, changed 
   using the set command.)

Options:

   -s   Short form:  Leave off the command numbers.
   -r   Reverse order:  Show the oldest first.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="heapstat.htm">Previous</a> |
<a href="kill.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		kill
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				kill
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm"><b>kill</b></a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
kill<br/>
<small><a href="history.htm">Previous</a> |
<a href="popd.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Kill Specified Process or Thread Activity

Usage:  kill [-x!h-] scheduling_id  [ scheduling_id ... ]

   Terminate specific activities.  Normally, only direct child
   processes can be killed.  Only certain threads will respond to
   a kill; you cannot inadvertantly kill normal internal
   housekeeping.

   Requests to kill a process are normally carried out by sending a
   Ctrl-Break event to the process and its children.  Ctrl-Break
   isn't guaranteed to work (any given process may choose to ignore
   it) but if it does, it's guaranteed that process will terminate
   cleanly, releasing any DLL's it's using.

   Scheduling_ids are the job, thread or process indentifiers as
   reported by the ps command.  An all-numeric id indicates a
   background job; an id beginning with 't' indicates a thread;
   'p' indicates a process.

Options:

   -x   Kill even processes that are not direct children.
   -!   Kill processes using TerminateProcess, not Ctrl-Break.  This
        will kill almost anything (a process cannot ignore it) but
        since its effect is immediate, any DLL's in use will not
        necessarily clean up properly.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="history.htm">Previous</a> |
<a href="popd.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		label
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				label
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm"><b>label</b></a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
label<br/>
<small><a href="head.htm">Previous</a> |
<a href="listreg.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Read/Write the Volume Label

Usage:  hlabel [-h-]  [ disk: ] [ label ]

   label reads or writes the label on the specified disk,
   given as a single alphabetic drive letter plus a colon.  If
   no disk is specified, the current disk is assumed.  If no
   label is specified, the current label name is printed.
   Otherwise label tries to set the label to specified name.
   Spacing between the disk: and the label operands is optional.

   The principal difference between this and the standard NT
   label command is that this one never prompts, making it more
   suitable in scripts.

Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="head.htm">Previous</a> |
<a href="listreg.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		listreg
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				listreg
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm"><b>listreg</b></a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
listreg<br/>
<small><a href="label.htm">Previous</a> |
<a href="ln.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Dump out any particular key or value in the registry

Usage:  listreg [-h-] registery_path

   listreg dumps out any particular registry key or value, given
   the path, starting from HKEY_CLASSES_ROOT, HKEY_CURRENT_USER,
   HKEY_LOCAL_MACHINE, HKEY_USERS or HKEY_PERFORMANCE_DATA or
   their aliases, HKCR, HKCU, HKLM and HKPD.  Pathnames are not
   case-sensitive.

Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="label.htm">Previous</a> |
<a href="ln.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		ln
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				ln
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm"><b>ln</b></a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
ln<br/>
<small><a href="listreg.htm">Previous</a> |
<a href="ls.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Hard link a file to a new name

Usage:  ln [-h-] source1 [source2 ...] destination

   Create new hard links to existing NTFS files, but only
   within the same partition.  If more than one source file is
   specified, the destination must be a directory.  If the
   destination is a directory the source files are linked
   into it with their current names.

Options:

   -f         Force existing destination files to be overwritten.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="listreg.htm">Previous</a> |
<a href="ls.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		ls
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				ls
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm"><b>ls</b></a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
ls<br/>
<small><a href="ln.htm">Previous</a> |
<a href="mkdir.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        List Files or Directories

Usage:  ls [-+][lLoOgG!rqhx- ndtsez mU c DHSARC.a 0-9 FQTw]
                pathname1 [ pathname2 ... ]

   ls lists the specified files or directories.  Directory names are
   normally highlighted and names of files or directories with the
   system bit set are normally shown in green but you may choose
   your own colors if you prefer.

   File and directory names are normally reported in the actual mixed
   case in which they appear.  But ls will look for an environmental
   variable, MIXEDCASEDRIVES, giving a list of drives, e.g., f-hq,
   meaning only drives F: through H: and drive Q: should displayed
   in mixed case with the rest reported in all lower case.

   To customize ls with a default behavior of your own choosing, use
   the LSOPTIONS environmental variable.  ls will first process any
   options specified in LSOPTIONS before any specified on the command
   line.

Options:

   -l    Long format listings of the files or directories.
   -L    Very Long format listings with a more precise timestamp.
   -o    Owner.  List the owner, if known, with each file or
         directory.  (Ignored under Windows 9x, which does not
         support the full Windows security model.)
   -O    Like -o, but enables polling of other Windows NT machines
         on the network if a user or group ID is not known locally.
         (But be aware that polling can take several seconds.)
   -g    Group.  List the group, if known, with each file or
         directory.  (Ignored under Windows 9x, which does not
         support the full Windows security model.)
   -G    Like -g, but enables polling of other Windows NT machines
         on the network if a user or group ID is not known locally.
   -!    List just the names specified, not the contents of any
         directories.  (Remember to type this option at the end of
         the list so the space afterward will prevent it being
         confused as a history reference.)
   -r    Recursively list contents of any subdirectories.
   -q    Quiet.  Don't generate an error message for non-existent
         files.
   -h    Help (short list.)
   -hx   Extended help (this screen.)
   --    End of options.  (Useful if filenames start with "-".)

Sorting Options:

   Sorts may be done in any order; default is -nds. (The filename is the
   most important sort criteria and ties are broken by date or size.)

   -n    Name (lowest alphabetic first.)
   -d    Date (oldest first.)
   -t    Time (same as -dz = newest first.)
   -s    Size (largest first.)
   -e    Extension (lowest alphabetic first.)
   -z    Reverse the major or last specified sort.
   -m    Merge the listings of directories and files.
   -U    Unordered (in order of appearance in the directory.)

Selection Criteria:

   +&lt;type&gt;   Include files/directories fitting this pattern.
   -&lt;type&gt;   Leave out anything fitting this pattern.

   where &lt;type&gt; is a combination of the following characters:

       D    Directories.
       H    Hidden files or directories.
       S    System files or directories.
       A    Archive bit set.
       R    Read-only files or directories.
       C    Compressed files or directories.  (Supported only under
            Windows NT 3.51 or later.)
       .    "." and ".." files.

   or the single char:

       a    All files or directories regardless of attributes.

   The default is "+a -. -H", meaning anything other than "." and ".."  not
   marked Hidden.  Anything specified is added to/subtracted from this
   set.  Ordering of additions/substractions does make a difference.
   If the slash, "/", is used to introduce options, it is treated
   as a plus when used with selection criteria.

   Selection criteria normally applies only to directories and files
   found by listing a directory.  All names given on the command line
   will be listed if they exist regardless of whether they match the
   selection criteria unless the -c option is specified.

   -c    Command line names must match criteria also, unless only one
         name is given.

Listing Options:

   -&lt;integer&gt;   Specified number of columns.
   -0    Standard multi-columns on 80-column screen.
   -F    Put a backslash (or a slash, if the escape character is the
         backslash) after each directory name.
   -Q    Quote any filenames containing special characters that might
         be misinterpreted by the C shell in command substitution.
   -T    True mixed-case.  Display filenames in the upper- or lower-
         case characters actually stored in the file system.
   -w    Walk subdirectories to show true sizes in long format listings.

Colors:

   You may set your own choices for screen colors using these
   environmental variables:

      Name          Use                              Default
      COLORS        Normal screen colors             &lt;null string&gt;
      READONLYFILES Files marked read-only           same as COLORS
      SYSTEMFILES   Files with system bit set        Green
      DIRECTORIES   Directories                      Bright
      READONLYDIRS  Directories marked read-only     same as DIRECTORIES
      SYSTEMDIRS    Directories with system bit set  (see below)

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The names
   of the colors and the words bright, dim, reverse and on may be in
   either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.  SYSTEMDIRS
   normally inherits a merging of the DIRECTORIES and SYSTEMFILES
   colors.  DIRECTORIES and SYSTEMFILES inherit from COLORS.  If
   a file or directory has both the system and read-only bits set,
   the system colors will be used.   If COLORS is null, ls uses
   the current screen colors it finds at startup.  Specifying
   COLORS=none turns off all use of color.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="ln.htm">Previous</a> |
<a href="mkdir.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		mkdir
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				mkdir
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm"><b>mkdir</b></a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
mkdir<br/>
<small><a href="ls.htm">Previous</a> |
<a href="more.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Make Directories

Usage:  mkdir [-rwh-] directory1 [ directory2 ... ]

Options:

   -r         Recursive:  if any parent directory levels are
              missing, create those also.
   -w         Give a warning message but continue trying to make
              any remaining directories even if problems were
              encountered with some of them.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="ls.htm">Previous</a> |
<a href="more.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		more
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				more
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm"><b>more</b></a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
more<br/>
<small><a href="mkdir.htm">Previous</a> |
<a href="mt.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        A Better Windows NT More Filter

Usage:  hmore [-#IezinNwcvbodxCh-][-r&lt;radix&gt;][-t&lt;tabs&gt;][-s&lt;scroll&gt;]
                 [file1 file2 ...]

   This more provides a number of advantages over the standard NT
   more.com filter.  It's faster, goes backwards and forwards through
   a file, can search for character strings or matches to regular
   expressions and can display binary data embedded in the text.
   As it reads a file, it builds an ISAM structure on-the-fly that
   lets it jump to a specific line number almost instantaneously.
   It's designed for very fast browsing.

   On-line help is available for the key bindings by pressing "h"
   when you see the Press H for Help prompt at the bottom of a
   screenful of data.


Options:

   -#         Show line numbers.
   -C         Don't clear the screen before each new screenful.
   -I         Start up in case-independent search mode.
   -e         Search using regular expressions.
   -z         Inverted search:  search for lines that do NOT match
              the search string or regular expression.
   -i         Go into Interactive mode immediately, which means clear
              the screen first for faster painting and put up the
              Press H for Help prompt rather than just exiting if
              there's less than a screenful of input.
   -N         No stretch.  Don't stretch color changes out to the
              right edge of the screen.
   -n         Next file option.  Pressing space bar when the end-of-file
              message is displayed causes more to continue with the
              next file or to exit if there are no more files.
   -s&lt;scroll&gt; Set the integer default scroll amount.
   -t&lt;tabs&gt;   Set tabs every integer number of spaces.
   -w         Enable mouse wheel scrolling.

   -c         Show non-printables in C language style.
   -v         Make non-printables Visible as control characters.
   -b         Show Binary values of non-printable characters.

   -o         Use Octal for binary data.
   -d         Use Decimal for binary data.
   -x         Use Hexadecimal for binary data.
   -r&lt;radix&gt;  Use user-specified radix for binary data.

   -h         Help.  (This screen.)
   --         End of options.  (Useful if a filename begins with "-".)

   Initial tab settings and radix values are taken from the
   environmental TABS and RADIX variables if they're defined.
   Otherwise, TABS=8 and RADIX=16 is assumed.

Regular Expressions:

   Searching can be done for simple literal strings or for matches
   to regular expressions, which are written in this notation,
   in decreasing precedence:

      c        Any ordinary character matches itself.
      \c       Match the literal character c.  Certain
               characters are treated specially:

                 \a  Audible Alert (Bell)    \r  Carriage Return
                 \b  BackSpace               \t  Tab
                 \f  Form Feed               \v  Vertical Tab
                 \n  NewLine                 \\  Single BackSlash

                 \x  The next one or two characters are treated
                     as hex digits specifying the character code.

      ^        Beginning of line.
      $        End of line.
      .        Match any single character.
      [...]    Match any single character in the list.
      [^...]   Match any single character not in the list.
      \n       Match whatever literal text the n'th tagged
               \(...\) expression matched.
      r*       Match zero or more occurrences of r.
      r\{n\}   Match exactly n occurrences of r, where n is an
               unsigned decimal integer.
      r\{n,\}  Match at least n occurrences of r.
      r\{n,m\} Match at least n, but not more than m occurrences
               of r.
      r\{,m\}  Match at most m occurrences of r.
      r1r2     Match expression r1 followed by r2.
      \(r\)    Tagged regular expression.  Match the pattern
               inside the \(...\), and remember the literal
               text that matched.
   
   A regular expression pattern cannot contain Null, NewLine or
   CarriageReturn characters.

Colors:

   You may set your own choices for screen colors using these
   environmental variables:

      Name         Use                             Default
      COLORS       Normal screen colors            &lt;null string&gt;
      MOREEOF      End or Top of File messages     Green
      MORETOPMEM   Top of Memory message           Bright Yellow
      MOREPROMPT   Prompt line at the bottom       Red on White
      MOREFILLIN   Characters typed at the prompt  Black
      MOREERROR    Unrecognizable command errors   Bright White on Red

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The names
   of the colors and the words bright, dim, reverse and on may be
   in either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.   MOREERROR
   and MOREFILLIN inherit from MOREPROMPT.  MOREPROMPT, MORETOPMEM
   and MOREEOF inherit from COLORS.  If COLORS is null, more uses
   the current screen colors it finds at startup.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="mkdir.htm">Previous</a> |
<a href="mt.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		mt
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				mt
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm"><b>mt</b></a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
mt<br/>
<small><a href="more.htm">Previous</a> |
<a href="mv.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>Microsoft (R) Manifest Tool version 5.2.3790.2075
Copyright (c) Microsoft Corporation 2005. 
All rights reserved.

mt.exe : command line error c1010007: Unexpected/Unknown option "-h".  Use the /? option for help on usage and samples.
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="more.htm">Previous</a> |
<a href="mv.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		mv
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				mv
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm"><b>mv</b></a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
mv<br/>
<small><a href="mt.htm">Previous</a> |
<a href="newer.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Move Files or Directories

Usage:  mv [-cfilmsh-][+s] source1 [ source2 ... ] destination

   mv is an intelligent file or directory mover.  It's able to
   move either files or directories regardless of whether the
   source and destination are in the same directory or even the
   same drive.

   Files being moved anywhere on the same partition are simply
   renamed; the data stays where it is.  Moving a file to a
   different partition is done by copying the file and then
   deleting the original.  If you move a directory but it keeps
   the same parent, that also is a simple rename.  Moving a
   directory to a new parent is done by a mkdir in the new parent
   and moving all the directory contents using the same "rename
   where possible" strategy recursively.

   By default, security descriptors and access control lists are not
   copied from source to destination.  This is in keeping with the
   Windows convention that security is generally inherited through
   the directory structure.

Options:

  -c    Continue even if errors are encountered attempting to
        process some input files or directories.
  -f    Force read-only files to be overwritten.
  -i    Interactive:  Ask before moving each object on the command
        line.
  -l    Logging is on:  Display the name of each file or directory
        as it's moved.
  -m    Merge sub-directories of same name in source and destination.
  -s    Simple move.  (Default.)  Do not copy security descriptors
        and access control lists.
  +s    Copy security descriptors and access lists.  Under Windows 9x
        or if the destination filesystem does not support ACLs,
        that's not possible and the security information will be
        lost. This is not considered an error and no diagnostic message
        is given.

  -h    Help (this screen.)
  --    End of options.  (Useful if filenames start with "-".)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="mt.htm">Previous</a> |
<a href="newer.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		newer
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				newer
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm"><b>newer</b></a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
newer<br/>
<small><a href="mv.htm">Previous</a> |
<a href="older.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Test whether file1 is newer than all the others

Usage:  newer [-2h-] file1 file2 [ file3 ... ]

   Prints "1" if file1 is newer than all the others, otherwise
   prints "0".

Options:

   -2         Two-second granularity for comparing timestamps.
              Timestamps on NTFS have a 100 nanosecond granu-
              larity.  But if the file is copied to a FAT or HPFS
              partition, where the granularity is only in two-
              second increments, the timestamp may be rounded
              up or down, somewhat arbitrarily.  (NT rounds down
              but OS/2 rounds up.)  This option causes any two
              timestamps within any given two-second window
              (endpoints included) to compare equal.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="mv.htm">Previous</a> |
<a href="older.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		older
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				older
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm"><b>older</b></a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
older<br/>
<small><a href="newer.htm">Previous</a> |
<a href="open.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Test whether file1 is older than all the others

Usage:  older [-2h-] file1 file2 [ file3 ... ]

   Prints "1" if file1 is older than all the others, otherwise
   prints "0".

Options:

   -2         Two-second granularity for comparing timestamps.
              Timestamps on NTFS have a 100 nanosecond granu-
              larity.  But if the file is copied to a FAT or HPFS
              partition, where the granularity is only in two-
              second increments, the timestamp may be rounded
              up or down, somewhat arbitrarily.  (NT rounds down
              but OS/2 rounds up.)  This option causes any two
              timestamps within any given two-second window
              (endpoints included) to compare equal.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="newer.htm">Previous</a> |
<a href="open.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		open
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				open
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm"><b>open</b></a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
open<br/>
<small><a href="older.htm">Previous</a> |
<a href="paste.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Open a File using the Associated Application

Usage:  open [-h-] [-&lt;verb&gt;] file [ optional-parameters ]

   open opens an arbitrary file using the application
   associated with that file type, based on its filename
   extension.  Under Windows 95 and Window NT version 4.0
   or later, associations are stored in the registry as
   classes with information about what application should
   be used with each type of file and how it works.

   When open is used to open a file, that's always done
   in a different window, though sometimes that may be
   in an existing instance of the application.  For example,
   opening a Microsoft Word document will start a new
   process running Word if one is not already running.
   But if Word's already running, then Word will simply open
   yet another child window with the specified file.  The
   choice of whether to start another instance of an already-
   running application versus having it simply open another
   child window is defined by the application and the entries
   in the registry, not by open.

   Both data files and ordinary executable files can be
   opened with open.  If it's an ordinary executable,
   additional arguments can be specified, which are simply
   passed as command line (argc, argv) arguments to the
   child process.  Optional parameters aren't generally
   meaningful when opening data files, though usually all
   that happens is that they're ignored.  The exception
   would be script files that can take arguments.

   Once the associated application has been started, open
   exits.  It does not wait for the child application to
   complete.

Options:

   -h         Help
   -&lt;verb&gt;    Open the file and perform the action indicated
              by the verb, e.g., 'print'.  The list of verbs
              that may be used depends on the application.
              The default is simply to open the file.
   --         End of options

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="older.htm">Previous</a> |
<a href="paste.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		paste
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				paste
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm"><b>paste</b></a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
paste<br/>
<small><a href="open.htm">Previous</a> |
<a href="pwd.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Paste:  Merge Corresponding or Subsequent Lines

Usage:  paste [-sh-] [-d list] file ...

   Concatenate corresponding lines of the input files, writing
   the output to stdout.  Any newlines or carriage return-
   newline combinations at the end of any lines except those
   read from the last file are replaced with tab characters.

   If end-of-file is encountered on some but not all the
   files, paste behaves as if it were reading empty lines
   from those files.

   A filename of a single "-" (minus) character is a special
   case and will be interpreted as referring to stdin.

Options:

   -d list  Specifies a list of delimiters to be used instead
            the default tab character when pasting lines
            together.  If more than one character is given,
            paste will use them circularly, resetting back
            to the beginning of the list after each line of
            output.  The list may contain the following special
            escape sequences:

               \n   Carriage return-newline combination
               \t   Tab
               \\   Backslash
               \0   Empty string (not a null character).

   -s       Concatenate subsequent lines of each file rather
            than merging lines from different files.  The end
            of data from each file will be terminated with the
            line-end combination found there or a carriage
            return-newline combination if there was no line end.

   -h       Help.  (This screen.)
   --       End of options.


</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="open.htm">Previous</a> |
<a href="pwd.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		popd
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				popd
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm"><b>popd</b></a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
popd<br/>
<small><a href="kill.htm">Previous</a> |
<a href="ps.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Pop a new Current Directory and Disk off the Stack

Usage:  popd [-hvd-] [ n ]

   Pop an integer n directory paths from the top of the stack, making
   the top one remaining the new current directory and disk. The default
   for n is 1.

   (See also the cd, dirs, pushd and rotd commands.)

Options:

   -d   Discard just stack entry n, counting from 0 at the top, popping
        everything below it up one level.
   -s   Silent.  Don't print the resulting directory stack.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="kill.htm">Previous</a> |
<a href="ps.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		ps
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				ps
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm"><b>ps</b></a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
ps<br/>
<small><a href="popd.htm">Previous</a> |
<a href="pushd.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Print Process &amp; Thread Status

Usage:  ps [-sh-]

   Show the status of all the background jobs, processes and
   threads related to this invocation of Hamilton C shell,
   highlighting the current thread.

   Background jobs are created when you type an ampersand at the
   end of a command line.  The job number is the number reported
   when the job is created and applies to all screens, processes
   and threads created by that job.

   Processes are created when commands are typed that require other
   executable programs to run.  Process ids begin with 'p'.

   Threads are concurrent activities going on inside Hamilton C shell.
   Some, such as the cleanup activities that watch for other threads
   or processes to end always run in the background.  Others are
   created when a command requires that an internal function be run
   in the background.  Thread ids begin with 't'.

Options:

   -s   List details of all processes system-wide.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="popd.htm">Previous</a> |
<a href="pushd.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		pushd
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				pushd
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm"><b>pushd</b></a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
pushd<br/>
<small><a href="ps.htm">Previous</a> |
<a href="rehash.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Push a new Current Directory and Disk onto the Stack

Usage:  pushd [-hs-] [ -c [n] ] [ directory ]

   Go to a new current directory and disk, saving the old values
   on the directory stack.  If no operands are given, swap the
   top two elements of the stack.  If the path you specify is just
   3 or more dots, pushd will interpret that specially.  Just as ".."
   means go up one level, "..." means up 2 levels, "...." means
   up 3 levels, etc.  If the directory isn't found, the CDPATH is
   searched.

   (See also the cd, dirs, popd and rotd commands.)

Options:

   -c   Copy an item already on the stack onto the top.  This form takes
        an optional parameter n which specifies the integer item number,
        counting from 0 at the top.  Default is n == 0.
   -s   Silent.  Don't print the resulting directory stack.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="ps.htm">Previous</a> |
<a href="rehash.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		pwd
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				pwd
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm"><b>pwd</b></a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
pwd<br/>
<small><a href="paste.htm">Previous</a> |
<a href="random.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Print the Current Working Directories

Usage:  pwd [-ach-] [ disk1 disk2 ... ]

   pwd prints a list of the current directories.  If no disks are
   specified, pwd looks for a DRIVEMASK environmental variable than
   can be used to mask off just the drives you want reported. The
   DRIVEMASK is specified as a list of drive letters; ranges are
   allowed.  Otherwise, all the fixed disk partitions beginning
   with c: are reported.  The current  directory on the current
   drive is highlighted.

   pwd routinely reports everything in lower case for better
   readability.  But pwd will look for an evironmental variable,
   MIXEDCASEDRIVES, giving a list of drives, e.g., f-hq, meaning
   drives F: through H: and drive Q:, which should be displayed
   in mixed case.

Options:

   -a   If no disks are specified, report on all disks.
   -c   If no disks are specified, report on just the current disk.
   -h   Help.
   --   End of options.

Colors:

   You may set your own choices for screen colors using these
   environmental variables:

      Name         Use                             Default
      COLORS       Normal screen colors            &lt;null string&gt;
      HIGHLIGHT    Current disk                    Bright

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The names
   of the colors and the words bright, dim, reverse and on may be
   in either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.   HIGHLIGHT
   inherits from COLORS.  If COLORS is null, pwd uses the
   current screen colors it finds at startup.  Specifying
   COLORS=none turns off all use of color.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="paste.htm">Previous</a> |
<a href="random.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		random
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				random
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm"><b>random</b></a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
random<br/>
<small><a href="pwd.htm">Previous</a> |
<a href="rm.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Random number generator

Usage:  random [ -c ] [ -b | -e[Digits] | -f[Digits] | -u[Bits] ] [ n ]

   random writes n pseudorandom values to stdout, where the
   values can be unsigned integers, floating point numbers
   between 0.0 and 1.0, or bytes of binary data.  The default
   is one 31-bit unsigned integer.  Default for floating
   point is 6 digits of precision, maximum is 17.

   random relies on the Win32 CryptGenRandom API in Windows as
   the underlying cryptographically secure pseudorandom number
   generator.

Options:

   -c          Continuously write random data until interrupted
               or until writes fail, e.g., if writing into a
               pipe that closes.

   -b          Bytes of binary data.
   -e[Digits]  E-format floating point.
   -f[Digits]  Fixed point floating point.
   -u[Bits]    Unsigned integers, maximum 64 bits.

   -h          Help.     (This screen.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="pwd.htm">Previous</a> |
<a href="rm.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		rehash
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				rehash
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm"><b>rehash</b></a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
rehash<br/>
<small><a href="pushd.htm">Previous</a> |
<a href="rotd.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Reinitialize Path Hashing

Usage:  rehash [-h-]

   Hamilton C shell uses a hashing mechanism to speed up searches of
   the path directories.  If you're performing system administration
   work, moving files in the path directories, the hash mechanism may
   not always reflect the latest changes you've made.  The rehash
   command allows you to re-initialize the hash by re-reading all the
   path directories and setting nohashing = 0.  (The unhash command
   can be used to turn hashing off.)

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="pushd.htm">Previous</a> |
<a href="rotd.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		rm
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				rm
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm"><b>rm</b></a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
rm<br/>
<small><a href="random.htm">Previous</a> |
<a href="rmdir.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Remove Files or Directories

Usage:  hrm [-rfcHSxZilh-] pathname1 [ pathname2 ... ]

   rm can delete both files and directories.  If you try to remove
   a file with one of the special mode bits set (see chmod) or a
   directory that's not empty, it'll refuse unless you use one of
   the options to let it know that's really what you mean.

Options:

  -r    Recursively remove non-empty directories.
  -f    Force read-only files or directories to be removed.  Also,
        warn about but otherwise ignore attempts to remove non-
        existent files.
  -H    Hidden files or directories can be removed.
  -S    System files or directories can be removed.
  -x    All of the above.  Same as -rfHS
  -c    Continue even if errors are encountered attempting to
        process some files or directories.
  -Z    Write binary zeros across any files being deleted before
        removing them, thus preventing anyone from recovering the
        data using an "undelete" program.
  -i    Interactive:  Ask before removing each object on the
        command line.
  -l    Logging is on:  Display the name of each file or directory
        as it's removed.
  -h    Help (this screen.)
  --    End of options.  (Useful if filenames start with "-".)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="random.htm">Previous</a> |
<a href="rmdir.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		rmdir
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				rmdir
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm"><b>rmdir</b></a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
rmdir<br/>
<small><a href="rm.htm">Previous</a> |
<a href="sed.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Remove Directories

Usage:  rmdir [-h-] directory1 [ directory2 ... ]

   rmdir will only remove empty directories.  Mode bits
   (system, hidden or read-only) are ignored.

Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="rm.htm">Previous</a> |
<a href="sed.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		rotd
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				rotd
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm"><b>rotd</b></a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
rotd<br/>
<small><a href="rehash.htm">Previous</a> |
<a href="sleep.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Rotate the Directory Stack

Usage:  rotd [-hs-] [ n ]

   Rotate the directory stack an integer n positions.  Positive values
   cause upward rotation; negative values cause downward rotation.  The
   default is upward rotation by one position.

   (See also the cd, dirs, pushd and popd commands.)

Options:

   -s   Silent.  Don't print the resulting directory stack.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="rehash.htm">Previous</a> |
<a href="sleep.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		sed
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				sed
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm"><b>sed</b></a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
sed<br/>
<small><a href="rmdir.htm">Previous</a> |
<a href="setrows.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Stream editor

Usage:  sed [-hinNs-] [ -f scriptfile ] [ -e script ]
                       [ script ] [ file1 file2 ... ]

   sed is a special text editor for use on streams of data where
   it cycles, reading a line from input, applying the editing
   operations you've specified, and writing the result to stdout.
   The input is read in a single pass and each line is acted on
   only once.

   The editing script can be specified on the command line or,
   if it's long and complex, in a file.  If you want to combine
   a script on the command line with any other script, you must
   use the -e option.  The editing operations available are the
   usual search/replace, insert/delete, etc.  With each
   operation, you generally can specify the lines in the file
   it should affect either by line number or matching a pattern
   or a range of lines.

Options:

   -h              Help.  (This screen.)
   -f scriptfile   Read the script from a file.  Multiple -f
                   options are allowed and the scripts are
                   concatenated.
   -e script       Take the following argument word as a script.
                   Multiple -e options are also allowed.
   -i              Ignore character case.
   -n              Don't automatically write the contents of the
                   edit buffer to stdout at the end of each
                   cycle.
   -N              Normalize any input to use the UNIX convention
                   of a simple \n character to terminate each
                   line, then re-expand the text on output to
                   follow the \r\n convention used on a PC.
                   This option is useful in porting sed scripts
                   from a UNIX system.
   -s              Read the script from stdin.  (The input stream
                   to be edited must be in a file.)
   --              End of options.

Scripts:

   The script is written as a series of commands, each separated
   from the next by a line end or a semicolon.  The format of a
   command is:

      [ address1 [ , address2 ] ] operation

   Spacing between fields is arbitrary:  you can use spaces or
   tabs between fields or have none at all as you prefer.  Here
   are the fields:

      address   is a line number or regular expression to be
                matched.  When a regular expression is used as an
                address, it's normally written as /regexp/ but
                it's also possible to use the syntax \?regexp?
                where ? is any character.

            Zero- or One-Address Operations:

                If you don't give an address, the operation is
                applied to all lines.

                If you give a single address, the operation is
                done on each line that matches.

            Ranges:

                When you give two addresses, you define a range.
                A range can be a single line, e.g., "3,3", or
                a whole group of lines.  If the addresses involve
                pattern matching, e.g.,

                    /^#ifdef/,/^#endif/

                the range might occur over and over in the input
                and will be acted on each time.

                Most operations, e.g., search/replace, are done
                against all lines in the range.  The exceptions
                are i\ (insert), which is acted on at entry to
                the range; a\ (append), and q (quit), which are
                acted on at the end; and c\ (change), which
                deletes all the lines in the range but doesn't
                write any output until the end of the range.

      operation is one of the 28 basic operations provided,
                together with any arguments it takes.

Operations:

   There are two buffers in sed: the edit buffer and the hold
   buffer.  Most of the editing operations work on the edit
   buffer, doing search/replace operations, translating
   characters, and saving or retrieving text in the hold buffer.
   Sed automatically puts each new line into the edit buffer
   (along with its trailing line end) at the start of each cycle
   unless there was something left over after a D (delete head)
   command.

   A second group of operations provide ways of inserting
   blocks of static text.

   The next group of operations provide rudimentary ways of
   condition-testing and branching and of nesting a series of
   operations together.

   Finally there operations for printing and doing other i/o and
   for other miscellaneous things.

Basic Editing:

   d               Delete this section.  Start the next cycle.
   D               Delete from the beginning of edit buffer
                   through and including the first line ending.
                   If there's text remaining, immediately start
                   over at the top of the script without reading
                   a new line.  Otherwise, start the next cycle.

   s/.../.../[ngpw]   Search/replace using regular expressions.
                   In the replace string, "&amp;" means whatever
                   the search string matched. "\n", where n is
                   a number, means whatever matched that tagged
                   expression in the search string.  Other escape
                   sequences, such as "\r" to mean Carriage
                   Return, can also be used, just as they are in
                   a regular expression search string (described
                   below).  The search and replace strings are
                   shown here delimited with /, but you may
                   choose any character you like that doesn't
                   occur in either string.  The following
                   modifiers are accepted:

                   n       A decimal number from 1 to 65,535.
                           Substitute for just the n'th
                           occurrence of the search pattern.
                   g       Global.  Substitute all occurrences.
                   p       Print the edit buffer if a change was
                           made.
                   w file  Write the edit buffer onto the end of
                           the file if a change was made.

   y/.../.../[c]   Translate all occurrences of characters in the
                   first string to the corresponding characters
                   in the second string.  As in the tr utility,
                   ranges are allowed, as in "y/a-z/A-Z/".  The
                   optional "c" flag can be used to complement
                   the input range.  Either string can contain
                   \r and \n characters.  If the first string
                   is longer than the second, all the extra
                   characters are mapped to the last character
                   in the replacement string or to a null if
                   there was none.  If the second string is
                   longer, the extras are ignored.

Using the Hold Buffer:

   g               Get from the hold buffer.  Replace the current
                   contents of the edit buffer.
   G               Get from the hold buffer and paste onto the
                   end of the edit buffer.
   h               Hold.  Replace the contents of the hold buffer
                   with a copy of the edit buffer.
   H               Append to hold.  Copy the edit buffer contents
                   onto the end of the hold buffer.
   x               Exchange the edit and hold buffers.

Inserting blocks of Static Text:

   a\              Append the text to the output at the end
   text            of the cycle if this is the last line in the
                   range.  All but the last line of text should
                   have a "\" just before the \r\n sequence
                   at the end of each line.

   c\              Change this section to read as shown in the
   text            following text.  Start the next cycle.

   i\              Insert.  Immediately copy the following text
   text            to stdout if this is the start of the range.

Condition-Testing, Branching and Grouping operations:

   b label         Branch to the label elsewhere in the script.
                   (If no label is given, it's to the end of the
                   script.)
   q               If this is the end of the range, quit.
   t label         Branch to the label if search/replace changes
                   have been made since the most recent input
                   line was read or a t operation was run.
   : label         Label.  (No address prefix is allowed.)
   {  }            Group a series of operations together.

Printing:

   =               Write the line number to stdout.
   l               List the contents of the edit buffer in C
                   language style with escape sequences for
                   binary characters.
   p               Print.  Write the contents of the edit buffer
                   to stdout.
   P               Print from the beginning of the edit buffer
                   through and including the first line ending.
   #n              Suppress any automatic output at the end of
                   each cyle.

Other I/O operations:

   n               Next line.  Write the contents of the edit
                   buffer to stdout, dump any appended text and
                   read a new line from stdin to the edit buffer.
   N               Read the next line onto the end of the edit
                   buffer with a \r\n sequence in between.
   r file          Copy the contents of this file to stdout at
                   the end of the cycle.
   w file          Write the edit butter onto the end of the
                   file, creating it if it doesn't exist.

Miscellaneous:

   ! operation     Don't apply this function unless the
                   addressing DOESN'T match.  Invert the line
                   selections.
   ;               Null statement.
   # comment       Comments and blank lines are ignored.

   If multiple a\ (append) or r (read file) instructions are
   executed (or the same one is iterated in a loop), a new entry
   is made on the end of a list of all the appended text blocks
   to be copied to stdout at the end of the cycle.  When the end
   of the cycle is finally reached, the whole list is dumped,
   in order from the top.

Regular Expressions:

   Search patterns are specified as regular expressions like
   those used by grep.  Regular expressions are written in this
   notation, in decreasing precedence:

      c        Any ordinary character matches itself.

      \c       Match the literal character c.  Certain
               characters are treated specially:

                 \a  Audible Alert (Bell)    \r  Carriage Return
                 \b  BackSpace               \t  Tab
                 \f  Form Feed               \v  Vertical Tab
                 \n  NewLine                 \\  Single BackSlash

                 \x  The next one or two characters are treated
                     as hex digits specifying the character code.

      ^        Beginning of line.
      $        End of line.
      .        Match any single character.
      [...]    Match any single character in the list.
      [^...]   Match any single character not in the list.
      \n       Match whatever literal text the n'th tagged
               \(...\) expression matched.
      r*       Match zero or more occurrences of r.
      r\{n\}   Match exactly n occurrences of r, where n is an
               unsigned decimal integer.
      r\{n,\}  Match at least n occurrences of r.
      r\{n,m\} Match at least n, but not more than m occurrences
               of r.
      r\{,m\}  Match at most m occurrences of r.
      r1r2     Match expression r1 followed by r2.
      \(r\)    Tagged regular expression.  Match the pattern
               inside the \(...\), and remember the literal
               text that matched.

   A regular expression pattern cannot contain Nulls but it can
   contain NewLine or CarriageReturn characters (which may be
   useful with the N or G commands.)

   When typing a regular expression on the command line, remember
   that $, [, ], ^, ( and ) have special meaning to Hamilton C
   shell.  Put single quotes around the string to turn off that
   special meaning.  Also, even inside quotes, type ^^ to mean ^
   except when it immediately follows [.

   Also, / at the beginning of a word on the command line is
   taken as introducing an option.  If you mean it to be the
   start of a script, use the "--" option ahead of it.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="rmdir.htm">Previous</a> |
<a href="setrows.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		setrows
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				setrows
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm"><b>setrows</b></a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
setrows<br/>
<small><a href="sed.htm">Previous</a> |
<a href="setwin.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Set/Report the Number of Rows in the Display Window

Usage:  setrows [-h-] [ buffer_rows [[buffer_columns]
                  window_rows [window_columns]] ]

   Setrows will try to set the sizes of the console buffer and
   of the visible window into it.

   The exact effects of setrows, in addition to reporting the
   current values, depends on the number of arguments:

      0   Don't change any settings.
      1   Set the number of buffer rows, shrinking the number
          of window rows as necessary.
      2   Set the buffer and window rows.
      3   Set the buffer and window rows and window columns.
      4   Set everything.

   If no arguments are specified, setrows just reports
   the current values.

Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="sed.htm">Previous</a> |
<a href="setwin.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		setwin
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				setwin
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm"><b>setwin</b></a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
setwin<br/>
<small><a href="setrows.htm">Previous</a> |
<a href="shortcut.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Set/Report the Current Window's Show State

Usage:  setwin [-h-] [states]

   Report, then optionally set the current window's show state.
   Any combination of the following states can be set:

      hidden          This window is not visible on either the
                      desktop or on the task bar.
      visible         This window is not hidden.
      maximized       This window is maximized to as large as
                      possible.
      minimized       This window is minimized to the task bar.
      restore         Activate and display this window. If it's
                      minimized or maximized, restore it to its
                      original size and position.
      normal          Same as restore.
      active          This window is now the active (foreground)
                      window. (Implies visible and not minimized.)
      inactive        This window is not active.

   The names of the show states are not case-sensitive and may
   be abbreviated to just the number of characters needed to be
   unique.


Options:

   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="setrows.htm">Previous</a> |
<a href="shortcut.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		shortcut
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				shortcut
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm"><b>shortcut</b></a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
shortcut<br/>
<small><a href="setwin.htm">Previous</a> |
<a href="showdesk.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Create or Report a Shortcut

Usage:  shortcut [-h-] [-a arguments ] [-d directory] [-D description]
       [-s showcommand] [-i iconfile] [-x iconindex]
       [-c consoleprop] shortcutfile
       [ linkedpath [ arguments ]]

   Create or report a shortcut.  If both the linkedpath and
   shortcutfile arguments are given, the shortcut is created.
   If only the shortcutfile argument is given, it's reported
   or updated, depending on the presence or absense of any
   options.  If the shortcutfile does not end in a .lnk
   extension, the file will still be created but the
   shell won't recognize it.

Options:

   -a arguments    Any command line arguments to be passed
                   to the associated application.  Multiple
                   arguments may be specified using -a options
                   and/or by specifying arguments using -a
                   and following the linkedpath, in which
                   case, they're concatenated with spaces
                   between them.
   -d directory    Initial working directory when opening the
                   linkedpath file.
   -D description  An optional descriptive comment to be added
                   to the shortcut.
   -s showcommand  The initial show state of the window.  May be
                   any one of the following: hidden, minimized,
                   maximized or normal (default).  Show states
                   are case insensitive and only as many characters
                   as necessary to be unique need be specified.
   -i iconfile     The pathname of a file containing the icon to
                   to be associated with this shortcut.
   -x iconindex    An index to the icon within that file, counting
                   from zero.
   -c consoleprop  A console window property setting:
                      Colors=color setting (e.g., white on blue)
                      Popups=color setting
                      ScreenBufferSize=(rows, columns)
                      WindowSize=(rows, columns)
                      AutoPosition=True/False/On/Off
                      Position=(row, column)
                      Font=name (usually either Terminal or
                                Lucida Console)
                      FontSize=(pixels wide, pixels high) or
                                just height for Lucida Console.
                      QuickEdit=True/False/On/Off
                      InsertMode=True/False/On/Off
   -h              Help.  (This screen.)
   --              End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="setwin.htm">Previous</a> |
<a href="showdesk.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		showdesk
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				showdesk
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm"><b>showdesk</b></a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
showdesk<br/>
<small><a href="shortcut.htm">Previous</a> |
<a href="sort.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Show the desktop

Usage:  showdesk [-ah-]

   Minimize all the open windows on the desktop except this one.

Options:

   -a         Minimize this window, too.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="shortcut.htm">Previous</a> |
<a href="sort.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		sleep
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				sleep
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm"><b>sleep</b></a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
sleep<br/>
<small><a href="rotd.htm">Previous</a> |
<a href="source.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Sleep for a Specified Period

Usage:  sleep [-hm-] [ seconds ]

   Sleep the specified integer number of seconds (rounded to the next
   clock tick.)  Default is 1 second or until an interrupt occurs.

Options:

   -m   Sleep interval is in milliseconds rather than seconds.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="rotd.htm">Previous</a> |
<a href="source.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		sort
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				sort
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm"><b>sort</b></a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
sort<br/>
<small><a href="showdesk.htm">Previous</a> |
<a href="split.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Sort and/or Merge Files

Usage:  hsort [-cmh] [-o output] [-RsuvdfinxNXWrb] [-tT char]
              [-k keydef] ... [+pos1 [-pos2]] ... [file ...]

   Sort or merge lines of text from the named files or from
   stdin if no file specification is given.  Comparisons are
   based on one or more sort keys extracted from each line.
   By default, there is one sort key, the entire line (minus
   any line termination characters), and ordering is done
   according to the ASCII collate sequence.

Options:

   -c         Check that the input is ordered as specified.  No
              output is produced.  Only the exit code is affected.
   -m         Merge only.  The input files are assumed to be
              already sorted.
   -o output  Write the output to file specified.  This can be the
              same as one of the input files.
   -R         Ensure that each record ends with a \r\n sequence.
   -s         Stable sort.  If records match on all the sort keys,
              preserve the input ordering.
   -u         Unique:  suppress all but one in each set of lines
              having equal keys.  If used with -c, check that
              there are no lines with equal keys.
   -v         Verbose.  If the input is checked with -c and it's
              out of order, print the record number and contents.

Comparison Options:

   The following options override default ordering rules.  When
   these options appear independent of any key field specifi-
   cation, they apply globally to all sort keys.  When attached
   to a specific key, they override any global ordering options.

   -d         Only blanks and alphanumeric characters are
              considered in comparing keys.  
   -f         Case-independent comparison:  upper and lower case
              characters will compare equal.
   -i         Ignore any non-printable characters.
   -n         Interpret the field as decimal integer data which
              may contain optional leading spaces, plus or
              minus sign, and commas as thousands separators.
   -x         Like -n, but also accepts octal or hex integers.
   -N         Like -n, but also accepts floating point data
              containing fractional components or exponents
              expressed in E-notation, e.g., 1.0E-03 to mean
              .001.
   -X         Like -N, but also accepts octal or hex integers.
   -W         Use the Win32 CompareString function to compare
              strings according to the collate sequence specified
              by the user's locale descriptor.  Otherwise, by
              default, the standard ASCII collate sequence is
              used for much greater performance.
   -r         Reverse the sense of comparisons.

Field Separator Options:

   -b         Ignore leading or trailing spaces when determining
              the starting and ending positions of a sort key.
   -t char    Use &lt;char&gt; as the field separator character; &lt;char&gt;
              is not considered to be part of a field.  Each
              occurrence of &lt;char&gt; is significant so, e.g.,
              &lt;char&gt;&lt;char&gt; delimits an empty field.
   -T char    Like -t, but each maximal sequence of &lt;char&gt;
              characters is considered a single field separator.
              By default, each maximal sequence of spaces is a
              field separator.

Sort Key Specification:

   -k keydef  Define a sort key field.  The format of &lt;keydef&gt; is

                 field_start[type][,field_end[type]]

              where &lt;field_start&gt; and &lt;field_end&gt; define the
              beginning and ending points of a field as:

                 field_number[.first_character]

              where both fields and characters are numbered
              starting from 1 and specified as positive decimal
              integers. If &lt;.first_character&gt; is omitted from
              a &lt;field_start&gt;, the sort key begins with the
              first character of the field; if it's omitted
              from a &lt;field_end&gt;, the key ends with the last
              character of the field.

              As a special case, a field number of 0 specifies
              the entire record.  A character number of 0
              specifies the last character of the field.

              The &lt;type&gt; modifiers can be any combination of
              b, d, f, i, n, N or r, which behave just like the
              corresponding options, except as a modifier
              they affect only the specified sort key.  The
              b modifier applies only to the &lt;field_start&gt; or
              &lt;field_end&gt; to which it is attached.

              If the -b option or b type modifier is specified,
              characters within the field are counted from the
              first non-blank character.

              When there are multiple key fields, later keys
              are compared only after all earlier keys compare
              equally.  Except when -u is specified, lines that
              otherwise compare equally are ordered as if no
              -d, -f, -i, -n, -N or -k options were present and
              with all bytes in the lines significant to the
              comparison.

   +pos1 [-pos2]  An older form of key field specification, now
              considered obsolete by POSIX.  The &lt;pos1&gt; and
              &lt;pos2&gt; entries specify the start and end of a key
              just the way the -k option would except that in
              this form, fields and characters are numbered
              starting at 0, not 1.  A fully-specified key of
              the form +pos1 -pos2 with type modifiers T and U:

                     +w.xT -y.zU

              is equivalent to:

                     -k (w+1).(x+1)T,y.0U        (z == 0)
                     -k (w+1).(x+1)T,(y+1).zU    (z &gt; 0)

   -h         Help (short list.)
   --         End of options.

Exit status:

   0          All the input was sorted successfully, or -c was
              specified and the input was already sorted.
   1          The -c option was specified and the input was not
              ordered correctly or -cu was specified and two
              lines sorted equal.
   &gt;1         An error occurred.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="showdesk.htm">Previous</a> |
<a href="split.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		source
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				source
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm"><b>source</b></a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
source<br/>
<small><a href="sleep.htm">Previous</a> |
<a href="unhash.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Read Commands from a File or from Stdin

Usage:  source [-eELnsh-] [filename] [arguments]

   Commands are executed just as if they were typed directly in to
   this thread of Hamilton C shell and can change local variables and
   current directory settings.

   (This differs from typing the name of a C shell script file as a
   command; if you do that, a separate thread is created.)

Options:

   -e   Execute only.  No logging to history.  (The default.)
   -E   Execute and log to history.
   -L   Load the history list only.  No syntax checking.
   -n   No Execute.  Just do a syntax check.
   -N   No Execute, but load the history list.
   -s   Read commands from stdin.
   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="sleep.htm">Previous</a> |
<a href="unhash.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		split
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				split
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm"><b>split</b></a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
split<br/>
<small><a href="sort.htm">Previous</a> |
<a href="strings.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Split a Large File into Chunks

Usage:  split [-bhs&lt;size&gt;-] [ infile [prefix] ]

   split breaks up a large file into chunks, written to a series
   of output files formed of the prefix plus a .nnn extension,
   where nnn is a 3-digit decimal number.  The default prefix is
   'chunk'.  Each chunk will be of the specified number of lines
   or bytes.  If only one operand is given, it's assumed to be
   the input filename unless -s is specified.

Options:

   -h         Help.  (This screen.)
   -b         Count bytes.  (Default is lines.)
   -s         Stdin is split.  (Implied if no files are specified.)
   -&lt;size&gt;    Chunk size.  (Defaults are 3000 lines/300000 bytes.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="sort.htm">Previous</a> |
<a href="strings.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		strings
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				strings
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm"><b>strings</b></a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
strings<br/>
<small><a href="split.htm">Previous</a> |
<a href="su.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Extract ASCII strings from a file

Usage:  strings [-hatbenuqvlodx-] [-&lt;min&gt;] [-r&lt;radix&gt;] [ file1 file2 ... ]

   strings will search for any occurrences of ASCII text in the
   files you give it.  The presumption is that the files are
   mostly binary and perhaps quite large, making it impractical
   to look at them directly.

   A string is normally defined as 4 or more printable ASCII
   characters terminated by a Null, CarriageReturn, NewLine
   or a CarriageReturn-NewLine combination.  All the white
   space characters are considered printable and are included
   in the length count except when they terminate a string.
   (To C programmers, these printable ASCII characters are
   the isprint() and IsSpace() characters.)

   If you specify a series of files, they're searched one after
   the other, each one introduced by name unless you specify
   Quiet mode.  Each string that's found is listed on a separate
   line.  Note that if a particular string contains NewLine or
   CarriageReturn characters, it will be displayed as a series of
   (possibly) very short substrings, one per line.

Options:

   -h         Help.  (This screen.)
   -&lt;min&gt;     Minimum string length to report, specified as a
              decimal integer.
   -a         Any string, even if not terminated with a line
              ending or a null character.
   -t         Trim leading white space from each string.
   -b         Discard strings containing only white space.
   -e         European characters (accented alphabetics and
              European punctuation) will be considered as
              ordinary printable text.
   -n         Control characters FormFeed and VerticalTab will
              also be considered to be string terminators.
   -u         UNICODE strings consisting of ordinary ASCII
              characters (each a printable ASCII character followed
              by a null character) will be extracted as regular
              ASCII.
   -q         Quiet mode.  Don't announce the name of each file
              as it's read.
   -v         Verbose.  Paste the name of the file in which it
              occurs onto the front of each string.
   -l         Long mode.  Show where each string occurs, counting
              bytes from the beginning of the file.  The radix
              used can be explicitly chosen with -o, -d, -x, or
              -r; it defaults to the value specified by the RADIX
              environmental variable if defined or 16 otherwise.
   -o         Octal offsets.
   -d         Decimal offsets.
   -x         Hex offsets shown.
   -r&lt;radix&gt;  User-specified radix.
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="split.htm">Previous</a> |
<a href="su.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		su
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				su
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm"><b>su</b></a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
su<br/>
<small><a href="strings.htm">Previous</a> |
<a href="sum.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        su:  Run an elevated command or as another user

Usage:  su.exe [-.eCLnPStvxwh-] [-c &lt;colors&gt;]
      [-o &lt;options&gt;] [-p &lt;password&gt;] [-s &lt;setrows&gt; ]
      [-X &lt;errlimit&gt;] [ userid [ command ]]

   su is the Windows equivalent of the UNIX "super user"
   command.  su runs the specified command (by default, the
   C shell) as either an elevated command or as another user
   (or both) in a new window.  By default, it then exits
   immediately.

   Invoked without any command line arguments, su defaults to
   starting an elevated copy of the C shell.

   Even though the command will run with new credentials,
   it will inherit the parent's environment variables and
   current directories. su does this by spawning a copy of
   itself with the new credentials to actually run the command
   and handshaking with it through shared memory to pass the
   environment.

   To run as another user, su uses the Secondary Logon
   service to start that copy of itself meaning that
   system service must be running.

   To elevate, su uses a special copy of itself, elevate.exe,
   which has been marked for the operating system as
   requiring elevation, causing the secure desktop prompt.

   To run elevated as another user, su first spawns a copy
   of itself as the new user, then elevates.

   The userid may be specified as either a simple name or as a
   domain\name pair.  If no userid is specified, or if "."
   is specified, su will interpret that to mean the current
   userid.  If the current user is specified, a password is not
   required because su will already be running as that user.
   (In fact, if a password is specified, seemingly for the
   current user, that's treated as an error to avoid
   accidentally running elevated when that was not the intent.)

   For userids other than the current user, if no password is
   given, su will try logging in without a password.  If that
   fails, su will prompt for a password; the password will not
   be echoed to the screen.

   The command can refer to any executable file or to a C shell
   command or alias.  If a complete path is not specified, su
   will look through the search path.  If an extension is not
   specified, su will try all the usual possibilities:  .csh,
   .exe, .com, .cmd and .bat.  If a corresponding executable
   file cannot be found, su will assume the command is an
   internal C shell command or alias.  If no command is
   specified, su will run the C shell.

   Net use drives are inherited only when elevating, not when
   running as a different user.  Any current directory settings
   in the inherited environment that refer to drives that don't
   exist under the new credentials are silently ignored.
   
   su will not run under Windows 9x and requests to elevate
   are ignored unless running under Vista, Windows 7 or later.

Options:

   -.             Elevate option.  Run the command elevated as the
                  current userid.  No userid or password should
                  be specified.
   -e             Elevate.  Run the command elevated as the
                  specified user.
   -c &lt;colors&gt;    If su is running in a new window because of
                  elevation, use the screen colors specified
                  in the next word, overriding whatever is
                  specified in the COLORS environment variable.
                  If there is neither a COLORS environment nor
                  a -c option specifying the colors, the default
                  is "white on blue".
   -C             Start up a copy of C shell to run the command.
   -L             If the C shell is run, make it a login shell.
   -n             Non-interactive.  The password, if not null,
                  must be passed on the command line.  su will
                  not prompt for it.
   -o &lt;options&gt;   Options to be passed to the C shell, if su
                  calls it.
   -p &lt;password&gt;  Password to be used with the specified userid.
   -P             Pause always.  Prompt for the user to press
                  Enter before exiting.  Implies -w.
   -s &lt;setrows&gt;   If su is running in a new window because of
                  elevation, set the window and buffer sizes
                  to the values specified in the next argument
                  word.  The format is the same as used by the
                  setrows command.  The default, "1000 80 40 80",
                  means a buffer of 1000 rows x 80 columns and
                  a display window of 40 rows x 80 columns.
   -S             Inverse of -L.  If the C shell is run, do
                  not make it a login shell.  Let it run
                  startup.csh only.
   -t             Trace mode.  The command line is written to
                  stderr just prior to invocation.
   -v             Verbose.  If either su or the child exits
                  with a return code greater than the error
                  limit, print the return code and the
                  corresponding system error message.
   -w             Wait for the child to exit before returning,
                  even if it's running in a new window.
   -x             Exit always.  By default, if su is running
                  in a new window because of elevation, it
                  pauses and prompts for the user to press Enter
                  if it writes any messages or if a child exits
                  with an error to ensure the user gets to read
                  what's displayed before the window goes away.
                  This option overrides that default behavior.
   -X &lt;errlimit&gt;  Error limit.  If a child command exits with
                  a return code greater than the specified
                  &lt;errlimit&gt;, su will consider that to be an
                  error.  By default, any return code &gt; 1 is
                  considered an error.

   -h             Help.  (This screen.)
   --             End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="strings.htm">Previous</a> |
<a href="sum.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		sum
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				sum
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm"><b>sum</b></a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
sum<br/>
<small><a href="su.htm">Previous</a> |
<a href="tabs.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Checksum the Contents of a File

Usage:  sum [-prxh-] [ file1 file2 ... ]

   sum checksums the contents of each of the files you specify,
   writing the results to stdout along with a count of the number
   of 512-byte blocks it read (including any partial blocks.)  If
   no files are given, sum reads from stdin.  sum is typically
   used to validate a file communicated over a possibly noisy
   communications line.

   sum treats the characters it reads as 8-bit unsigned integers
   and normally just adds them together to form a 16-bit unsigned
   result.  Overflows are ignored.

Options:

   -p         POSIX checksum.  Use the ISO-8802-3 CRC-32 poly-
              nomial to calculate a cyclic redundancy check for
              each input file and to write that value along with
              a count of the number of bytes (not blocks) to
              stdout.
   -r         Rotated checksum.  Rotate the accumulated checksum
              right one bit position before adding each character.
   -x         Xor'ed checksum.  For each new character, c, the
              checksum, i, is calculated as i += (i &lt;&lt; 1) ^ c.
   -h         Help.  (This screen.)
   --         End of options.

   (The default and rotated checksums are the same as those
   calculated by the Unix System V sum command; the xor checksum
   is unique to this implementation.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="su.htm">Previous</a> |
<a href="tabs.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		tabs
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				tabs
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm"><b>tabs</b></a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
tabs<br/>
<small><a href="sum.htm">Previous</a> |
<a href="tail.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Expand/Unexpand Tabs

Usage:  tabs [-hua-] [-&lt;tabs&gt;][ file1 file2 ... ]

   tabs expands tab characters into spaces or, if -u is
   specified, unexpands spaces into tabs as it copies the
   input files to stdout.  If no files are given, tab reads
   from stdin.  If multiple files are given, they're concat-
   enated one after the other to stdout.

   When unexpanding, only leading white space is normally
   converted to tabs.  If -a is specified, tabs are inserted
   anywhere they would replace two or more characters.

Options:

   -h         Help.  (This screen.)
   -u         Unexpand tabs.
   -a         Unexpand all tabs.
   -&lt;tabs&gt;    Tab settings to use for viewing text.  Default is
              to use value given by the TABS environment variable
              or, if  that's undefined, to assume tabstops every
              8 characters.  If desired, a list of tabstops can
              specified, separated by commas; the difference
              between the last two tabs given is used a standard
              increment for following tabs.
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="sum.htm">Previous</a> |
<a href="tail.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		tail
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				tail
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm"><b>tail</b></a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
tail<br/>
<small><a href="tabs.htm">Previous</a> |
<a href="tar.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Copy the Last Few Lines or Bytes of a File to Stdout

Usage:  tail [-hcfnq-] [-i&lt;sec&gt;] [-m&lt;msec&gt;]
             [-+&lt;start&gt;] [-t&lt;tabs&gt;][ file1 file2 ... ]

   tail copies the last part of the file you specify onto
   stdout.  You may specify where to begin copying in either
   lines or bytes measured from either the beginning or the
   end of the file.  If no file is given, tail reads from stdin.
   If several files are given, each is annouced unless you
   specify quiet mode.

Options:

   -h         Help.  (This screen.)
   -c         Count characters.  (Default is lines.)
   -f         Follow.  At end of file, go into an endless loop,
              sleeping for a second, then waking up to see if
              more data's been added.  (Use ^C to exit.)  The
              follow option is not valid if more than one file
              is specified and is ignored if data is being read
              from a pipe.
   -i&lt;sec&gt;    Interval in seconds between checking for more data
              if -f option is used.  (If the interval specified
              is greater than one second, tail will temporarily
              drop back to a one second interval anytime it finds
              new data when it does wake up.)
   -m&lt;msec&gt;   Interval in milliseconds between checking for more
              data if -f option is used.
   -&lt;start&gt;   Starting point, relative to the end of the file.
              (Default is last 10 lines or 512 bytes.)
   +&lt;start&gt;   Starting point, relative to the start of the file.
   -t&lt;tabs&gt;   Tab settings to use for viewing text.  (Default is
              to use value given by the TABS environment variable
              or, if  that's undefined, to do no tab expansion.)
   -n         No tab expansion.
   -q         Quiet mode.  Don't announce the name of each file
              it's read.
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="tabs.htm">Previous</a> |
<a href="tar.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		tar
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				tar
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm"><b>tar</b></a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
tar<br/>
<small><a href="tail.htm">Previous</a> |
<a href="tee.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Read/Write UNIX TAR and CPIO Format Files

Usage:  tar [-acCMtxXyh] [-#!ADFjJLNpPqrRsSTvV] [-fQwWZ-] [-#n]
              [-B blksize] [-Hon] [-Hoff] [-b sex] [-bL] [-bH]
              [-d dir] [-E endset] [-ff] [-I include] [-m map]
              [-O offset] [ tarfile ] [ file1 file2 ... ]

   tar is used to read or write a simple archive format popular
   for exchanging files between dissimilar machines.

   tar normally expects the archive to be in a file specified by
   the tarfile operand.

   When adding files, the names are in the user's normal file
   name space and wildcards can be used in the normal fashion.

   When listing or extracting files, the file names that follow
   are considered to be case-sensitive in the name space of
   what's in the archive and must match the complete path
   specified there.  Full wildcarding is supported.  For example,

      tar -x myarchive.tar ".../*.[ch]"

   would cause any .c or .h files anywhere in the archive to be
   extracted.  (The "..." construct matches any number of
   directory levels and the "[ ]" construct matches any
   character in the enclosed set.)  Notice that if wildcards are
   used, they should be enclosed in single or double quotes so
   the C shell won't try expanding them before tar sees them.
   Also, if want to specify a character that's normally a
   wildcard as an ordinary character, you will need to "double-
   escape" it.  For example, to extract a file named
   "mail[2008]", you would need to type:

      tar -x myarchive.tar mail^^[2008^^]

   to ensure that the escape character (even if it was inside
   quotes) is actually passed through the C shell to tar.

   When extracting files, this version of tar incorporates logic
   to interactively crunch up a filename in the archive into
   something legal on an NT filesystem.  If -F is specified, FAT
   naming rules are enforced.  Otherwise, HPFS or NTFS rules
   are assumed, meaning long filenames assumed to be legal.
   Any renamings will be listed in a .map file.

   When reading an archive, this version of tar automatically
   detects whether it was written in CPIO or TAR format and
   what bytesex was used.

   tar also incorporates logic to automatically convert between
   the \n line endings used in an archive and the \r\n line
   endings used under NT unless the file appears to be
   binary, based on its content.  The environment variables
   TARBINARY and TARASCII can also be used to specify sets of
   files by name which are to be considered binary or ASCII,
   respectively, regardless of content.  Each of these variables
   may contain a list of wildcards.  If a filename or just the
   tail of it (i.e., just the name + extension, leaving off the
   preceding path) matches one of the wildcards in the list,
   that file is considered to be of the specified type.  If a
   filename matches both lists or if it matches neither list,
   the usual test based on file content will be made.  Files
   that receive line end conversions are highlighted in the
   listings produced by tar in the ASCIICONVERT color for easy
   review.

   There is no limit on the overall length of an archive except
   whatever limit may be imposed by the filesystem if the archive
   is written to disk.  The filesize limit for individual files
   within an archive is determined by the archive format:  for
   tar archives, the limit is 8.4 million petabytes, essentially
   unlimited; for CPIO binary and new portable CPIO archives, the
   limit is 4G bytes; for CPIO ASCII archives, the limit is 8G
   bytes.  (But when using tar for interchange with other
   systems, bear in mind that those other systems may impose
   their own smaller limits.)

   When adding files to an archive, timestamps outside the legal
   range (January 1, 1970 to 337February 7, 2106) for a tar archive
   will be truncated to these dates.

Tape Drives:

   The tarfile can be the tape device, specified by its special
   file name, \\.\tape0 (or \\.\tape1, \\.\tape2, etc.,
   if you have more than one), or via the -# option.

   When reading/writing to a tape, tar rewinds the tape when it
   starts up and rewinds again and then ejects when it finishes
   unless -N is specified.

Basic Commands:

   -a         Add files to the end of the archive.  If the
              archive is on a tape device, this operation may
              not be possible, depending on whether your drive
              supports repositioning and rewriting the last
              physical block on the tape.  For example, it
              works with DAT drives but not with QIC drives.
              If -a does not work with your drive, you'll have
              to use -c instead.
   -c         Create a new archive, truncating any existing
              archive to zero bytes before writing to it.
   -C         Copy entire archive segments (including headers and
              and any padding) to stdout.  After the last
              segment, write a trailer to mark the end of the
              archive.  (If you intend to concatenate archives,
              use the -Z option to suppress writing the trailer.)
   -M         Just build a mapfile for renaming files in the
              archive to NT conventions; don't extract
              anything.
   -t         List the contents of the archive.  This is the
              default.
   -x         Extract files from the archive.  Default is all
              files in the archive.
   -X         Extract everything EXCEPT the specified files from
              the archive.
   -y         Extract the specified files in the archive to
              stdout.
   -h         Help.  (This screen.)

Basic Options:

   -#         Use the default tape device, \\.\tape0.
   -#n        Use the n-th tape device, where n is a single
              decimal digit.  For example, -#1 means tar should
              use \\.\tape1.
   -!         Non-interactive.  Files are renamed as necessary
              for NT conventions.  (Particularly useful
              with -M when trying to read a new, large archive
              file.)
   -A         The Archive bit is reset for any files or direct-
              ories copied to a TAR or CPIO archive file.  (When
              extracting files, the -A option is ignored and the
              Archive bit is always set.)
   -B blksize Use the specified blocksize when creating a new
              archive.  Default is 10240 bytes if supported
              by the device.  When reading or adding to an
              existing archive on tape, tar tries to determine
              and use whatever blocksize was used when the
              archive was created.   How it does that depends
              what release of Windows NT you're running and
              whether your drive supports variable blocksizes.
              If you're running NT 3.51 or later and variable
              blocksizes are supported, this option is ignored
              and the actual blocksize is determined directly
              using variable blocksize support.  Otherwise,
              tar first tries this specified blocksize; if that
              doesn't work, it tries all the possible multiples
              of 512 bytes up to the maximum supported on your
              machine.
   -D         Dim.  Don't insert ANSI escape sequences into the
              output to highlight anything.
   -F         FAT filesystem naming when extracting or building
              the map file.
   -Hon       Hardware compression on, if supported.  (Default is
              to use the current setting for compression.)
   -Hoff      Hardware compression off.
   -j         New portable System V CPIO ASCII format.
   -J         New portable System V CPIO ASCII format with
              checksum.
   -L         Long listing similar to ls -L showing the attri-
              butes, timestamp and length of each file in the
              archive.
   -N         No rewind or eject.  If the tarfile is on a tape
              device, tar normally rewinds the tape at the start
              and then rewinds and ejects at the end.  This
              option turns that off.
   -p         CPIO format, using binary headers.
   -P         CPIO format, using ASCII headers.
   -q         Quiet.  tar normally prints the header of each
              file as it's extracted (-x) or added (-a or -c) to
              the archive. This option turns that off.
   -r         CarriageReturn/NewLine expansion is turned off.
              (Default is normally to convert any \n characters
              not preceded by a \r in the archive to \r\n
              combinations under NT unless the file
              appears to be binary.)
   -R         CarriageReturn/NewLine expansion is forced ON, even
              for files that appear to be binary.
   -s         Read the archive from stdin when listing the table
              of contents or extracting.  Write the archive to
              stdout when adding files.  (Implies non-inter-
              active.)
   -S         Stop if a file is encountered that cannot be
              extracted.  Normally, a warning message is given
              but processing continues.
   -T         Total the sizes of all selected files.
   -v         Verbose.  Like -L, but also show the offset of each
              file from the beginning of the archive and what
              archive format and bytesex was used.  Also turns
              on warnings about line-end conversions being turned
              off on binary files.
   -V         Don't use variable block I/O even if the drive
              claims it supports it.  Useful as a workaround
              if your drive's firmware has a bug.
   --         End of options.

Advanced Options:

   -b sex     Byte sex in the archive:  abcd (little-endian),
              badc (big-endian), cdab or dcba.  Default is to
              autosense bytesex in existing archives and to use
              abcd for new archives.
   -bL        Little-Endian bytesex.  (An alias for -b abcd.)
   -bB        Big-Endian bytesex.  (An alias for -b badc.)

              Note:  To write an archive intended to be read
                     on a RISC or Motorola-based UNIX machine,
                     use -b badc or -bB (big-endian).

   -d dir     Default destination drive and directory when
              extracting files.
   -E endset  Offset at which to stop reading the archive file.
   -f         Fullpath option.  Put the full pathname (minus any
              disk prefix) specified on the command line into the
              archive header when adding.  (In this context, the
              full path means the full name given on the command
              line, not the fully-qualified name starting from
              the root directory.)  When extracting, use the full
              pathname given in the header to determine where the
              files will go.
   -ff        Another variation on the fullpath option that will
              put the entire pathname, even including the drive
              letter into the tar archive.  The resulting name
              isn't really legal in a tar file, but it's useful
              for doing backups of several drives at once.
   -I include Files to be added to or read from the archive are
              specified in the include file.  If the name of
              the include file is given as "-", the names
              will be read from stdin.  If more than one -I
              include file is given, the lists of names they 
              hold will be concatenated, one after another.
              Any files specified on the command line will be
              added onto the end.
   -m map     Specific filename to be used for showing mappings
              from names in the archive to names used on
              NT.  (If -M is specified, but -m isn't
              used to specify a name for the mapfile, the
              default is to paste a .map extension onto the name
              of the tar file; if -s is specified, i.e., the tar
              file doesn't have a name, no map file is used
              unless -m is given.)
   -O offset  Offset at which to start reading the archive file.
              Given in bytes from beginning of the file.
   -Q         Very Quiet.  tar normally warns of any garbled
              sections that it skipped; this turns off those
              warnings also.
   -w         Share all files being copied to the archive for
              read/write access by other processes.  (Default
              is to do that only with files already open by
              another process.)
   -W         Warnings.  Show just the files that can't be
              extracted to NT because of their file
              types.
              (Shown in the FOREIGNFILES color.)
   -Z         Suppress writing the trailer normally written
              following the last segment extracted from an
              archive with the -C option.  (Useful for
              concatenating segments extracted from several
              separate archives.)

Examples:

   1. To list the contents of a tar file on tape, showing the
      timestamps and sizes of the files:

         tar -L \\.\tape0

   2. To extract everything on the tape into the current
      directory, again showing timestamps and sizes:

         tar -xL \\.\tape0

   3. To copy all the *.c files in the current directory to a
      new tar tape, overwriting anything that may already be
      on the tape, again showing timestamps and sizes:

         tar -cL \\.\tape0 *.c

   4. Same as (3), but write it in big-endian format, suitable
      for a UNIX RISC machine:

         tar -cLbB \\.\tape0 *.c

   5. Same as (3), but adding files to an existing archive
      on the tape rather than overwriting it:

         tar -aL \\.\tape0 *.c

      Note:  Adding to an archive on tape isn't supported by
             all types of tape drives.  See the comments
             regarding the -a operation above.

   6. Extract everything on a tar-format floppy into the
      current directory:

         dskread a: | tar -xsL

   7. Write all the *.c files in the current directory to a
      tar-format floppy in big-endian format, verifying each
      write operation along the way:

         tar -csbB *.c | dskwrite -vx a:

TAR Format:

   Tar files are organized as a series of 512-byte blocks.
   Individual files always start on a block boundary with a
   header block followed by the uncompressed data in the file.
   At the end of the file are two blocks filled with binary
   zeros.  The header has the following format, packed with
   individual fields byte-aligned:

      typedef struct {
            char  name[100],
                  mode[8],
                  userid[8],
                  groupid[8],
                  filesize[12],
                  timestamp[12],
                  checksum[8],
                  linkflag,
                  linkname[100];
            union {
               char  unused_chars[255];
               struct {
                  char  magic[6],
                        version[2]
                        username[32],
                        groupname[32],
                        devmajor[8],
                        devminor[8],
                        prefix[155];
                  } ustar;
               } u;
            } tar_header;

   Traditionally, everything in a tar header is in ASCII with
   nulls and spaces to punctuate the fields and numbers are
   always in octal.  But eleven octal digits (plus a space) in
   the filesize field would only allow a maximum value of 8.59GB,
   which is certainly smaller than may be supported on many
   modern systems, including Windows.  Thus, a popular extension
   supported by this tar is to interpret numeric fields as
   binary if the high bit is set in the first character.

   The mode, user and group ids aren't meaningful on NT
   and are ignored when extracting and just filled in with
   read/write for owner, owned by root when adding.  The
   timestamp is in seconds since Jan 1 00:00:00 GMT 1970.  The
   checksum is calculated as if that field contained spaces.
   The linkflag tells the file type, reported in the long listing
   as one of the following:

      -    Normal File
      D    Directory
      L    Link (not a separate file, just another name
           for one that already exists)
      S    Symbolic Link
      C    Character Device
      B    Block Device
      F    FIFO

   Under NT, only the normal files and directories have
   any meaning.  Directories are normally highlighted.  The other
   file types are normally reported in bright red but otherwise
   ignored.

   The last 255 bytes may contain either all binary zeros or
   the new "USTAR" trailer, used when the filename is longer
   than 100 characters.  In USTAR format, the magic field
   contains the null-terminated string "ustar", the version
   is "00" (without a null) and, if the prefix field is not
   null, the actual pathname is formed by concatenating the
   prefix + a slash + the name.  If the prefix is null, the
   name field is used alone.

   When writing USTAR format, the username and groupname
   are null, the devmajor is 0 and devminor is 1.  When
   reading USTAR format, all the fields except the prefix
   are ignored.

   If the filename is too long even in USTAR format, tar will
   use the GNU extension convention of writing a special prefix
   consisting of a header marked with a special linkflag
   indicating that the data which follows is the full name of
   the next file in the archive.

CPIO Format:

   If -p is specified, tar will read and write CPIO format files,
   using binary headers of the following format:

      typedef struct {
            short  magic,     /* Always 0x71c7 == Octal 070707 */
                   dev;       /* Device containing directory
                                 entry for this file. */
            ushort inode,     /* UNIX inode number. */
                   mode,
                   userid,
                   groupid,
                   nlink,
                   rdev;     /* Device ID for special files. */
            ulong  timestamp;
            ushort namelen;  /* including trailing null. */
            ulong  filesize;
            char   name[ namelen rounded to word ];
            } cpio_header;

   The dev, inode, mode, userid, groupid, nlink and rdev fields
   are not meaningful on NT and are ignored when
   extracting and filled in with 1, 1, read/write by owner,
   0, 0, 1 and 0, respectively, when writing.

   If -P is specified, tar will read and write CPIO format files
   using the alternate ASCII format headers, where each ushort is
   written as a 6-character octal number, each ulong as an 11-
   character octal number, and name is null-terminated.

   In a CPIO file, data immediately follows the header and is not
   padded to a block boundary.

Portable CPIO ASCII Format:

   If -p or -P is specified, tar will read and write archives
   using headers defined by the portable CPIO ASCII format
   introduced with UNIX System V:

      typedef   char   long_hex[8]
      
      typedef struct new_cpio_ascii_header_str {
            char       magic[6];
            long_hex   inode,
                       mode,
                       userid,
                       groupid,
                       nlink,
                       timestamp,
                       filesize,
                       dev_major,
                       dev_minor,
                       rdev_major,
                       rdev_minor,
                       namelen,    /* including trailing null. */
                       checksum;
            char       name[ namelen+1 ];
            } new_cpio_ascii_header;

   The magic field always contains either "070701" (normal) or
   "070702" (checksum variation.)  The inode, mode, userid,
   groupid, nlink, dev and rdev fields are not meaningful on
   NT and are ignored when extracting and filled in with
   1, read/write by owner, 0, 0, 1, 1, and 0, respectively, when
   writing.

   The header, including the filename, is padded to the next
   DWORD (4-byte) boundary.  The data section immediately follows
   and is also padded to the next DWORD boundary.

   The difference between the -p and -P options is that if -P
   is specifed, the checksum field is filled in with a simple
   32-bit sum of all the bytes in the file, each taken as an
   unsigned 8-bit value.


Colors:

   You may set your own choices for screen colors using these
   environmental variables:

    Name           Use                              Default
    ASCIICONVERT   ASCII files receiving line       Bright Yellow
                   end conversion
    COLORS         Normal screen colors             &lt;null string&gt;
    DIRECTORIES    Directories                      Bright
    FOREIGNFILES   Filetypes not supported by NT    Bright Red
    READONLYDIRS   Directories marked read-only     same as DIRECTORIES
    READONLYFILES  Files marked read-only           same as COLORS

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The
   names of the colors and the words bright, dim, reverse and on
   may be in either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.  DIRECTORIES,
   FOREIGNFILES and ASCIICONVERT inherit from COLORS.  If COLORS
   is null, tar uses the current screen colors it finds at startup.
   Specifying COLORS=none turns off all use of COLOR.

   If the -D (dim) option is specified, all highlighting is
   turned off, regardless of the settings for these environment
   variables.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="tail.htm">Previous</a> |
<a href="tee.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		tee
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				tee
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm"><b>tee</b></a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
tee<br/>
<small><a href="tar.htm">Previous</a> |
<a href="touch.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Copy Stdin to Stdout and to Each File Specified

Usage:  tee [-ah-] file1 [ file2 ... ]

   tee is a "pipe-fitting" utility for snapshotting the data passing
   through the middle of a pipeline.

Options:

   -a         Append to any output files that already exist instead
              of truncating and overwriting them.
   -h         Help.
   --         End of Options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="tar.htm">Previous</a> |
<a href="touch.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		touch
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				touch
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm"><b>touch</b></a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
touch<br/>
<small><a href="tee.htm">Previous</a> |
<a href="tr.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Create File or Set Modification Time

Usage:  touch [-rfc2wh-] [ mmddhhmm[ss][[yy]yy]] ] pathname1 [ pathname2 ... ]

   touch sets the timestamp on a file to the current or specified
   date and time.  If the file doesn't exist, the normal action is
   to create it.

Options:

  mmddhhmmssyyyy  Month, Day, Hour, Minutes, Seconds and Year in
                  decimal.  (If the century isn't specified, 81 to
                  99 is interpreted as 1981 to 1999; 00 to 80 is
                  interpreted as as 2000 to 2080.)  If only 10
                  digits are specified, touch interprets the last
                  two digits as seconds if they're less than 60;
                  otherwise, it interprets them as the year.

  -r    Recursively touch contents of directories.
  -f    Force Read-only files to be touched also.
  -c    File is not created if it doesn't already exist.
  -2    Two second granularity for compatibility with FAT and
        HPFS filesystems.
  -w    Give a warning message but continue trying to touch any
        remaining files or directories even if problems were
        encountered with some of them.
  -h    Help.
  --    End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="tee.htm">Previous</a> |
<a href="tr.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		tr
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				tr
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm"><b>tr</b></a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
tr<br/>
<small><a href="touch.htm">Previous</a> |
<a href="uniq.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Translate Characters Filter

Usage:  tr [-cdsnh-] [ string1 [string2] ]

   tr is used to perform simple character substitutions as it
   copies data from stdin to stdout.  Individual characters in
   string1 are mapped to the corresponding characters of string2.
   If string2 is too short, it is padded by duplicating its last
   character.  In either string, the minus sign can be used to
   indicate a range of characters.

   Here's an example which  creates a list of all the words in
   file1, one per line, in file2, where a word is taken as a maximal
   string of alphabetics.  (The ^n character is expanded by the
   C shell into a newline character.)

       % tr -csn A-Za-z ^n &lt;file1 &gt;file2

Options:

   -h         Help.  (This screen.)
   -c         Complement the set of characters in string1.
   -d         Delete any occurrences of the characters in string1.
              (If present, string2 is ignored.)
   -s         Squeeze all strings of repeated output characters
              in string2 to single characters.
   -n         Normalize line endings.  Ensure that every line ends
              with \r\n.  Fixup any \r or \n by itself or any
              reversed \n\r character pair.  When squeezing,
              normalization also causes repeated \r\n sequences
              to be squeezed if either \r or \n is in string2.
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="touch.htm">Previous</a> |
<a href="uniq.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		unhash
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				unhash
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm"><b>unhash</b></a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
unhash<br/>
<small><a href="source.htm">Previous</a> |
<a href="verify.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Turn off Path Hashing

Usage:  unhash [-h-]

   Normally, a hashing mechanism is used in an attempt to speed up
   searches of the path directories.  If you're performing system
   administration work, moving files in the path directories, the
   hash mechanism may not always reflect the latest changes you've
   made.  The unhash command can be used to turn hashing off, setting.
   nohashing = 1.

   (See also the rehash and hashstat commands.)

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="source.htm">Previous</a> |
<a href="verify.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		uniq
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				uniq
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm"><b>uniq</b></a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
uniq<br/>
<small><a href="tr.htm">Previous</a> |
<a href="uudecode.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Report Unique Lines in Text Files

Usage:  uniq [-hbcdiuw-] [-f fields] [-s chars]
                [-&lt;n&gt;] [+&lt;m&gt;] [ file1 file2 ...]

   uniq does a quick, simple string comparison of adjacent lines
   in text files, normally just discarding any duplicates as it
   copies its input to stdout.

   There are some diff-style options for ignoring upper-/lower-
   case differences or treating white spaces of any length as
   equal, etc.  Also, you can optionally choose to list only the
   lines that occur just once or only those that have duplicates.

   If several files are given, the effect is the same as if they
   were pasted together, one right after another into one long
   file.

Options:

   -b           Blank spaces of any length compare equal.  Ignore
                any leading or trailing white space on each line.
   -c           Preface each line with a count of the number of
                times it occurred.
   -d           Duplicates.  Only the lines which have at least
                one duplicate are reported.
   -i           Ignore character case.
   -u           Unique lines.  Only the lines which occur only
                once are reported.
   -w           White space is ignored totally.
   -f fields    Ignore the first &lt;fields&gt; fields on each input
                line when doing comparisons, where &lt;fields&gt; is
                is a positive decimal integer.  A field is
                defined as a maximal string of tabs or spaces
                followed by non-tab, non-space characters.
   -s chars     Ignore the first &lt;chars&gt; characters when doing
                comparisons.  If used in conjunction with the
                -f option, the first &lt;chars&gt; characters after
                the first &lt;fields&gt; fields will be ignored.
   -&lt;n&gt;         An older form of field specification, now
                considered obsolete by POSIX.  Equivalent to
                -f &lt;n&gt;.
   +&lt;m&gt;         An older form of character specification, now
                considered obsolete by POSIX.  Equivalent to
                -s &lt;m&gt;.
   -h           Help.  (This screen.)
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="tr.htm">Previous</a> |
<a href="uudecode.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		uudecode
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				uudecode
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm"><b>uudecode</b></a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
uudecode<br/>
<small><a href="uniq.htm">Previous</a> |
<a href="uuencode.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Uudecode Binary Data

Usage:  uudecode [-h-] [ file1 file2 ... ]

   Uuencode and Uudecode are used to encode arbitrary binary
   data into a sequence consisting solely of printable ASCII
   characters, thus allowing the data to be sent over mail
   systems, etc., that cannot handle binary data.

   Uuencode reads from the source file (or stdin if no source
   file is specified), writing the encoded version to stdout.

   Uudecode reads the encoded file (or stdin), strips off any
   leading and trailing lines and recreates the original file,
   giving it the name that had been specified to uuencode as
   the decode_pathname parameter.

Uuencode format:

   The encoded form consists of a header line followed by a
   number of body lines and a trailer line.  The header is
   of the form:

       begin &lt;mode&gt; &lt;decode_pathname&gt;

   where the &lt;mode&gt; field indicates the read/write permissions
   to be given to the file.  The file ends with a line of the
   form:

       end

   Both these lines shall have no preceding or trailing
   text or white space.

   The POSIX standard specifies that the "end" line should
   be the only indicator of the end of data.  Most existing
   uudecode implementations do not adhere to this specification,
   however.  Instead, they require that there be an immediately
   preceding line marked as containing 0 bytes of data.  To
   ensure compatibility with these flawed uudecodes, this
   uuencode/uudecode pair will write that dummy line when
   encoding and ignore it when decoding.

   Data is encoded three bytes at a time into four printable
   ASCII characters by splitting the input at 6 bit intervals
   into 4 bytes, each containing data in only the lower 6 bits.
   The hex value 0x20 is then added to each byte, producing
   a value in the range 0x20 to 0x5f, which are all printable
   ASCII characters.  Thus, three bytes A, B and C of raw data
   are converted to the four ASCII characters:

      0x20 + (( A &gt;&gt; 2                    ) &amp; 0x3f)
      0x20 + (((A &lt;&lt; 4) | ((B &gt;&gt; 4) &amp; 0xf)) &amp; 0x3f)
      0x20 + (((B &lt;&lt; 2) | ((C &gt;&gt; 6) &amp; 0x3)) &amp; 0x3f)
      0x20 + (( C                         ) &amp; 0x3f)

   The encoded data is arranged into lines of no more than
   60 characters (representing at most 45 bytes of raw data)
   preceded by a length character, equal to the number of
   raw characters encoded plus 0x20.

   Some existing uuencode implementations do not correctly
   follow this specification.  If the resulting character
   is a space, they'll write a backquote instead.  Their
   decoding procedure is to extract only the low 7 bits
   after subtracting 0x20.  This extra step is, fortunately,
   innocuous on correctly encoded data, so for compatibility
   with existing uuencodes, this version of uudecode performs
   that mask operation also.

   Although not required by the POSIX standard, this version
   of uudecode has a number of enhancements:

   1.  It will accept input streams containing any number of
       uuencoded files concatenated together.  Each will be
       properly extracted as a separate file.

   2.  If any directory levels in the output are missing,
       an attempt will be made to create them.

   3.  The tilde is recognized as a home directory reference
       in the decode pathname.


Options:

   -h           Help.  (This screen.)
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="uniq.htm">Previous</a> |
<a href="uuencode.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		uuencode
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				uuencode
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm"><b>uuencode</b></a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
uuencode<br/>
<small><a href="uudecode.htm">Previous</a> |
<a href="ver.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Uuencode Binary Data

Usage:  uuencode [-h-] [-m &lt;mode&gt;] [ file ] decode_pathname
          [-ca- source1 [ source2 ... ] destination ]

   Uuencode and Uudecode are used to encode arbitrary binary
   data into a sequence consisting solely of printable ASCII
   characters, thus allowing the data to be sent over mail
   systems, etc., that cannot handle binary data.

   Uuencode reads from the source file (or stdin if no source
   file is specified), writing the encoded version to stdout.

   Uudecode reads the encoded file (or stdin), strips off any
   leading and trailing lines and recreates the original file,
   giving it the name that had been specified to uuencode as
   the decode_pathname parameter.

Uuencode format:

   The encoded form consists of a header line followed by a
   number of body lines and a trailer line.  The header is
   of the form:

       begin &lt;mode&gt; &lt;decode_pathname&gt;

   where the &lt;mode&gt; field indicates the read/write permissions
   to be given to the file.  The file ends with a line of the
   form:

       end

   Both these lines shall have no preceding or trailing
   text or white space.

   The POSIX standard specifies that the "end" line should
   be the only indicator of the end of data.  Most existing
   uudecode implementations do not adhere to this specification,
   however.  Instead, they require that there be an immediately
   preceding line marked as containing 0 bytes of data.  To
   ensure compatibility with these flawed uudecodes, this
   uuencode/uudecode pair will write that dummy line when
   encoding and ignore it when decoding.

   Data is encoded three bytes at a time into four printable
   ASCII characters by splitting the input at 6 bit intervals
   into 4 bytes, each containing data in only the lower 6 bits.
   The hex value 0x20 is then added to each byte, producing
   a value in the range 0x20 to 0x5f, which are all printable
   ASCII characters.  Thus, three bytes A, B and C of raw data
   are converted to the four ASCII characters:

      0x20 + (( A &gt;&gt; 2                    ) &amp; 0x3f)
      0x20 + (((A &lt;&lt; 4) | ((B &gt;&gt; 4) &amp; 0xf)) &amp; 0x3f)
      0x20 + (((B &lt;&lt; 2) | ((C &gt;&gt; 6) &amp; 0x3)) &amp; 0x3f)
      0x20 + (( C                         ) &amp; 0x3f)

   The encoded data is arranged into lines of no more than
   60 characters (representing at most 45 bytes of raw data)
   preceded by a length character, equal to the number of
   raw characters encoded plus 0x20.


Options:

   -m &lt;mode&gt;    Mode to be specified for the file.  Default
                is to simply fill in 666, meaning read/write
                access by everyone for normal files or 444,
                meaning read-only access by everyone for
                files marked as read-only.
   -c           Alternate cp-style syntax.  Instead of using
                stdout to write the output and having to
                explicitly specify the name to be given to
                each file in the uuencoded form, this option
                allows one to simply copy any number of files
                or directories into the uuencoded output file.
                The name that will be written into the header
                will be just the tail of the filename, just as
                cp would do.
   -a           Like -c, but appending.  If the output file
                already exists, this will append onto the end.
   -h           Help.  (This screen.)
   --           End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="uudecode.htm">Previous</a> |
<a href="ver.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		ver.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				ver.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
ver.csh<br/>
<small><a href="uuencode.htm">Previous</a> |
<a href="vol.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>echo $OperatingSystem Version $WinVersion Build $WinBuild $WinServicePack
echo Hamilton C shell x64 Release 5.2.g
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="uuencode.htm">Previous</a> |
<a href="vol.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		verify
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				verify
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm"><b>verify</b></a></li>
				<li><a href="wait.htm">wait</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
verify<br/>
<small><a href="unhash.htm">Previous</a> |
<a href="wait.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Turn Write Verification Mode On or Off

Usage:  verify [-h-] [ mode ]

   Under NT, verify is always on, meaning that the kernel will
   always verify that any data written to the disk can be read
   back.  The mode can be specified as 0 or off, or 1 or on,
   just as it might be under OS/2 but the value will be ignored.
   If no arguments are given, the current mode is reported.


Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="unhash.htm">Previous</a> |
<a href="wait.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		vol
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				vol
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm"><b>vol</b></a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
vol<br/>
<small><a href="ver.htm">Previous</a> |
<a href="wc.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        List Volume Labels

Usage:  vl [-acvh-] [ disk1 disk2 ... ]

   vol reports the volume label information on each of the
   specified disks.  If no disks are specified, vol looks for
   a DRIVEMASK environmental variable that can be used to mask
   off just the drives you want reported.  The DRIVEMASK is
   specified as a list of drive letters; ranges are allowed.
   Otherwise all the partitions beginning with c: are reported.
   The current disk's label information is highlighted.

   This command is normally stored in the file vl.exe and invoked
   with an alias so it can be used from cmd.exe without colliding with
   the internal cmd.exe vol function.

Options:

   -a   If no disks are specified, report on all disks.
   -c   If no disks are specified, report on just the current disk.
   -v   Verbose.  Also report maximum component length, the
        features it supports and the name of the filesystem.
   -h   Help.
   --   End of options.

Colors:

   You may set your own choices for screen colors using these
   environmental variables:

      Name         Use                             Default
      COLORS       Normal screen colors            &lt;null string&gt;
      HIGHLIGHT    Current disk                    Bright

   Colors recognized are black, red, green, yellow, blue, magenta
   (or red blue), cyan (or blue green) or white.  Foreground and
   background colors may also be bright, dim or reverse.  The names
   of the colors and the words bright, dim, reverse and on may be
   in either upper or lower or mixed case.

   Either or both the foreground and background colors may be
   specified; if you don't specify a value, it's considered
   transparent and inherits the color underneath it.   HIGHLIGHT
   inherits from COLORS.  If COLORS is null, vol uses the current
   screen colors it finds at startup.  Specifying COLORS=none
   turns off all use of color.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="ver.htm">Previous</a> |
<a href="wc.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		wait
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../50-BuiltinUtilities.htm">Builtin utilities</a>
			</h4>
			<h2>
				wait
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm"><b>Builtin utilities</b></a></li>
				<li><a href="../51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Builtin Utilities</p></li>
				<li><a href="cd.htm">cd</a></li>
				<li><a href="chcp.htm">chcp</a></li>
				<li><a href="chdir.htm">chdir</a></li>
				<li><a href="cls.htm">cls</a></li>
				<li><a href="dirs.htm">dirs</a></li>
				<li><a href="echo.htm">echo</a></li>
				<li><a href="eval.htm">eval</a></li>
				<li><a href="hashstat.htm">hashstat</a></li>
				<li><a href="heapstat.htm">heapstat</a></li>
				<li><a href="history.htm">history</a></li>
				<li><a href="kill.htm">kill</a></li>
				<li><a href="popd.htm">popd</a></li>
				<li><a href="ps.htm">ps</a></li>
				<li><a href="pushd.htm">pushd</a></li>
				<li><a href="rehash.htm">rehash</a></li>
				<li><a href="rotd.htm">rotd</a></li>
				<li><a href="sleep.htm">sleep</a></li>
				<li><a href="source.htm">source</a></li>
				<li><a href="unhash.htm">unhash</a></li>
				<li><a href="verify.htm">verify</a></li>
				<li><a href="wait.htm"><b>wait</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
wait<br/>
<small><a href="verify.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Wait for Children to Complete

Usage:  wait [-h-]

   Sleep until a child thread or process completes or until
   an interrupt occurs.

Options:

   -h   Help.  (This screen.)
   --   End of options.

(The slash, "/", may be used instead of a minus to introduce
options.  To specify a different set of characters to introduce
options, use the SWITCHCHARS environmental variable.)

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="verify.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
	


		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		wc
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				wc
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm"><b>wc</b></a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
wc<br/>
<small><a href="vol.htm">Previous</a> |
<a href="whereis.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Count Words (and lines and characters)

Usage:  wc [-lwch-] [ file1 file2 ... ]

   wc prints counts of all the lines, words and/or characters in each
   of the files specified, and totals for the whole list.  If no files
   are specified, it counts stdin.

Options:

   -l         Count lines
   -w         Count words
   -c         Count characters
   -h         Help
   --         End of options

Default is -lwc.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="vol.htm">Previous</a> |
<a href="whereis.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		whereis.csh
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				whereis.csh
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
whereis.csh<br/>
<small><a href="wc.htm">Previous</a> |
<a href="whoami.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>#  whereis.csh

#  Look through the directories on the search path for any files corresponding
#  to the command name given, reporting anything that's found, trying each
#  try each of the six possibilities, no extension, .csh, .exe, .com, .cmd
#  and .bat, in each directory.

#  This is an example of a self-loading procedure.  The first time
#  it is referenced, it runs as a .csh script, defining and running
#  the whereis proc.  Successive calls directly invoke the pre-compiled
#  procedure and will run slightly faster. (View this file with TABS=3.)

proc whereis(name)
   local i, j
   if ($#name) then
      if ($#name &gt; 1) @ name = name[0]
      foreach i ($path)
         if (i =~ "*\") then
            if (-e $i$name) echo $i$name
            foreach j (.csh .exe .com .cmd .bat)
               if (-e $i$name$j) echo $i$name$j
            end
         else
            if (-e $i\$name) echo $i\$name
            foreach j (.csh .exe .com .cmd .bat)
               if (-e $i\$name$j) echo $i\$name$j
            end
         end
      end
   end
end

whereis $argv
</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="wc.htm">Previous</a> |
<a href="whoami.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		whoami
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				whoami
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm"><b>whoami</b></a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
whoami<br/>
<small><a href="whereis.htm">Previous</a> |
<a href="xargs.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Print the Current Domain and User Names

Usage:  whoami [-dupgh-]

   whoami prints out the current domain and user names and,
   optionally, the groups to which the user belongs.  By
   default, it prints it in the form &lt;domain&gt;\&lt;user&gt;.  Under
   Windows 9x, the domain is actually the current machine name.
   Groups exist only under Windows NT, not Windows 9x.

Options:

   -d         Print only the domain name.
   -u         Print only the user name.
   -p         Also print the user's primary group.  (NT only.)
   -g         Also print a list of all the groups to which the user
              belongs.  (NT only.)
   -h         Help
   --         End of options

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="whereis.htm">Previous</a> |
<a href="xargs.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		xargs
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				xargs
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm"><b>xargs</b></a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
xargs<br/>
<small><a href="whoami.htm">Previous</a> |
<a href="xd.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        xargs:  Construct argument list(s) and invoke utility

Usage:  xargs [-CtTxh-] [-o&lt;opt&gt;] [-e&lt;escape&gt;] [-X &lt;errlimit&gt;]
             [-n &lt;number&gt;] [-s &lt;size&gt;] [-r&lt;string&gt;]
             [&lt;utility&gt; [&lt;arguments&gt;]]

   xargs will construct a command line consisting of the
   specified utility name and arguments followed by as many
   arguments read from stdin as will fit, given the constraints
   of the operating system or as specified by the -n and -s
   options.  xargs then invokes that constructed command and
   waits for it to complete.  This sequence is repeated until
   end-of-file is detected on stdin or until a constructed
   command exits with return code greater than 1 or some
   other specified value.  (The value of 1 was chosen so that
   commands like grep and fgrep that exit with 1 if no matches
   are found in a given set will continue.)

   Arguments in the input can be separated by unquoted,
   unescaped white space (spaces, tabs, carriage returns or
   newlines).  Quotes can be used around any text containing
   spaces or tabs.  An escape character can be used at the
   end of a line to embed a carriage return-newline sequence.

   The generated command line length is the sum of the size in
   bytes of the utility name and each argument, including a
   space between each argument, a terminating null at the
   end, and any quotes or escape characters as may be
   dictated by the operating system conventions for embedding
   any special characters.

Options:

   -C            Start up a copy of C shell to run each command.
   -t            Trace mode.  Each generated command line is
                 written to stderr just prior to invocation.
   -T            Change the title bar for each iteration.
   -x            Terminate if a command line containing the
                 number of arguments specified with the -n option
                 will not fit on the implied or specified command
                 line.
   -o&lt;opt&gt;       Additional startup options for the C shell.  For
                 example, to get a fast startup, use -oF.
   -e&lt;escape&gt;    Escape character.  By default, xargs will use
                 the character specified by the ESCAPESYM
                 environment variable (if defined) or, if not
                 defined, the circumflex ("^").
   -X &lt;errlimit&gt; Error limit.  If a child command exits with
                 a return code greater than the specified
                 &lt;errlimit&gt;, xargs will exit with that return
                 code from the child.  By default, xargs will
                 exit with the first return code &gt; 1.
   -n &lt;number&gt;   Invoke &lt;utility&gt; with up to &lt;number&gt; arguments.
                 Fewer arguments are used if (a) the command
                 line length exceeds the size limit or (b) the
                 last iteration contains fewer, but not zero
                 operands.  By default, there is no &lt;number&gt;
                 limit.
   -s &lt;size&gt;     Invoke &lt;utility&gt; using as many arguments as
                 possible to produce a command line less than
                 &lt;size&gt; bytes in length.  Fewer arguments
                 are used if (a) the total number of arguments
                 exceeds the &lt;number&gt; limit or (b) end-of-file
                 is encountered on stdin before &lt;size&gt; bytes
                 are accumulated.  By default, there is a
                 &lt;size&gt; limit of 32280 characters for a Win32,
                 POSIX or OS/2 application; for a DOS or Win3.x
                 application, the limit is 110 characters.  If
                 the C shell is being invoked to run a command
                 that's suspected to be a C shell alias, xargs
                 reduces the 32280 limit by 1024 characters to
                 allow for possible expansion.
   -r&lt;string&gt;    Replace the first argument word which consists
                 of only the specified string with argument
                 words read from stdin.  Default string is "%%".
   &lt;utility&gt;     The name of the utility to be invoked.  This
                 can be a fully-qualified or relative pathname
                 or a name resolved by searching the directories
                 listed in the PATH environment variable.  As
                 needed, xargs will look for files with a .csh,
                 .exe, .com or .cmd or .bat extension, auto-
                 matically invoking the C shell for .csh files
                 and the standard command processor for .cmd or
                 .bat files.  If a suitable executable file
                 cannot be found, xargs will assume it may be
                 a C shell alias or built-in command.  If no
                 utility is specified, a built-in echo utility
                 is used.
   &lt;arguments&gt;   Initial options or operands to &lt;utility&gt;.

   -h            Help.  (This screen.)
   --            End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="whoami.htm">Previous</a> |
<a href="xd.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		xd
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				xd
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm"><b>xd</b></a></li>
				<li><a href="xor.htm">xor</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
xd<br/>
<small><a href="xargs.htm">Previous</a> |
<a href="xor.htm">Next</a></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        Hex Dump a File to Stdout

Usage:  xd [-hbwlFD Zdxor nNq-] [-r&lt;radix&gt;]
              [-O &lt;offset&gt;] [-E &lt;endset&gt;] [-L[&lt;items&gt;]]
              [ file1 file2 ... ]

   xd dumps its input, presumed to be in binary, in variety of
   formats, the default being hex.  If more than one file is
   given, each is dumped in sequence.  If no files are specified,
   xd reads from stdin.  Sequences of lines containing the same
   data are collapsed out and replaced by an asterisk.

Options:

   -h          Help.  (This screen.)

  Basic display formats:

   -b          Bytes.  (Default.)
   -w          16-bit words.
   -l          32-bit long words.
   -F          Short 4-byte floating point.  Floating point values
               are always displayed in decimal.
   -D          Double-precision 8-byte floating point.
   -Z          Suppress leading zeros.  Normally, leading zeros
               are shown except when displaying in decimal.

  Radix to be used for reporting offsets and data:

   -d          Decimal (unsigned).
   -x          Hex.
   -o          Octal.
   -r&lt;radix&gt;   User-specified radix.  If a radix &lt; 8 is chosen,
               offsets are always shown in hex.

  Other options:

   -O &lt;offset&gt; Offset at which to begin dumping.
   -E &lt;endset&gt; Offset at which to stop dumping.
   -L[&lt;items&gt;] Number of items (bytes, words, etc.) to dump.  If
               -L is specified, the default is one.
   -n          No ascii column.
   -N          No offset column.
   -q          Quiet mode.  Don't announce the name of each file
               as it's read.
   -v          Verbose.  Show lines of repeated data.
   --          End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="xargs.htm">Previous</a> |
<a href="xor.htm">Next</a></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>
		xor
	</title>
	
	<link href="../Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="../Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="../favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a> &#9655;
				<a href="../index.htm">User guide</a> &#9655;
				<a href="../51-ExternalUtilities.htm">External utilities</a>
			</h4>
			<h2>
				xor
			</h2>
			<a href="../Images/OregonCoast-09-07-2004.jpg">
				<img src="../images/OregonCoast10-to-1slice.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		
		<div id="navigation">
			<ul>
				<li><a href="../index.htm">User guide</a></li>
				<li><a href="../04-Tutorial.htm">Tutorials</a></li>
				<li><a href="../17-LanguageReference.htm">Language reference</a></li>
				<li><a href="../49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="../50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="../51-ExternalUtilities.htm"><b>External utilities</b></a></li>
				<li><a href="../52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="../53-Samples.htm">Samples</a></li>
				<li><a href="../01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>External utilities</p></li>
				<li><a href="binedit.htm">binedit</a></li>
				<li><a href="cat.htm">cat</a></li>
				<li><a href="chgrp.htm">chgrp</a></li>
				<li><a href="chmod.htm">chmod</a></li>
				<li><a href="chown.htm">chown</a></li>
				<li><a href="cmp.htm">cmp</a></li>
				<li><a href="cp.htm">cp</a></li>
				<li><a href="cron.htm">cron</a></li>
				<li><a href="csh.htm">csh</a></li>
				<li><a href="cut.htm">cut</a></li>
				<li><a href="date.htm">date</a></li>
				<li><a href="des.htm">des</a></li>
				<li><a href="diff.htm">diff</a></li>
				<li><a href="dim.htm">dim</a></li>
				<li><a href="dirbox.htm">dirbox</a></li>
				<li><a href="directory.htm">directory</a></li>
				<li><a href="dskread.htm">dskread</a></li>
				<li><a href="dskwrite.htm">dskwrite</a></li>
				<li><a href="du.htm">du</a></li>
				<li><a href="env.htm">env</a></li>
				<li><a href="exec.htm">exec</a></li>
				<li><a href="fgrep.htm">fgrep</a></li>
				<li><a href="filebox.htm">filebox</a></li>
				<li><a href="getopt.htm">getopt</a></li>
				<li><a href="grep.htm">grep</a></li>
				<li><a href="head.htm">head</a></li>
				<li><a href="label.htm">label</a></li>
				<li><a href="listreg.htm">listreg</a></li>
				<li><a href="ln.htm">ln</a></li>
				<li><a href="ls.htm">ls</a></li>
				<li><a href="mkdir.htm">mkdir</a></li>
				<li><a href="more.htm">more</a></li>
				<li><a href="mt.htm">mt</a></li>
				<li><a href="mv.htm">mv</a></li>
				<li><a href="newer.htm">newer</a></li>
				<li><a href="older.htm">older</a></li>
				<li><a href="open.htm">open</a></li>
				<li><a href="paste.htm">paste</a></li>
				<li><a href="pwd.htm">pwd</a></li>
				<li><a href="random.htm">random</a></li>
				<li><a href="rm.htm">rm</a></li>
				<li><a href="rmdir.htm">rmdir</a></li>
				<li><a href="sed.htm">sed</a></li>
				<li><a href="setrows.htm">setrows</a></li>
				<li><a href="setwin.htm">setwin</a></li>
				<li><a href="shortcut.htm">shortcut</a></li>
				<li><a href="showdesk.htm">showdesk</a></li>
				<li><a href="sort.htm">sort</a></li>
				<li><a href="split.htm">split</a></li>
				<li><a href="strings.htm">strings</a></li>
				<li><a href="su.htm">su</a></li>
				<li><a href="sum.htm">sum</a></li>
				<li><a href="tabs.htm">tabs</a></li>
				<li><a href="tail.htm">tail</a></li>
				<li><a href="tar.htm">tar</a></li>
				<li><a href="tee.htm">tee</a></li>
				<li><a href="touch.htm">touch</a></li>
				<li><a href="tr.htm">tr</a></li>
				<li><a href="uniq.htm">uniq</a></li>
				<li><a href="uudecode.htm">uudecode</a></li>
				<li><a href="uuencode.htm">uuencode</a></li>
				<li><a href="ver.htm">ver</a></li>
				<li><a href="vol.htm">vol</a></li>
				<li><a href="wc.htm">wc</a></li>
				<li><a href="whereis.htm">whereis</a></li>
				<li><a href="whoami.htm">whoami</a></li>
				<li><a href="xargs.htm">xargs</a></li>
				<li><a href="xd.htm">xd</a></li>
				<li><a href="xor.htm"><b>xor</b></a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">

<h3>
xor<br/>
<small><a href="xd.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

<table>
<tr>
<td>
<pre><tt>        XOR Files to Stdout

Usage:  xor [-qh-] file1 [ file2 ]

   xor performs a bytewise exclusive-OR of the contents of two files,
   thus performing a one-time pad, writing the result to stdout.  If
   only one file is specified, the second file is read from stdin.

   If the two files differ in length, the output is truncated to the
   length of the shorter file.  When it truncates, xor writes an error
   message and exits with a status code reflecting the end-of-file
   condition unless -q is specified.

Options:

   -q         Quiet.  It's not an error if the input files have
              differing lengths.  xor will truncate silently.
   -h         Help.  (This screen.)
   --         End of options.

</tt></pre>
</td>
</tr>
</table>

<h3>
<small><a href="xd.htm">Previous</a> <span class="grey">|
Next</span></small>
</h3>

		</div>
		<div id="userguidescreenshots">
		
		</div>
		<div id="footer">
			<img src="../images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	
	<title>User guide</title>
	
	<link href="Styles/Hamilton.css" rel="stylesheet" type="text/css" />
	<link href="Styles/PrintStyles.css" rel="stylesheet" media="print" type="text/css" />
	<link href="favicon.ico" rel="shortcut icon" />
	<meta name="DC.Rights" content="Copyright 2012-2014 Hamilton Laboratories"/>
	
	<meta name="description" content="Hamilton Laboratories offers tools for
	professional software developers world-wide.  Our main product is
	Hamilton C shell, a tools package that recreates the original UNIX C shell
	and utilities completely from scratch on Windows."/>
	
	<meta name="keywords" content="Hamilton Labs, Hamilton C shell, csh, tcsh, C shell, shell,
	history, commands, filename completion, command-line editing, scripting, scripts,  batch,
	language, tools, software development, utilities,  Unix, grep, ls, sed, diff, cron, tar, su,
	tape archive, superuser, encryption, 32-bit, 64-bit, Microsoft Windows, Windows NT,
	Windows XP, Vista, Windows 7, GNU, Linux, Posix"/>
	<style type="text/css">
	.auto-style1 {
	   margin-right: 122px;
	}
	</style>
</head>

<body>
	<div id="container">
		<div id="masthead">
			<h4>
				<a href="https://hamiltonlabs.com">Hamilton Laboratories</a> &#9655;
				<a href="https://hamiltonlabs.com/Cshell.htm">Hamilton C shell 2012</a>
			</h4>
			<h2>
				User guide
			</h2>
			<a href="Images/OregonCoast-09-07-2004.jpg">
				<img src="Images/OregonCoastHalfSlice1400x210.jpg" alt="Oregon Coast" class="shadow" />
			</a>
		</div>
		<div id="navigation">
			<ul>
				<li><a href="index.htm"><b>User guide</b></a></li>
				<li><a href="04-Tutorial.htm">Tutorials</a></li>
				<li><a href="17-LanguageReference.htm">Language reference</a></li>
				<li><a href="49-BuiltinProcedures.htm">Builtin procedures</a></li>
				<li><a href="50-BuiltinUtilities.htm">Builtin utilities</a></li>
				<li><a href="51-ExternalUtilities.htm">External utilities</a></li>
				<li><a href="52-PredefinedAliases.htm">Predefined aliases</a></li>
				<li><a href="53-Samples.htm">Samples</a></li>
				<li><a href="01-Preface.htm">Other topics</a></li>
			</ul>
			<hr/>
			<ul>
				<li><p>Other topics</p></li>
				<li><a href="01-Preface.htm">Preface</a></li>
				<li><a href="02-Introduction.htm">Introduction</a></li>
				<li><a href="03-Installation.htm">Installation</a></li>
				<li><a href="54-AwkPerlAndVi.htm">Awk, perl and vi</a></li>
				<li><a href="54.1-UsingWithCygwin.htm">Using with Cygwin</a></li>
				<li><a href="55-Compatibility.htm">Compatibility</a></li>
				<li><a href="56-CommonProblems.htm">Common problems</a></li>
				<li><a href="59-ReleaseNotes.htm">Release notes</a></li>
				<li><a href="60-License.htm">License</a></li>
				<li><a href="61-Support.htm">Support</a></li>
			</ul>
		</div>
		
		<div id="userguidecontent">
			
<h2 style="line-height: 18px">
Hamilton C shell 2012 user guide<br/>
<small><span class="grey">Previous |</span> <a href="01-Preface.htm">Next</a></small>
</h2>

<p class="sanserif" style="text-align: left">
Hamilton C shell 2012 recreates the original Unix C shell and utilities completely
from scratch on Windows, adding numerous enhancements.
</p>

<p class="sanserif" style="text-align: left">
This user guide is roughly half tutorial and half reference material.  The tutorial is
designed to teach you how to use Hamilton C shell.  Each topic uses lots of examples
and narrative to explain how things work.  The language reference is just that:
Reference material, organized mostly as tables to help find answers fast.
</p>

<h4>
<a name="SeeAlso"></a>See also
</h4>

<p>
<a href="03-Installation.htm">Installation</a><br/>
<a href="04-Tutorial.htm">Tutorials</a><br/>
<a href="17-LanguageReference.htm">Language reference</a><br/>
</p>


<h3>
<small><span class="grey">Previous |</span> <a href="01-Preface.htm">Next</a></small>
</h3>
			
<p style="margin-top: 35px" class="sansserif">
<small>Copyright &copy; 2013-2014 Hamilton Laboratories.</small>
</p>

		</div>
		<div id="userguidescreenshots">
			<a href="Images/Screenshots/HamiltonCshellStartup.png">
				<img src="Images/Screenshots/HamiltonCshellStartup.gif"
					alt="Getting started with Hamilton C shell" class="shadow"/>
			</a>
			<p>
			Hamilton C shell, as it first wakes up.
			</p>
		</div>
		<div id="footer">
			<img src="Images/WhiteDot1000x1.png" alt="white dot"/>
		</div>
	</div>
</body>
</html>
