# utility files and directories
UINCLUDE = ../../utility/include
USRC = ../../utility/src
UOBJ = $(USRC)/obj
UHEADERS = $(wildcard $(UINCLUDE)/*.h)  # utility header files
USRCF = $(wildcard $(USRC)/*.cpp)
UOBJF = $(patsubst %.cpp,$(UOBJ)/%.o,$(USRCF))

# crawler files and directories
CINCLUDE = ../include
COBJ = obj
CHEADERS = $(wildcard $(CINCLUDE)/*.h)  # utility header files
_CSRCF = $(wildcard *.cpp)  # utility source files
CSRCF = $(filter-out FrontierOpt.cpp,$(_CSRCF))  # exclude FrontierOpt.cpp
COBJF = $(patsubst %.cpp,$(COBJ)/%.o,$(CSRCF))  # utility object files

# compile flags
CXX = g++
CXXFLAGS = -std=c++11 -g -I$(UINCLUDE) -I$(CINCLUDE)
LIBS = -lz -lssl -lcrypto -pthread

# dependencies - all utility object files and all header files
DEPS = $(UOBJF) $(CHEADERS)

all: $(COBJF)

# update utility object files if any change in their source or headers
$(UOBJ)/%.o: $(USRC)/%.cpp $(UHEADERS)
	$(CXX) -c $(CXXFLAGS) $(LIBS) $< -o $@

# compute the object files
$(COBJ)/%.o: %.cpp $(DEPS)
	$(CXX) -c $(CXXFLAGS) $(LIBS) $< -o $@

.PHONY: clean

clean:
	rm -f $(COBJ)/*.o